{"version":3,"file":"static/chunks/pages/index-8fe7aac20923d6e3.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./helpers/createShortcuts.ts","webpack://_N_E/./helpers/getActiveModals.ts","webpack://_N_E/./helpers/modalsAreActive.ts","webpack://_N_E/./helpers/executeShortcuts.ts","webpack://_N_E/./helpers/createDateRange.ts","webpack://_N_E/./helpers/login.ts","webpack://_N_E/./helpers/getToken.ts","webpack://_N_E/./helpers/getUser.ts","webpack://_N_E/./helpers/profile/createProfile.ts","webpack://_N_E/./helpers/profile/subscribeToProfile.ts","webpack://_N_E/./helpers/extractData.ts","webpack://_N_E/./hooks/useData.ts","webpack://_N_E/./hooks/useLogoutOtherTab.ts","webpack://_N_E/./helpers/isIpad.ts","webpack://_N_E/./helpers/isMobile.ts","webpack://_N_E/./helpers/isPWA.ts","webpack://_N_E/./hooks/usePWAPrompt.ts","webpack://_N_E/./hooks/useShortcuts.ts","webpack://_N_E/./helpers/getDomain.ts","webpack://_N_E/./hooks/useStartTime.ts","webpack://_N_E/./helpers/getLoginStatus.ts","webpack://_N_E/./helpers/createWebsocketClient.ts","webpack://_N_E/./helpers/getWebsocketClient.ts","webpack://_N_E/./helpers/isLoadedUser.ts","webpack://_N_E/./hooks/useSubscription.tsx","webpack://_N_E/./hooks/useUser.ts","webpack://_N_E/./helpers/profileIsLoaded.ts","webpack://_N_E/./components/spinner/Spinner.tsx","webpack://_N_E/./components/body/Body.tsx","webpack://_N_E/./components/bottom-bar/BottomBar.tsx","webpack://_N_E/./assets/common/barcode.svg","webpack://_N_E/./assets/common/exercise.svg","webpack://_N_E/./assets/common/fast.svg","webpack://_N_E/./assets/common/hamburger.svg","webpack://_N_E/./assets/common/magnify.svg","webpack://_N_E/./components/buttons/HiddenInput.tsx","webpack://_N_E/./components/bottom-bar-buttons/BottomBarButtons.tsx","webpack://_N_E/./models/log.ts","webpack://_N_E/./components/list/Log/helpers/sortByCreatedAt.ts","webpack://_N_E/./assets/common/barcode-without-scanner.svg","webpack://_N_E/./helpers/log/deleteLogOnCloud.ts","webpack://_N_E/./helpers/log/updateLogOnCloud.ts","webpack://_N_E/./assets/common/trash.svg","webpack://_N_E/./components/item/components/DeleteButton.tsx","webpack://_N_E/./helpers/capitalize.ts","webpack://_N_E/./models/food.ts","webpack://_N_E/./constants/categories.ts","webpack://_N_E/./components/standard-adder/helpers/addCategoryToDummyFood.ts","webpack://_N_E/./components/standard-adder/helpers/addGroupToDummyFood.ts","webpack://_N_E/./components/standard-adder/helpers/createDummyFood.ts","webpack://_N_E/./constants/dummyFoods/bean.ts","webpack://_N_E/./constants/dummyFoods/beef.ts","webpack://_N_E/./constants/dummyFoods/bread.ts","webpack://_N_E/./constants/dummyFoods/butter.ts","webpack://_N_E/./constants/dummyFoods/cheese.ts","webpack://_N_E/./constants/dummyFoods/chicken.ts","webpack://_N_E/./constants/dummyFoods/dairy.ts","webpack://_N_E/./constants/dummyFoods/dough.ts","webpack://_N_E/./constants/dummyFoods/driedFruit.ts","webpack://_N_E/./constants/dummyFoods/driedHerb.ts","webpack://_N_E/./constants/dummyFoods/flour.ts","webpack://_N_E/./constants/dummyFoods/grains.ts","webpack://_N_E/./constants/dummyFoods/groundMeat.ts","webpack://_N_E/./constants/dummyFoods/jerky.ts","webpack://_N_E/./constants/dummyFoods/lamb.ts","webpack://_N_E/./constants/dummyFoods/lentils.ts","webpack://_N_E/./constants/dummyFoods/lettuce.ts","webpack://_N_E/./constants/dummyFoods/noodles.ts","webpack://_N_E/./constants/dummyFoods/nutMilk.ts","webpack://_N_E/./constants/dummyFoods/organMeat.ts","webpack://_N_E/./constants/dummyFoods/pasta.ts","webpack://_N_E/./constants/dummyFoods/pea.ts","webpack://_N_E/./constants/dummyFoods/pepper.ts","webpack://_N_E/./constants/dummyFoods/pork.ts","webpack://_N_E/./constants/dummyFoods/proteinPowder.ts","webpack://_N_E/./constants/dummyFoods/ribs.ts","webpack://_N_E/./constants/dummyFoods/rice.ts","webpack://_N_E/./constants/dummyFoods/tortilla.ts","webpack://_N_E/./constants/dummyFoods/turkey.ts","webpack://_N_E/./constants/dummyFoods/vinegar.ts","webpack://_N_E/./constants/dummyFoods/wine.ts","webpack://_N_E/./constants/dummyFoods/dummyFoods.ts","webpack://_N_E/./components/standard-adder/helpers/getAllDummyFoodLeaves.ts","webpack://_N_E/./components/standard-adder/helpers/isDummyFood.ts","webpack://_N_E/./components/standard-adder/helpers/getDummyFoodPath.ts","webpack://_N_E/./components/standard-adder/helpers/getDummyFoodTree.ts","webpack://_N_E/./components/item/helpers/getThreshold.ts","webpack://_N_E/./components/item/helpers/getNameAndTags.tsx","webpack://_N_E/./assets/common/calmini.svg","webpack://_N_E/./assets/common/density.svg","webpack://_N_E/./assets/common/proteinmini.svg","webpack://_N_E/./components/macros/Macros.tsx","webpack://_N_E/./components/item/helpers/renderMacros.tsx","webpack://_N_E/./components/item/helpers/spawnItemEditModal.tsx","webpack://_N_E/./components/item/components/Amount.tsx","webpack://_N_E/./components/item/components/ConsumeButton.tsx","webpack://_N_E/./components/item/components/Tags.tsx","webpack://_N_E/./components/item/helpers/makeUnitPretty.ts","webpack://_N_E/./components/item/components/UnitInput.tsx","webpack://_N_E/./components/item/components/Meta.tsx","webpack://_N_E/./assets/common/pencil.svg","webpack://_N_E/./components/item/helpers/spawnInstanceEditModal.tsx","webpack://_N_E/./components/item/components/UpdateButton.tsx","webpack://_N_E/./components/item/Item.tsx","webpack://_N_E/./components/list/Log/LogItem.tsx","webpack://_N_E/./assets/common/calculator.svg","webpack://_N_E/./assets/common/edit.svg","webpack://_N_E/./assets/common/food.svg","webpack://_N_E/./assets/common/foodbowl.svg","webpack://_N_E/./assets/common/mortarboard.svg","webpack://_N_E/./assets/common/recipe.svg","webpack://_N_E/./assets/common/sunrise.svg","webpack://_N_E/./components/list/Log/Shell.tsx","webpack://_N_E/./components/list/Log/LogList.tsx","webpack://_N_E/./helpers/zipObject.ts","webpack://_N_E/./components/divider/Divider.tsx","webpack://_N_E/./components/list/Unit/helpers/getTotals.ts","webpack://_N_E/./components/list/Unit/helpers/getUnitLogs.ts","webpack://_N_E/./components/list/Unit/helpers/getCombinedLogs.ts","webpack://_N_E/./components/list/Unit/helpers/getCount.ts","webpack://_N_E/./helpers/log/deleteLogsOnCloud.ts","webpack://_N_E/./components/list/helpers/formatUnitAsTitle.tsx","webpack://_N_E/./assets/common/calorie.svg","webpack://_N_E/./assets/common/fastexercise.svg","webpack://_N_E/./assets/common/protein.svg","webpack://_N_E/./components/list/helpers/selectUnitImage.tsx","webpack://_N_E/./components/list/Unit/UnitItem.tsx","webpack://_N_E/./components/list/Unit/UnitList.tsx","webpack://_N_E/./helpers/getDispatch.ts","webpack://_N_E/./helpers/isMobileSafari.ts","webpack://_N_E/./helpers/isNumeric.ts","webpack://_N_E/./components/scanner/helpers.js","webpack://_N_E/./components/scanner/transformers/base.js","webpack://_N_E/./components/scanner/components/scan.js","webpack://_N_E/./assets/common/check.svg","webpack://_N_E/./components/item-modal/components/SubmitButton.tsx","webpack://_N_E/./components/standard-adder/components/ButtonPanel.tsx","webpack://_N_E/./components/fraction-input/FractionInput.tsx","webpack://_N_E/./components/list/helpers/getPrettyUnits.tsx","webpack://_N_E/./components/meal-input/MealInput.tsx","webpack://_N_E/./components/select/Select.tsx","webpack://_N_E/./components/standard-adder/components/InputFields.tsx","webpack://_N_E/./helpers/Food/addFoodToCloud.ts","webpack://_N_E/./models/ingredient.ts","webpack://_N_E/./helpers/ingredient/addIngredient.ts","webpack://_N_E/./helpers/log/addLogToCloud.ts","webpack://_N_E/./components/standard-adder/helpers/addLog.ts","webpack://_N_E/./components/standard-adder/helpers/submitEditor.ts","webpack://_N_E/./components/barcode-modal/BarcodeModal.tsx","webpack://_N_E/./components/forms/BodyFatPercentageForm/helpers/calculateBFUsingNavyMethod.ts","webpack://_N_E/./components/forms/BodyFatPercentageForm/BodyFatPercentageForm.tsx","webpack://_N_E/./helpers/Food/updateFoodOnCloud.ts","webpack://_N_E/./helpers/convertToNumber.ts","webpack://_N_E/./helpers/prepareFractionalInputForSubmission.ts","webpack://_N_E/./components/macros/helpers/mapTbspToOtherVolumeUnit.ts","webpack://_N_E/./components/forms/CustomFoodForm/helpers/getAdjustedVolumeAmount.ts","webpack://_N_E/./components/macros/helpers/convertToImperialFromGrams.ts","webpack://_N_E/./components/forms/CustomFoodForm/helpers/getAdjustedWeightAmount.ts","webpack://_N_E/./components/forms/CustomFoodForm/UnitSelector.tsx","webpack://_N_E/./components/forms/CustomFoodForm/CustomFoodForm.tsx","webpack://_N_E/./helpers/log/addQuickLogToCloud.ts","webpack://_N_E/./components/forms/ExerciseForm/constants.ts","webpack://_N_E/./components/forms/ExerciseForm/helpers/calculateCaloriesFromMETs.ts","webpack://_N_E/./components/forms/ExerciseForm/helpers/getCyclingMET.ts","webpack://_N_E/./components/forms/ExerciseForm/helpers/getRowingMET.ts","webpack://_N_E/./components/forms/ExerciseForm/helpers/getRunningMET.ts","webpack://_N_E/./components/forms/ExerciseForm/helpers/getWalkingMET.ts","webpack://_N_E/./components/forms/ExerciseForm/helpers/getMETsFromInput.ts","webpack://_N_E/./components/forms/ExerciseForm/ExerciseForm.tsx","webpack://_N_E/./components/paginator/helpers/splitIntoPages.ts","webpack://_N_E/./assets/common/leftArrow.svg","webpack://_N_E/./assets/common/rightArrow.svg","webpack://_N_E/./components/paginator/Paginator.tsx","webpack://_N_E/./helpers/Food/deleteFoodOnCloud.ts","webpack://_N_E/./components/list/Food/FoodItem.tsx","webpack://_N_E/./components/list/Ingredient/IngredientItem.tsx","webpack://_N_E/./helpers/recipes/deleteRecipeOnCloud.ts","webpack://_N_E/./components/list/Recipe/RecipeItem.tsx","webpack://_N_E/./components/list/List/helpers/getItem.tsx","webpack://_N_E/./components/list/List/helpers/getNumberOfItems.ts","webpack://_N_E/./components/list/List/List.tsx","webpack://_N_E/./components/list/Ingredient/IngredientList.tsx","webpack://_N_E/./components/forms/helpers/upsertItem.ts","webpack://_N_E/./models/recipe.ts","webpack://_N_E/./components/forms/RecipeForm/helpers/createRecipeLog.ts","webpack://_N_E/./helpers/recipes/addRecipeToCloud.ts","webpack://_N_E/./helpers/recipes/updateRecipeOnCloud.ts","webpack://_N_E/./components/forms/RecipeForm/helpers/addIngredients.ts","webpack://_N_E/./components/forms/RecipeForm/helpers/formatIngredient.ts","webpack://_N_E/./components/forms/RecipeForm/helpers/formatDataForMutation.ts","webpack://_N_E/./components/forms/RecipeForm/helpers/submitRecipe.ts","webpack://_N_E/./components/forms/RecipeForm/RecipeForm.tsx","webpack://_N_E/./helpers/profile/updateProfileOnCloud.ts","webpack://_N_E/./components/forms/CalculateTargetForm/helpers/calculateBMRUsingKatchMcardle.ts","webpack://_N_E/./components/forms/CalculateTargetForm/helpers/calculateBMI.ts","webpack://_N_E/./components/forms/CalculateTargetForm/helpers/calculateBodyFatPercentageUsingCUN_BAE.ts","webpack://_N_E/./components/forms/CalculateTargetForm/helpers/calculateIdealBodyWeightInKg.ts","webpack://_N_E/./components/forms/CalculateTargetForm/helpers/calculateTargets.ts","webpack://_N_E/./components/forms/CalculateTargetForm/CalculateTargetForm.tsx","webpack://_N_E/./components/forms/TargetForm/TargetForm.tsx","webpack://_N_E/./assets/common/trashcan.svg","webpack://_N_E/./helpers/profile/deleteProfile.ts","webpack://_N_E/./components/settings/DeleteAccount.tsx","webpack://_N_E/./components/settings/Information.tsx","webpack://_N_E/./components/settings/Settings.tsx","webpack://_N_E/./components/help/Help.tsx","webpack://_N_E/./components/information-modal/InformationModal.tsx","webpack://_N_E/./assets/common/back.svg","webpack://_N_E/./components/standard-adder/components/Meta.tsx","webpack://_N_E/./components/standard-adder/components/SearchResults.tsx","webpack://_N_E/./components/standard-adder/helpers/getDefaultUnit.tsx","webpack://_N_E/./components/standard-adder/components/SelectedItem.tsx","webpack://_N_E/./components/standard-adder/helpers/mapNameToDummyFood.ts","webpack://_N_E/./components/standard-adder/StandardAdder.tsx","webpack://_N_E/./components/ingredient-modal/IngredientModal.tsx","webpack://_N_E/./components/item/helpers/createDefaultItem.tsx","webpack://_N_E/./components/item-modal/components/Meta.tsx","webpack://_N_E/./components/list/helpers/renderUnitComponent.tsx","webpack://_N_E/./components/item/helpers/convertItemToIngredient.ts","webpack://_N_E/./components/item/helpers/convertItemToLog.ts","webpack://_N_E/./components/macros/helpers/convertFromGramsToCount.ts","webpack://_N_E/./components/macros/helpers/convertFromGramsToVolume.ts","webpack://_N_E/./components/macros/helpers/convertFromGramsToWeight.ts","webpack://_N_E/./components/macros/helpers/convertFromGrams.ts","webpack://_N_E/./components/macros/helpers/convertFromUnitToNewUnit.ts","webpack://_N_E/./components/macros/helpers/getAmountFromNewUnit.ts","webpack://_N_E/./components/item-modal/helpers/updateUnit.ts","webpack://_N_E/./components/item-modal/components/UnitInput.tsx","webpack://_N_E/./components/item-modal/helpers/submitItem.tsx","webpack://_N_E/./components/item-modal/ItemModal.tsx","webpack://_N_E/./components/list/Food/FoodList.tsx","webpack://_N_E/./components/list/Recipe/RecipeList.tsx","webpack://_N_E/./assets/common/logout.svg","webpack://_N_E/./assets/common/review.svg","webpack://_N_E/./assets/common/settings.svg","webpack://_N_E/./components/menu/Menu.tsx","webpack://_N_E/./assets/common/return-arrow.svg","webpack://_N_E/./helpers/getAnimationDuration.ts","webpack://_N_E/./components/modal/helpers/sidebarPresent.ts","webpack://_N_E/./components/modal/Modal.tsx","webpack://_N_E/./assets/common/chrome-share.svg","webpack://_N_E/./assets/common/safari-share.svg","webpack://_N_E/./assets/logo-circle.svg","webpack://_N_E/./components/pwa-prompt/PWAPrompt.tsx","webpack://_N_E/./components/standard-adder/helpers/addQuickAddLog.ts","webpack://_N_E/./components/quick-adder/QuickAdder.tsx","webpack://_N_E/./components/list/Unit/helpers/updateUnitLogsOnCloud.ts","webpack://_N_E/./components/unit-modal/UnitModal.tsx","webpack://_N_E/./components/modals/getOrderedModal.ts","webpack://_N_E/./components/modals/styling.ts","webpack://_N_E/./components/modals/Modals.tsx","webpack://_N_E/./components/numbers/Numbers.tsx","webpack://_N_E/./components/top-bar/TopBar.tsx","webpack://_N_E/./components/app/App.tsx","webpack://_N_E/./components/login/LegalDisclaimer.tsx","webpack://_N_E/./components/login/FirebaseLoginButtons.tsx","webpack://_N_E/./components/login/TokenLoginButtons.tsx","webpack://_N_E/./components/login/LoginPanel.tsx","webpack://_N_E/./components/login/Login.tsx","webpack://_N_E/./helpers/sleep.ts","webpack://_N_E/./helpers/validateToken.ts","webpack://_N_E/./hooks/useAuthentication.ts","webpack://_N_E/./hooks/useOffline.tsx","webpack://_N_E/./hooks/useOfflineStatus.ts","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { getStore } from './getStore'\n\nexport type KeyboardShortcutKeys = 'b' | 'e' | 'f' | 'h' | 'l' | 'm' | 'q' | 'r'\n\nexport type Key =\n  | 'Backspace'\n  | 'Tab'\n  | 'Enter'\n  | 'Shift'\n  | 'Control'\n  | 'Alt'\n  | 'CapsLock'\n  | 'Escape'\n  | ' '\n  | 'PageUp'\n  | 'PageDown'\n  | 'End'\n  | 'Home'\n  | 'ArrowLeft'\n  | 'ArrowUp'\n  | 'ArrowRight'\n  | 'ArrowDown'\n  | 'Left'\n  | 'Up'\n  | 'Right'\n  | 'Down'\n  | 'Insert'\n  | 'Delete'\n  | '0'\n  | ')'\n  | '1'\n  | '!'\n  | '2'\n  | '@'\n  | '3'\n  | '£'\n  | '#'\n  | '4'\n  | '$'\n  | '5'\n  | '%'\n  | '6'\n  | '^'\n  | '^'\n  | '7'\n  | '&'\n  | '8'\n  | '*'\n  | '*'\n  | '9'\n  | '('\n  | 'a'\n  | 'b'\n  | 'c'\n  | 'd'\n  | 'e'\n  | 'f'\n  | 'g'\n  | 'h'\n  | 'i'\n  | 'j'\n  | 'k'\n  | 'l'\n  | 'm'\n  | 'n'\n  | 'o'\n  | 'p'\n  | 'q'\n  | 'r'\n  | 's'\n  | 't'\n  | 'u'\n  | 'v'\n  | 'w'\n  | 'x'\n  | 'y'\n  | 'z'\n  | 'A'\n  | 'B'\n  | 'C'\n  | 'D'\n  | 'E'\n  | 'F'\n  | 'G'\n  | 'H'\n  | 'I'\n  | 'J'\n  | 'K'\n  | 'L'\n  | 'M'\n  | 'N'\n  | 'O'\n  | 'P'\n  | 'Q'\n  | 'R'\n  | 'S'\n  | 'T'\n  | 'U'\n  | 'V'\n  | 'W'\n  | 'X'\n  | 'Y'\n  | 'Z'\n  | 'Meta'\n  | 'Meta'\n  | 'Meta'\n  | '0'\n  | '1'\n  | '2'\n  | '3'\n  | '4'\n  | '5'\n  | '6'\n  | '7'\n  | '8'\n  | '9'\n  | '*'\n  | '+'\n  | '-'\n  | '.'\n  | 'Decimal'\n  | '/'\n  | 'F1'\n  | 'F2'\n  | 'F3'\n  | 'F4'\n  | 'F5'\n  | 'F6'\n  | 'F7'\n  | 'F8'\n  | 'F9'\n  | 'F10'\n  | 'F11'\n  | 'F12'\n  | 'NumLock'\n  | 'ScrollLock'\n  | ';'\n  | '='\n  | ','\n  | '-'\n  | '.'\n  | '_'\n  | '+'\n  | '/'\n  | '~'\n  | '`'\n  | '['\n  | ']'\n\n/** Create the object mapping the key pressed to the dispatcher */\nexport const createKeyboardShortcutDirectory = () => {\n  const dispatch = getStore().dispatch\n  const keyboardShortcutDirectory: Record<KeyboardShortcutKeys, () => void> = {\n    b: () => {\n      dispatch('openBarcodeModal')\n    },\n    e: () => {\n      dispatch('openExerciseModal')\n    },\n    f: () => {\n      dispatch('openFoodModal')\n    },\n    h: () => {\n      dispatch('openHelpModal')\n    },\n    l: () => {\n      dispatch('openModal')\n    },\n    m: () => {\n      dispatch('openMenu')\n    },\n    q: () => {\n      dispatch('openQuickAddModal')\n    },\n    r: () => {\n      dispatch('openRecipeModal')\n    },\n  }\n  return keyboardShortcutDirectory\n}\n","import { getStore } from './getStore'\n\n/** Get all modals currently spawned by the navbar  */\nexport const getActiveModals = () => {\n  return getStore().get().navbar.activeModals\n}\n","import { getActiveModals } from './getActiveModals'\n\n/** Check if any of the modals controlled by the navbar are current spawned.\n * If any are, return true. Otherwise, return false. */\nexport const modalsAreActive = (): boolean => {\n  return getActiveModals().length > 0\n}\n","import { closeAllModals } from './closeAllModals'\nimport {\n  createKeyboardShortcutDirectory,\n  Key,\n  KeyboardShortcutKeys,\n} from './createShortcuts'\nimport { modalsAreActive } from './modalsAreActive'\n\n/** Add the global keyboard shortcut handling functions to the window */\nexport const executeKeyboardShortcuts = (event: KeyboardEvent) => {\n  const key = event.key as Key\n  if (modalsAreActive()) {\n    // Do nothing\n  } else {\n    const keyboardShortcutDirectory = createKeyboardShortcutDirectory()\n    const action: () => void | undefined =\n      keyboardShortcutDirectory[key as KeyboardShortcutKeys]\n    if (action && key !== 'Escape') {\n      action()\n    }\n  }\n  // Close all modals by pressing ESC\n  if (key === 'Escape') {\n    closeAllModals()\n  }\n}\n","import dayjs from 'dayjs'\n\nexport const createDateRange = () => {\n  const midnight = dayjs().startOf('day')\n  return {\n    today: midnight,\n    tomorrow: midnight.add(24, 'hour'),\n  }\n}\n","import { loginKey } from './constants'\n\nexport const login = () => {\n  localStorage.setItem(loginKey, 'true')\n}\n","import { tokenKey } from './constants'\n\nexport const getToken = () => localStorage.getItem(tokenKey) || ''\n","import firebase from 'firebase/compat/app'\nimport { firebaseEnabled } from './getFirebaseConfig'\nimport { getToken } from './getToken'\nimport { handleError } from './handleError'\n\nexport type TokenUser = {\n  token: string\n}\n\nexport type User = firebase.User | TokenUser\n\nexport const getUser = async (): Promise<User | null> => {\n  if (firebaseEnabled) {\n    try {\n      const user = await firebase.auth().currentUser\n      return user\n    } catch (error) {\n      handleError(error as Error)\n      return null\n    }\n  } else {\n    return { token: getToken() }\n  }\n}\n","import { getHasuraClient } from '../getHasuraClient'\nimport { getUser } from '../getUser'\nimport { gql } from '../gql'\nimport { handleError } from '../handleError'\nimport { logout } from '../logout'\n\nexport const createProfileMutation = async (\n  authId: string,\n  timezone: string\n) => {\n  const mutation = gql`\n    mutation UPSERT_PROFILE($authId: String!, $timezone: String!) {\n      insert_profiles(\n        objects: [{ authId: $authId, timezone: $timezone }]\n        on_conflict: { constraint: profiles_authId_key, update_columns: [] }\n      ) {\n        affected_rows\n      }\n    }\n  `\n  try {\n    const response = await (\n      await getHasuraClient()\n    ).request(mutation, {\n      authId,\n      timezone,\n    })\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nexport const createProfile = async () => {\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n    const user = await getUser()\n    if (user) {\n      if ('token' in user) {\n        logout()\n      } else {\n        const authId = await user.uid\n        const provider = user.providerData[0]\n        if (provider) {\n          await createProfileMutation(authId, timezone)\n        }\n      }\n    }\n  } catch (error) {\n    return handleError(error as Error)\n  }\n}\n","import { SubscriptionClient } from 'subscriptions-transport-ws'\nimport { SUBSCRIBE_TO_DATA } from '../../graphql/profile'\nimport { Data } from '../../store/data/types'\nimport { createDateRange } from '../createDateRange'\nimport { getStore } from '../getStore'\nimport { handleError } from '../handleError'\nimport { login } from '../login'\nimport { stringifyQuery } from '../stringifyQuery'\nimport { addBasicFoodsToProfile } from './addBasicFoodsToProfile'\nimport { createProfile } from './createProfile'\n\nexport const subscribeToProfile = (client: SubscriptionClient) => {\n  return client\n    .request({\n      query: stringifyQuery(SUBSCRIBE_TO_DATA),\n      variables: createDateRange(),\n    })\n    .subscribe({\n      error: (e) => {\n        handleError(e)\n      },\n      next: (result) => {\n        const newData = result.data as Data\n        const store = getStore()\n        if (!newData || !newData.profiles || newData.profiles.length === 0) {\n          createProfile().then(() => {\n            login()\n            window.location.reload()\n          })\n        } else {\n          // We update the entire profile with every subscription\n          // That is because the payload is small\n          const { missingBasicFoods, profiles } = addBasicFoodsToProfile(\n            newData.profiles\n          )\n          store.dispatch('updateProfile', profiles)\n          store.dispatch('handleMissingBasicFoods', missingBasicFoods)\n        }\n      },\n    })\n}\n","import { store } from '../store/store'\n\nexport const extractData = (data = store.get().data) => {\n  const { basicFoods, profiles } = data\n  const profile = profiles[0]\n  const { logs, recipes } = profile\n  const customFoods = profile.foods\n  const foods = [...basicFoods, ...customFoods]\n  return { foods, logs, profile, recipes }\n}\n","import { useStoreon } from 'storeon/react'\nimport { extractData } from '../helpers/extractData'\nimport { Data } from '../store/data/types'\nimport { NavbarState } from '../store/navbar/types'\nimport { AllEvents } from '../store/store'\nimport { Dispatch } from '../store/types'\n\nexport const useData = () => {\n  const {\n    data,\n    dispatch,\n    navbar,\n  }: {\n    data: Data\n    navbar: NavbarState\n    dispatch: Dispatch<AllEvents>\n  } = useStoreon('data', 'navbar')\n\n  return {\n    dispatch,\n    ...extractData(data),\n    navbar,\n    offline: navbar.offline,\n  }\n}\n","import { useEffect } from 'react'\nimport { loginKey } from '../helpers/constants'\nimport { logout } from '../helpers/logout'\n\nexport const useLogoutOtherTab = () => {\n  useEffect(() => {\n    const isLoggedIn = (e: StorageEvent) => {\n      e.newValue === 'null' &&\n        localStorage.getItem(loginKey) !== 'null' &&\n        logout()\n    }\n    window.addEventListener('storage', isLoggedIn)\n    return () => {\n      window.removeEventListener('storage', isLoggedIn)\n    }\n  }, [])\n}\n","export const isIpad = () =>\n  navigator.userAgent.includes('Mac') && 'ontouchend' in document\n","import { isBrowser } from './isBrowser'\nimport { isIpad } from './isIpad'\n\nexport const isMobile = () => {\n  const UA = navigator.userAgent\n  const toMatch = [\n    /Android/i,\n    /webOS/i,\n    /iPhone/i,\n    /iPad/i,\n    /iPod/i,\n    /BlackBerry/i,\n    /Windows Phone/i,\n  ]\n\n  // iPad does not show up on the User Agent for Safari (13 or higher) on iPads\n  // https://developer.apple.com/forums/thread/119186?page=2\n\n  const isMobileDevice =\n    isIpad() ||\n    toMatch.some((toMatchItem) => {\n      return isBrowser() ? UA.match(toMatchItem) : false\n    })\n\n  return isMobileDevice\n}\n","import { isBrowser } from './isBrowser'\n\nexport const isPWA = () => {\n  if (isBrowser()) {\n    const displayMode = ['fullscreen', 'standalone', 'minimal-ui'].some(\n      (displayMode) =>\n        window.matchMedia('(display-mode: ' + displayMode + ')').matches\n    )\n    return (\n      displayMode ||\n      // @ts-ignore - window.navigator.standalone only exists on iOS\n      (window.navigator.standalone as boolean) ||\n      document.referrer.includes('android-app://')\n    )\n  }\n  return false\n}\n","import React from 'react'\nimport { isMobile } from '../helpers/isMobile'\nimport { isProduction } from '../helpers/isProduction'\nimport { isPWA } from '../helpers/isPWA'\nimport { Profile } from '../models/profile'\nimport { AllEvents } from '../store/store'\nimport { Dispatch } from '../store/types'\n\nexport const usePWAPrompt = (\n  profile: Profile,\n  dispatch: Dispatch<AllEvents>\n) => {\n  React.useEffect(() => {\n    const showPrompt =\n      isMobile() && !isPWA() && isProduction() && profile.hidePWAPrompt !== true\n\n    setTimeout(() => {\n      if (showPrompt) {\n        dispatch('openPWAPrompt')\n      }\n    }, 5000)\n  }, [dispatch, profile.hidePWAPrompt])\n}\n","import React from 'react'\n\nexport const useShortcuts = (shortcuts: (event: KeyboardEvent) => void) => {\n  React.useEffect(() => {\n    window.addEventListener('keyup', shortcuts)\n    return () => {\n      window.removeEventListener('keyup', shortcuts)\n    }\n  }, [shortcuts])\n}\n","import { isProduction } from './isProduction'\n\nexport const getDomain = () =>\n  isProduction() ? window.location.hostname : 'localhost'\n","import dayjs from 'dayjs'\nimport isToday from 'dayjs/plugin/isToday'\nimport Cookies from 'js-cookie'\nimport ms from 'ms'\nimport React from 'react'\nimport { profileKey } from '../helpers/constants'\nimport { getDomain } from '../helpers/getDomain'\n\ndayjs.extend(isToday)\n\nconst setLastReset = () => {\n  Cookies.set('last-reset', dayjs().toString(), {\n    domain: getDomain(),\n    expires: 5,\n  })\n}\n\nexport const useStartTime = () => {\n  React.useEffect(() => {\n    const handler = () => {\n      const lastReset = Cookies.get('last-reset')\n\n      if (lastReset === undefined) {\n        return setLastReset()\n      }\n\n      if (!dayjs(lastReset).isToday()) {\n        setLastReset()\n        localStorage.setItem(profileKey, 'null')\n        window.location.reload()\n      }\n    }\n\n    const interval = setInterval(handler, ms('1 second'))\n    return () => clearInterval(interval)\n  }, [])\n}\n","import { loginKey } from './constants'\nimport { isBrowser } from './isBrowser'\n\nexport const getLoginStatus = (): boolean => {\n  if (isBrowser()) {\n    const status = localStorage.getItem(loginKey) === 'true'\n    return Boolean(status)\n  } else {\n    return false\n  }\n}\n","import { SubscriptionClient } from 'subscriptions-transport-ws'\nimport { getConfig } from './config'\nimport { getJWT } from './getJWT'\nimport { handleError } from './handleError'\n\nexport const createWebsocketClient = () => {\n  return new SubscriptionClient(getConfig().resourceServerUriWs, {\n    connectionParams: () =>\n      getJWT()\n        .then((token) => {\n          return {\n            headers: {\n              authorization: `Bearer ${token}`,\n            },\n          }\n        })\n        .catch((error) => handleError(error)),\n    reconnect: true,\n  })\n}\n","import { createWebsocketClient } from './createWebsocketClient'\nimport { getStore } from './getStore'\n\n/** Create the Websocket Client with the JWT. */\nexport const getWebsocketClient = async () => {\n  const store = getStore()\n  const currentClient = store.get().currentWebsocketClient\n  if (currentClient) {\n    // Do nothing, reuse the existing client\n    return currentClient\n  } else {\n    const client = createWebsocketClient()\n    store.dispatch('updateCurrentWebsocketClient', client)\n    return client\n  }\n}\n","import { UserStatus } from '../store/navbar/types'\n\nexport const isLoadedUser = (user: UserStatus) => user && user !== 'PENDING'\n","import React from 'react'\nimport { SubscriptionClient } from 'subscriptions-transport-ws'\nimport { getLoginStatus } from '../helpers/getLoginStatus'\nimport { getWebsocketClient } from '../helpers/getWebsocketClient'\nimport { isLoadedUser } from '../helpers/isLoadedUser'\nimport { isOffline } from '../helpers/isOffline'\nimport { Profile } from '../models/profile'\nimport { UserStatus } from '../store/navbar/types'\n\nexport type Subscriber = (\n  client: SubscriptionClient,\n  profile?: Profile\n) => {\n  unsubscribe: () => void\n}\n\nexport const useSubscription = (\n  subscribers: Subscriber[],\n  user: UserStatus,\n  offline: boolean,\n  profile: Profile\n) => {\n  const isOnline = !isOffline(offline)\n  React.useEffect(() => {\n    if (getLoginStatus() && isOnline && isLoadedUser(user)) {\n      getWebsocketClient().then((client) => {\n        subscribers.forEach((subscriber) => {\n          subscriber(client, profile)\n        })\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user, offline])\n}\n","import { useStoreon } from 'storeon/react'\nimport { NavbarState } from '../store/navbar/types'\n\nexport const useUser = () => {\n  const { navbar }: { navbar: NavbarState } = useStoreon('navbar')\n  const { user } = navbar\n  return user\n}\n","import { defaultTargets, Profile } from '../models/profile'\n\nexport const profileIsLoaded = (profile: Profile) => {\n  // If the calorie target is the default, the profile has not yet loaded\n  return profile.calorieTarget !== defaultTargets[0]\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\n\ntype props = { color?: string; height?: number; width?: number }\nexport const Spinner: React.FC<props> = ({ color, height, width }) => {\n  const style = css`\n    background-color: ${color || '#333'};\n    height: ${height || 18}px;\n    width: ${width || 18}px;\n  `\n\n  const spinner = css`\n    text-align: center;\n    > div {\n      animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n      border-radius: 100%;\n      display: inline-block;\n    }\n    .bounce1 {\n      animation-delay: -0.32s;\n    }\n    .bounce2 {\n      animation-delay: -0.16s;\n    }\n  `\n  return (\n    <div css={spinner} className={`frc w100 mt50`}>\n      <div css={style} className={`bounce1`}></div>\n      <div css={style} className={`bounce2`}></div>\n      <div css={style} className={`bounce3`}></div>\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport { profileIsLoaded } from '../../helpers/profileIsLoaded'\nimport { Profile } from '../../models/profile'\nimport { colors } from '../../theme'\nimport { Spinner } from '../spinner/Spinner'\n\ntype props = {\n  navbar: number\n  footer: number\n  children: React.ReactNode\n  profile: Profile\n}\nexport const Body: React.FC<props> = ({\n  children,\n  footer,\n  navbar,\n  profile,\n}) => {\n  const dataReady = profileIsLoaded(profile)\n  const body = css`\n    height: calc(100% - ${navbar + footer}px);\n  `\n\n  return (\n    <div css={body} className={`scroll`}>\n      {!dataReady && (\n        <div className=\"h100 w100 fcc\">\n          <Spinner color={colors.purple} />\n        </div>\n      )}\n      {dataReady && children}\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport { colors } from '../../theme'\n\ntype props = {\n  height: number\n  children: React.ReactNode\n}\n\nexport const BottomBar: React.FC<props> = ({ children, height }) => {\n  const footer = css`\n    border-top: 1px solid ${colors.lightgrey};\n    height: ${height}px;\n  `\n\n  return (\n    <div css={footer} id=\"footer\" className={`frc w100 z2`}>\n      {children}\n    </div>\n  )\n}\n","export default {\"src\":\"/_next/static/media/barcode.2fc7c397.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/exercise.190eaea0.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/fast.745f2dea.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/hamburger.5ed49145.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/magnify.b698c5cb.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\n\ntype props = { type?: string; inputMode?: string }\nexport const HiddenInput: React.FC<props> = ({ inputMode, type }) => {\n  const input = css`\n    border: 0;\n    cursor: pointer;\n    height: 100%;\n    left: 0;\n    opacity: 0;\n    padding: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  `\n  return (\n    <input\n      type={type || 'text'}\n      // Cannot get the React inputMode type to work\n      // @ts-ignore\n      inputMode={inputMode || 'text'}\n      tabIndex={-1}\n      css={input}\n      autoCapitalize={'off'}\n      autoComplete={'off'}\n      autoCorrect={'off'}\n    />\n  )\n}\n","/* eslint-disable @next/next/no-img-element */\nimport { css } from '@emotion/react'\nimport React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport Barcode from '../../assets/common/barcode.svg'\nimport Exercise from '../../assets/common/exercise.svg'\nimport Rocket from '../../assets/common/fast.svg'\nimport Hamburger from '../../assets/common/hamburger.svg'\nimport Search from '../../assets/common/magnify.svg'\nimport { Profile } from '../../models/profile'\nimport { AllEvents } from '../../store/store'\nimport { Dispatch } from '../../store/types'\nimport { colors } from '../../theme'\nimport { HiddenInput } from '../buttons/HiddenInput'\n\ntype props = { profile: Profile }\nexport const BottomBarButtons: React.FC<props> = ({ profile }) => {\n  const {\n    dispatch,\n  }: {\n    dispatch: Dispatch<AllEvents>\n  } = useStoreon()\n\n  const buttons = css`\n    border-top: 1px solid ${colors.white};\n    button {\n      flex: 1;\n      height: 64px;\n      padding: 0;\n      position: relative;\n\n      > img {\n        height: 28px;\n        width: 28px;\n      }\n    }\n  `\n\n  return (\n    <div id=\"footer\" css={buttons} className={`frc w100`}>\n      <button\n        id=\"openMenu\"\n        type=\"button\"\n        onClick={() => {\n          dispatch('openMenu')\n        }}\n      >\n        <img alt=\"Open icon for navbar\" src={Hamburger.src} />\n      </button>\n      {profile.showCalories && (\n        <button\n          id=\"openExerciseModal\"\n          type=\"button\"\n          onClick={() => {\n            dispatch('openExerciseModal')\n          }}\n        >\n          <img alt=\"Person running\" src={Exercise.src} />\n        </button>\n      )}\n\n      {profile.showCalories && (\n        <button\n          type=\"button\"\n          id=\"openQuickAddModal\"\n          onClick={() => {\n            if (profile.enablePlanning) {\n              dispatch('openFoodFormModal')\n            } else {\n              dispatch('openQuickAddModal')\n            }\n          }}\n        >\n          {!profile.enablePlanning && (\n            <HiddenInput type=\"text\" inputMode=\"decimal\" />\n          )}\n          <img alt=\"Rocket\" src={Rocket.src} />\n        </button>\n      )}\n\n      {profile.showCalories && (\n        <button\n          id=\"openBarcodeModal\"\n          type=\"button\"\n          onClick={() => {\n            dispatch('openBarcodeModal')\n          }}\n        >\n          <img alt=\"Barcode\" src={Barcode.src} />\n        </button>\n      )}\n\n      <button\n        id=\"openModal\"\n        type=\"button\"\n        onClick={() => {\n          dispatch('openModal')\n        }}\n      >\n        <HiddenInput />\n        <img alt=\"Magnifying glass\" src={Search.src} />\n      </button>\n    </div>\n  )\n}\n","/* eslint-disable sort/object-properties */\n\nimport { Unit } from '../constants/units'\nimport { uuid } from '../helpers/uuid'\nimport { Food } from './food'\nimport { Profile } from './profile'\nimport { Recipe } from './recipe'\n\nexport type Meal = 'Breakfast' | 'Lunch' | 'Dinner' | 'Snack'\n\nexport const defaultMeal: Meal = 'Snack'\nexport const MealEnum: Record<Meal, number> = {\n  Breakfast: 0,\n  Lunch: 1,\n  Dinner: 2,\n  Snack: 3,\n}\n\nexport type Barcode = {\n  name: string\n  code: string\n  calories_per_gram: number\n  protein_per_gram: number\n  calories_per_serving: number\n  protein_per_serving: number\n  serving_size: number // \"2 Tbsp (30 g)\"\n  serving_quantity: string // 30\n}\n\nexport class Log {\n  // Data\n  amount: number\n  unit: Unit\n  alias: string | null\n  barcode: Barcode | null\n  consumed: boolean\n  meal: Meal\n\n  // Foreign keys\n  basicFood = uuid() || null\n  food = uuid() || null\n  profile: string\n  recipe = uuid() || null\n\n  // Relationships\n  logToFood: Food | null\n  logToRecipe: Recipe | null\n  logToProfile: Profile | null\n\n  // Metadata\n  id = uuid()\n  updatedAt = new Date()\n  createdAt = new Date()\n  type: 'log'\n\n  constructor() {\n    this.logToFood = null\n    this.logToRecipe = null\n    this.logToProfile = null\n    this.type = 'log'\n  }\n}\n","import { Food } from '../../../../models/food'\nimport { Log } from '../../../../models/log'\n\nexport const sortByCreatedAt = (items: Food[] | Log[]) =>\n  items.sort(\n    (itemA, itemB) =>\n      Number(new Date(itemB.createdAt)) - Number(new Date(itemA.createdAt))\n  )\n","export default {\"src\":\"/_next/static/media/barcode-without-scanner.71c3df98.svg\",\"height\":568,\"width\":568,\"blurWidth\":0,\"blurHeight\":0};","import { DELETE_LOG } from '../../graphql/log'\nimport { store } from '../../store/store'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport const deleteLogOnCloud = (id: string, onSuccess: () => void) => {\n  return getHasuraClient()\n    .then((client) => {\n      client\n        .request(stringifyQuery(DELETE_LOG), { id })\n        .then((result: { delete_logs_by_pk: { id: string } }) => {\n          store.dispatch('removeLogsById', [result.delete_logs_by_pk.id])\n          onSuccess()\n        })\n    })\n    .catch((error) => {\n      handleError(error)\n    })\n}\n","import { Unit } from '../../constants/units'\nimport { UPDATE_LOG } from '../../graphql/log'\nimport { Log } from '../../models/log'\nimport { store } from '../../store/store'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport type UpdateLog = {\n  pk_columns: {\n    id: string\n  }\n  set: {\n    unit: Unit\n    amount: number\n    consumed: boolean\n  }\n}\n\nexport const updateLogOnCloud = (variables: UpdateLog, onSuccess: () => void) =>\n  getHasuraClient()\n    .then((client) => {\n      client\n        .request(stringifyQuery(UPDATE_LOG), variables)\n        .then((result: { update_logs_by_pk: Log }) => {\n          store.dispatch('updateLog', result.update_logs_by_pk)\n          onSuccess()\n        })\n    })\n    .catch((error) => handleError(error))\n","export default {\"src\":\"/_next/static/media/trash.3b577ddf.svg\",\"height\":16,\"width\":16,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\nimport Trash from '../../../assets/common/trash.svg'\nimport { Image } from '../../image/Image'\nimport { OnDeleteItem } from '../types'\n\ntype props = {\n  id: string\n  onDelete: OnDeleteItem | null\n}\nexport const DeleteButton: React.FC<props> = ({ id, onDelete }) => (\n  <button\n    data-id=\"delete-button\"\n    type=\"button\"\n    className=\"background frc deleteButton\"\n    css={css`\n      width: 42px;\n      height: 42px;\n    `}\n    onClick={() => {\n      onDelete && onDelete(id)\n    }}\n  >\n    <Image width={22} height={22} alt=\"Trash\" src={Trash} />\n  </button>\n)\n","export const capitalize = (string: string): string => {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n}\n","import { Category } from '../constants/categories'\nimport { Group } from '../constants/groups'\nimport { VolumeUnit, WeightUnit } from '../constants/units'\nimport { uuid } from '../helpers/uuid'\nimport { Ingredient } from './ingredient'\nimport { Log } from './log'\nimport { Profile } from './profile'\n\nexport type Density = 'caloric-density' | 'protein-density' | 'combined-density'\n\n// Called foods in Hasura\nexport class Food {\n  // Data\n  name: string\n  group: Group\n  category: Category\n  alias: string | null\n  countName: string | null\n  containerName: string | null\n  caloriesPerGram: number | null\n  proteinPerGram: number | null\n  caloriesPerCount: number | null\n  proteinPerCount: number | null\n  countToGram: number | null\n  countToTbsp: number | null\n  tbspToGram: number | null\n  servingPerContainer: number | null\n  preferredVolumeUnit: VolumeUnit | null\n  preferredWeightUnit: WeightUnit | null\n\n  // Foreign keys\n  profile: string | null\n  basicFoodId = uuid() || null\n\n  // Relationships\n  foodToProfile: Profile | null\n  ingredients: Ingredient[]\n  logs: Log[]\n\n  // Metadata\n  id = uuid()\n  updatedAt = new Date()\n  createdAt = new Date()\n  type: 'food'\n\n  // Added at runtime\n  isDummy: undefined | boolean // For searchbar\n  density: Density // For AllFoodItem\n\n  constructor() {\n    this.name = 'Chicken'\n    this.group = 'Protein'\n    this.category = 'Chicken'\n    this.type = 'food'\n    this.isDummy = false\n  }\n}\n","import { Group } from './groups'\n\nexport const customCategories = ['Food', 'Recipe'] as const\nexport type CustomCategories = (typeof customCategories)[number]\n\nexport const dairyCategories = [\n  'Cheese',\n  'Cottage cheese',\n  'Dairy',\n  'Milk',\n  'Nut milk',\n  'Quark',\n  'Yogurt',\n] as const\nexport type DairyCategories = (typeof dairyCategories)[number]\n\nexport const fatsAndSugarsCategories = [\n  'Baked food',\n  'Butter',\n  'Candy',\n  'Cream',\n  'Ice cream',\n  'Mayonnaise',\n  'Nut',\n  'Oil',\n  'Seed',\n  'Snack',\n  'Sour cream',\n  'Sweetener',\n] as const\n\nexport type FatsAndSugarsCategories = (typeof fatsAndSugarsCategories)[number]\n\nexport const fruitCategories = ['Dried fruit', 'Fruit'] as const\nexport type FruitCategories = (typeof fruitCategories)[number]\n\nexport const grainCategories = [\n  'Bagel',\n  'Bread',\n  'Dough',\n  'Flour',\n  'Muffin',\n  'Noodles',\n  'Pasta',\n  'Rice',\n  'Tortilla',\n  'Whole grain',\n] as const\nexport type GrainCategories = (typeof grainCategories)[number]\n\nexport const otherCategories = [\n  'Alcohol',\n  'Beverage',\n  'Prepared food',\n  'Sauce',\n  'Stock',\n  'Vinegar',\n  'Wine',\n] as const\nexport type OtherCategories = (typeof otherCategories)[number]\n\nexport const proteinCategories = [\n  'Bean',\n  'Beef',\n  'Chicken',\n  'Chickpea',\n  'Cold cut',\n  'Edamame',\n  'Eggs',\n  'Fish',\n  'Gluten',\n  'Goat',\n  'Ground meat',\n  'Jerky',\n  'Lamb',\n  'Lentil',\n  'Lentils',\n  'Organ meat',\n  'Pea',\n  'Pork',\n  'Protein powder',\n  'Ribs',\n  'Shellfish',\n  'Soy',\n  'Turkey',\n] as const\nexport type ProteinCategories = (typeof proteinCategories)[number]\n\nexport const vegetableCategories = [\n  'Dried herb',\n  'Herb',\n  'Leafy green',\n  'Lettuce',\n  'Pea',\n  'Pepper',\n  'Spice',\n  'Vegetable',\n] as const\nexport type VegetableCategories = (typeof vegetableCategories)[number]\n\n// Both the type and the array are assembled from the types above, eliminating errors :)\nexport type Category =\n  | CustomCategories\n  | DairyCategories\n  | FatsAndSugarsCategories\n  | FruitCategories\n  | GrainCategories\n  | OtherCategories\n  | ProteinCategories\n  | VegetableCategories\n\nexport const categories: Category[] = [\n  ...customCategories,\n  ...dairyCategories,\n  ...fatsAndSugarsCategories,\n  ...fruitCategories,\n  ...grainCategories,\n  ...otherCategories,\n  ...proteinCategories,\n  ...vegetableCategories,\n].sort((categoryA, categoryB) =>\n  categoryA.localeCompare(categoryB)\n) as Category[] // sort alphabetically\n\nexport const secondaryCategories: Category[] = [\n  ...otherCategories,\n  'Sweetener',\n  'Herb',\n  'Spice',\n  'Nut milk',\n]\n\n// Helper functions //\n\nexport const mapGroupToCategories = (group: Group): Category[] => {\n  const map = {\n    Custom: customCategories,\n    Dairy: dairyCategories,\n    'Fat or sugar': fatsAndSugarsCategories,\n    Fruit: fruitCategories,\n    Grain: grainCategories,\n    Other: otherCategories,\n    Protein: proteinCategories,\n    Vegetable: vegetableCategories,\n  }\n  return map[group] as unknown as Category[]\n}\n\nexport const mapCategoryToGroup = (category: Category): Group | null => {\n  if ((customCategories as unknown as Category[]).includes(category)) {\n    return 'Custom'\n  } else if ((dairyCategories as unknown as Category[]).includes(category)) {\n    return 'Dairy'\n  } else if (\n    (fatsAndSugarsCategories as unknown as Category[]).includes(category)\n  ) {\n    return 'Fat or sugar'\n  } else if ((fruitCategories as unknown as Category[]).includes(category)) {\n    return 'Fruit'\n  } else if ((grainCategories as unknown as Category[]).includes(category)) {\n    return 'Grain'\n  } else if ((otherCategories as unknown as Category[]).includes(category)) {\n    return 'Other'\n  } else if ((proteinCategories as unknown as Category[]).includes(category)) {\n    return 'Protein'\n  } else if (\n    (vegetableCategories as unknown as Category[]).includes(category)\n  ) {\n    return 'Vegetable'\n  } else {\n    return null\n  }\n}\n","import { categories, Category } from '../../../constants/categories'\nimport { Food } from '../../../models/food'\n\nexport const addCategoryToDummyFood = (food: Food): Category => {\n  if (categories.includes(food.name as Category)) {\n    return food.name as Category\n  } else {\n    throw Error(\n      `${food.name} is not a valid group, check addCategoryToDummyFood`\n    )\n  }\n}\n","import { Category, mapCategoryToGroup } from '../../../constants/categories'\nimport { Group } from '../../../constants/groups'\nimport { Food } from '../../../models/food'\n\n/** .\n * If the food.name, like Turkey, is a valid group, add that to the dummyFood\n * Otherwise, throw an error */\nexport const addGroupToDummyFood = (food: Food): Group => {\n  const group = mapCategoryToGroup(food.name as Category)\n  if (group) {\n    return food.name as Group\n  } else {\n    throw Error(`${food.name} is not a valid group, check addGroupToDummyFood`)\n  }\n}\n","import { Category } from '../../../constants/categories'\nimport { Group } from '../../../constants/groups'\nimport { capitalize } from '../../../helpers/capitalize'\nimport { Food } from '../../../models/food'\nimport { addCategoryToDummyFood } from './addCategoryToDummyFood'\nimport { addGroupToDummyFood } from './addGroupToDummyFood'\n\n/** The dummy food is the food used as the \"standard bearer\" for a bunch of related foods in the search bar.\n * For example, turkey is the standard bearer for turkey breast, turkey thigh, ground turkey, etc. */\nexport const createDummyFood = (\n  name: string,\n  group?: Group,\n  category?: Category\n): Food => {\n  const food = new Food()\n  food.name = capitalize(name)\n  food.group = group || addGroupToDummyFood(food)\n  food.category = category || addCategoryToDummyFood(food)\n  food.isDummy = true\n  return food\n}\n","export const bean = {\n  Bean: {\n    Adzuki: {\n      Cooked: ['Adzuki beans (cooked)'],\n      Dry: ['Adzuki beans (dry)'],\n    },\n    Black: {\n      Cooked: ['Black beans (cooked)'],\n      Dry: ['Black beans (dry)'],\n    },\n    'Black-eyed peas': {\n      Cooked: ['Black-eyed peas (cooked)'],\n      Dry: ['Black-eyed peas (dry)'],\n    },\n    Cannellini: {\n      Cooked: ['Cannellini beans (cooked)'],\n      Dry: ['Cannellini beans (dry)'],\n    },\n    Chickpeas: {\n      Cooked: ['Chickpeas (cooked)'],\n      Dry: ['Chickpeas (dry)'],\n    },\n    Fava: {\n      Cooked: ['Fava beans (cooked)'],\n      Dry: ['Fava beans (dry)'],\n    },\n    'Great northern': {\n      Cooked: ['Great northern beans (cooked)'],\n      Dry: ['Great northern beans (dry)'],\n    },\n    Kidney: {\n      Cooked: ['Kidney beans (cooked)'],\n      Dry: ['Kidney beans (dry)'],\n    },\n    Lima: {\n      Cooked: ['Lima beans (cooked)'],\n      Dry: ['Lima beans (dry)'],\n    },\n    Mung: {\n      Cooked: ['Mung beans (cooked)'],\n      Dry: ['Mung beans (dry)'],\n    },\n    Pinto: {\n      Cooked: ['Pinto beans (cooked)'],\n      Dry: ['Pinto beans (dry)'],\n    },\n    Soy: {\n      Cooked: ['Soy beans (cooked)'],\n      Dry: ['Soy beans (dry)'],\n    },\n    White: {\n      Cooked: ['White beans (dry)'],\n      Dry: ['White beans (cooked)'],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const beef: DummyFoods = {\n  Beef: {\n    Fatty: {\n      Cooked: ['Fatty beef (cooked)'],\n      Raw: ['Fatty beef (raw)'],\n    },\n    'I want to be more specific': {\n      'Bottom round': {\n        Cooked: ['Bottom round (cooked)'],\n        Raw: ['Bottom round (raw)'],\n      },\n      'Eye of round': {\n        Cooked: ['Eye of round (cooked)'],\n        Raw: ['Eye of round (raw)'],\n      },\n      Ribeye: {\n        Cooked: ['Ribeye (cooked)'],\n        Raw: ['Ribeye (raw)'],\n      },\n      'Sirloin tip': {\n        Cooked: ['Sirloin tip (cooked)'],\n        Raw: ['Sirloin tip (raw)'],\n      },\n      'Skirt steak': {\n        Cooked: ['Skirt steak (cooked)'],\n        Raw: ['Skirt steak (raw)'],\n      },\n      'Strip steak': {\n        Cooked: ['Strip steak (cooked)'],\n        Raw: ['Strip steak (raw)'],\n      },\n      'Top round': {\n        Cooked: ['Top round (cooked)'],\n        Raw: ['Top round (raw)'],\n      },\n    },\n    Lean: {\n      Cooked: ['Lean beef (cooked)'],\n      Raw: ['Lean beef (raw)'],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const bread: DummyFoods = {\n  Bread: {\n    French: ['French bread'],\n    Italian: ['Italian bread'],\n    'Multi-grain': ['Multi-grain bread'],\n    Naan: ['Naan bread'],\n    Pita: ['Pita bread'],\n    Rye: ['Rye bread'],\n    Sourdough: ['Sourdough bread'],\n    White: ['White bread'],\n    'Whole wheat': ['Whole wheat bread'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const butter: DummyFoods = {\n  Butter: {\n    Almond: ['Almond butter'],\n    Cashew: ['Cashew butter'],\n    Cocoa: ['Cocoa butter'],\n    Normal: ['Butter'],\n    'Sunflower seed': ['Sunflower seed butter'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const cheese: DummyFoods = {\n  Cheese: {\n    American: ['American cheese'],\n    Asiago: ['Asiago cheese'],\n    Blue: ['Blue cheese'],\n    Brie: ['Brie cheese'],\n    'Buffalo cheese': ['Buffalo mozzarella cheese'],\n    'Buffalo milk': ['Buffalo milk cheese'],\n    Camembert: ['Camembert cheese'],\n    Cheddar: ['Cheddar cheese'],\n    Chihuahua: ['Chihuahua cheese'],\n    Colby: ['Colby cheese'],\n    Cotija: ['Cotija cheese'],\n    Cream: ['Cream cheese'],\n    Edam: ['Edam cheese'],\n    Emmentaler: ['Emmentaler cheese'],\n    Epoisses: ['Epoisses cheese'],\n    Feta: ['Feta cheese'],\n    Fontina: ['Fontina cheese'],\n    Goat: ['Goat cheese'],\n    Gorgonzola: ['Gorgonzola cheese'],\n    Gouda: ['Gouda cheese'],\n    Gruyere: ['Gruyere cheese'],\n    Havarti: ['Havarti cheese'],\n    Jarlsberg: ['Jarlsberg cheese'],\n    Manchego: ['Manchego cheese'],\n    Mexican: ['Mexican blend'],\n    Monterey: ['Monterey Jack cheese'],\n    Mozzarella: ['Mozzarella cheese'],\n    Muenster: ['Muenster cheese'],\n    Neufchatel: ['Neufchatel cheese'],\n    Parmesan: ['Parmesan cheese'],\n    Pecorino: ['Pecorino Romano cheese'],\n    Provolone: ['Provolone cheese'],\n    Ricotta: ['Ricotta cheese'],\n    Roquefort: ['Roquefort cheese'],\n    Stilton: ['Stilton cheese'],\n    Swiss: ['Swiss cheese'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\n// Source: https://cooking.stackexchange.com/questions/75391/what-percentage-of-my-chicken-legs-are-bone\n\nexport const chicken: DummyFoods = {\n  Chicken: {\n    Breast: {\n      'With skin': {\n        Cooked: ['Chicken breast with skin (cooked)'],\n        Raw: ['Chicken breast with skin (raw)'],\n      },\n      'Without skin': {\n        Cooked: ['Chicken breast without skin (cooked)'],\n        Raw: ['Chicken breast without skin (raw)'],\n      },\n    },\n    Drumstick: {\n      'With skin': {\n        'With bone': {\n          Cooked: ['Chicken drumstick with skin with bone (cooked)'],\n          Raw: ['Chicken drumstick with skin with bone (raw)'],\n        },\n        'Without bone': {\n          Cooked: ['Chicken drumstick with skin without bone (cooked)'],\n          Raw: ['Chicken drumstick with skin without bone (raw)'],\n        },\n      },\n      'Without skin': {\n        'With bone': {\n          Cooked: ['Chicken drumstick without skin with bone (cooked)'],\n          Raw: ['Chicken drumstick without skin with bone (raw)'],\n        },\n        'Without bone': {\n          Cooked: ['Chicken drumstick without skin without bone (cooked)'],\n          Raw: ['Chicken drumstick without skin without bone (raw)'],\n        },\n      },\n    },\n    Tenderloin: {\n      Cooked: ['Chicken tenderloin (cooked)'],\n      Raw: ['Chicken tenderloin (raw)'],\n    },\n    Thigh: {\n      'With skin': {\n        'With bone': {\n          Cooked: ['Chicken thigh with skin with bone (cooked)'],\n          Raw: ['Chicken thigh with skin with bone (raw)'],\n        },\n        'Without bone': {\n          Cooked: ['Chicken thigh with skin without bone (cooked)'],\n          Raw: ['Chicken thigh with skin without bone (raw)'],\n        },\n      },\n      'Without skin': {\n        'With bone': {\n          Cooked: ['Chicken thigh without skin with bone (cooked)'],\n          Raw: ['Chicken thigh without skin with bone (raw)'],\n        },\n        'Without bone': {\n          Cooked: ['Chicken thigh without skin without bone (cooked)'],\n          Raw: ['Chicken thigh without skin without bone (raw)'],\n        },\n      },\n    },\n    Wing: {\n      'With skin': {\n        'With bone': {\n          Cooked: ['Chicken wing with skin with bone (cooked)'],\n          Raw: ['Chicken wing with skin with bone (raw)'],\n        },\n        'Without bone': {\n          Cooked: ['Chicken wing with skin without bone (cooked)'],\n          Raw: ['Chicken wing with skin without bone (raw)'],\n        },\n      },\n      'Without skin': {\n        'With bone': {\n          Cooked: ['Chicken wing without skin with bone (cooked)'],\n          Raw: ['Chicken wing without skin with bone (raw)'],\n        },\n        'Without bone': {\n          Cooked: ['Chicken wing without skin without bone (cooked)'],\n          Raw: ['Chicken wing without skin without bone (raw)'],\n        },\n      },\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const cottageCheese: DummyFoods = {\n  'Cottage cheese': {\n    '1%': ['Cottage cheese (1%)'],\n    '2%': ['Cottage cheese (2%)'],\n  },\n}\n\nexport const mayonnaise: DummyFoods = {\n  Mayonnaise: {\n    'Full fat': ['Mayonnaise (full-fat)'],\n    Light: ['Mayonnaise (light)'],\n  },\n}\n\nexport const milk: DummyFoods = {\n  Milk: {\n    '1%': ['Milk (1%)'],\n    '2%': ['Milk (2%)'],\n    Skim: ['Skim milk'],\n    Whole: ['Whole milk'],\n  },\n}\n\nexport const sourCream: DummyFoods = {\n  'Sour cream': {\n    'Full fat': ['Sour cream (full-fat)'],\n    Light: ['Sour cream (light)'],\n  },\n}\n\nexport const yogurt: DummyFoods = {\n  Yogurt: {\n    Greek: {\n      '2%': ['Greek yogurt (2%)'],\n      'Non-fat': ['Greek yogurt (non-fat)'],\n      Whole: ['Greek yogurt (whole)'],\n    },\n    Plain: {\n      'Low-fat': ['Plain yogurt (low-fat)'],\n      'Non-fat': ['Plain yogurt (non-fat)'],\n      Whole: ['Plain yogurt (whole)'],\n    },\n  },\n}\n\nexport const dairy = {\n  ...cottageCheese,\n  ...mayonnaise,\n  ...milk,\n  ...sourCream,\n  ...yogurt,\n}\n\nexport const validDairy = Object.keys(dairy)\n","import { DummyFoods } from './dummyFoods'\n\nexport const dough: DummyFoods = {\n  Dough: {\n    Choux: ['Choux pastry'],\n    Filo: ['Filo pastry'],\n    Flaky: ['Flaky pastry'],\n    Pizza: ['Pizza dough'],\n    Puff: ['Puff pastry'],\n    Shortcrust: ['Shortcrust pastry'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\n// Reference for dried fruit: https://www.bellaviva.com/dried-fruit\nexport const driedFruit: DummyFoods = {\n  'Dried fruit': {\n    Apple: ['Apple chips'],\n    Apricots: ['Dried apricots'],\n    Banana: ['Banana chips'],\n    Blueberries: ['Dried blueberries'],\n    Cherries: ['Dried cherries'],\n    Cranberries: ['Dried cranberries'],\n    Currants: ['Dried currants'],\n    Figs: ['Dried figs'],\n    Kiwi: ['Dried kiwi'],\n    Mango: ['Dried mango'],\n    Nectarines: ['Dried nectarines'],\n    Oranges: ['Orange chips'],\n    Peaches: ['Dried peaches'],\n    Pears: ['Dried pears'],\n    Persimmons: ['Dried persimmons'],\n    Pluots: ['Dried pluots'],\n    Prunes: ['Prune'],\n    Raisins: ['Raisin'],\n    Strawberries: ['Dried strawberries'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const driedHerb: DummyFoods = {\n  'Dried herb': {\n    Basil: ['Dried basil'],\n    Oregano: ['Dried oregano'],\n    Parsley: ['Dried parsley'],\n    Rosemary: ['Dried rosemary'],\n    Tarragon: ['Dried tarragon'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const flour: DummyFoods = {\n  Flour: {\n    Almond: ['Almond flour'],\n    Arrowroot: ['Arrowroot flour'],\n    Chickpea: ['Chickpea flour'],\n    Coconut: ['Coconut flour'],\n    Hazelnut: ['Hazelnut flour'],\n    Oat: ['Oat flour'],\n    Peanut: ['Peanut flour'],\n    White: ['White flour'],\n    'Whole wheat': ['Whole wheat flour'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const amaranth: DummyFoods = {\n  Amaranth: {\n    Cooked: ['Amaranth (cooked)'],\n    Dry: ['Amaranth (dry)'],\n  },\n}\n\nexport const barley: DummyFoods = {\n  Barley: {\n    Cooked: ['Barley (cooked)'],\n    Dry: ['Barley (dry)'],\n  },\n}\n\nexport const buckwheat: DummyFoods = {\n  Buckwheat: {\n    Cooked: ['Buckwheat (cooked)'],\n    Dry: ['Buckwheat (dry)'],\n  },\n}\n\nexport const bulger: DummyFoods = {\n  Bulger: {\n    Cooked: ['Bulgur (cooked)'],\n    Dry: ['Bulgur (dry)'],\n  },\n}\n\nexport const couscous: DummyFoods = {\n  Couscous: {\n    Cooked: ['Couscous (cooked)'],\n    Dry: ['Couscous (dry)'],\n  },\n}\n\nexport const farro: DummyFoods = {\n  Farro: {\n    Cooked: ['Farro (cooked)'],\n    Dry: ['Farro (dry)'],\n  },\n}\n\nexport const freekeh: DummyFoods = {\n  Freekeh: {\n    Cooked: ['Freekeh (cooked)'],\n    Dry: ['Freekeh (dry)'],\n  },\n}\n\nexport const hominy: DummyFoods = {\n  Hominy: {\n    Cooked: ['Hominy (cooked)'],\n    Dry: ['Hominy (dry)'],\n  },\n}\n\nexport const millet: DummyFoods = {\n  Millet: {\n    Cooked: ['Millet (cooked)'],\n    Dry: ['Millet (dry)'],\n  },\n}\n\nexport const oats: DummyFoods = {\n  Oats: {\n    Cooked: ['Oats (cooked)'],\n    Dry: ['Oats (dry)'],\n  },\n}\n\nexport const polenta: DummyFoods = {\n  Polenta: {\n    Cooked: ['Polenta (cooked)'],\n    Dry: ['Polenta (dry)'],\n  },\n}\n\nexport const quinoa: DummyFoods = {\n  Quinoa: {\n    Cooked: ['Quinoa (cooked)'],\n    Dry: ['Quinoa (dry)'],\n  },\n}\n\nexport const ryeBerries: DummyFoods = {\n  'Rye berries': {\n    Cooked: ['Rye berries (cooked)'],\n    Dry: ['Rye berries (dry)'],\n  },\n}\n\nexport const sorghum: DummyFoods = {\n  Sorghum: {\n    Cooked: ['Sorghum (cooked)'],\n    Dry: ['Sorghum (dry)'],\n  },\n}\n\nexport const spelt: DummyFoods = {\n  Spelt: {\n    Cooked: ['Spelt (cooked)'],\n    Dry: ['Spelt (dry)'],\n  },\n}\n\nexport const teff: DummyFoods = {\n  Teff: {\n    Cooked: ['Teff (cooked)'],\n    Dry: ['Teff (dry)'],\n  },\n}\n\nexport const wheatBerries: DummyFoods = {\n  'Wheat berries': {\n    Cooked: ['Wheat berries (cooked)'],\n    Dry: ['Wheat berries (dry)'],\n  },\n}\n\nexport const wholeGrains = {\n  'Whole grain': {\n    ...amaranth,\n    ...barley,\n    ...buckwheat,\n    ...bulger,\n    ...couscous,\n    ...farro,\n    ...freekeh,\n    ...hominy,\n    ...millet,\n    ...oats,\n    ...polenta,\n    ...quinoa,\n    ...ryeBerries,\n    ...sorghum,\n    ...spelt,\n    ...teff,\n    ...wheatBerries,\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const groundMeat: DummyFoods = {\n  'Ground meat': {\n    Beef: {\n      '70/30': {\n        Cooked: ['Ground beef (70/30) (cooked)'],\n        Raw: ['Ground beef (70/30) (raw)'],\n      },\n      '80/20': {\n        Cooked: ['Ground beef (80/20) (cooked)'],\n        Raw: ['Ground beef (80/20) (raw)'],\n      },\n      '90/10': {\n        Cooked: ['Ground beef (90/10) (cooked)'],\n        Raw: ['Ground beef (90/10) (raw)'],\n      },\n    },\n    Lamb: {\n      Cooked: ['Ground lamb (cooked)'],\n      Raw: ['Ground lamb (raw)'],\n    },\n    Pork: {\n      '84/16': {\n        Cooked: ['Ground pork (84/16) (cooked)'],\n        Raw: ['Ground pork (84/16) (raw)'],\n      },\n      '96/4': {\n        Cooked: ['Ground pork (96/4) (cooked)'],\n        Raw: ['Ground pork (96/4) (raw)'],\n      },\n    },\n    Turkey: {\n      '85/15': {\n        Cooked: ['Ground turkey (85/15) (cooked)'],\n        Raw: ['Ground turkey (85/15) (raw)'],\n      },\n      '93/7': {\n        Cooked: ['Ground turkey (93/7) (cooked)'],\n        Raw: ['Ground turkey (93/7) (raw)'],\n      },\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const jerky: DummyFoods = {\n  Jerky: {\n    Beef: ['Beef jerky'],\n    Turkey: ['Turkey jerky'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const lamb: DummyFoods = {\n  Lamb: {\n    Leg: {\n      Cooked: ['Lamb leg (cooked)'],\n      Raw: ['Lamb leg (raw)'],\n    },\n    Loin: {\n      Cooked: ['Lamb loin (cooked)'],\n      Raw: ['Lamb loin (raw)'],\n    },\n    Shoulder: {\n      Cooked: ['Lamb shoulder (cooked)'],\n      Raw: ['Lamb shoulder (raw)'],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const lentils: DummyFoods = {\n  Lentils: {\n    Cooked: ['Lentils (cooked)'],\n    Dry: ['Lentils (dry)'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const lettuce: DummyFoods = {\n  Lettuce: {\n    Boston: ['Boston lettuce'],\n    Butter: ['Butter lettuce'],\n    'Green leaf': ['Green leaf lettuce'],\n    Iceberg: ['Iceberg lettuce'],\n    'Red leaf': ['Red leaf lettuce'],\n    Romaine: ['Romaine lettuce'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const noodles: DummyFoods = {\n  Noodles: {\n    Egg: {\n      Cooked: ['Egg noodles (cooked)'],\n      Dry: ['Egg noodles (dry)'],\n    },\n    Glass: {\n      Cooked: ['Glass noodles (cooked)'],\n      Dry: ['Glass noodles (dry)'],\n    },\n    Rice: {\n      Cooked: ['Rice noodles (cooked)'],\n      Dry: ['Rice noodles (dry)'],\n    },\n    Soba: {\n      Cooked: ['Soba noodles (cooked)'],\n      Dry: ['Soba noodles (dry)'],\n    },\n    Somen: {\n      Cooked: ['Somen noodles (cooked)'],\n      Dry: ['Somen noodles (dry)'],\n    },\n    Udon: {\n      Cooked: ['Udon noodles (cooked)'],\n      Dry: ['Udon noodles (dry)'],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const nutMilk: DummyFoods = {\n  'Nut milk': {\n    Almond: ['Almond milk'],\n    Cashew: ['Cashew milk'],\n    Coconut: ['Coconut milk'],\n    Flax: ['Flax milk'],\n    Hemp: ['Hemp milk'],\n    'Macadamia nut': ['Macadamia nut milk'],\n    Oat: ['Oat milk'],\n    Rice: ['Rice milk'],\n    Soy: ['Soy milk'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const organMeat: DummyFoods = {\n  'Organ meat': {\n    Liver: {\n      Beef: {\n        Cooked: ['Beef liver (cooked)'],\n        Raw: ['Beef liver (raw)'],\n      },\n      Chicken: {\n        Cooked: ['Chicken liver (cooked)'],\n        Raw: ['Chicken liver (raw)'],\n      },\n    },\n  },\n}\n","export const pastaNames = [\n  'Angel hair',\n  'Cannelloni',\n  'Capellini',\n  'Conchiglie',\n  'Ditalini',\n  'Elbow macaroni',\n  'Farfalle',\n  'Fettuccine',\n  'Fusilli',\n  'Lasagna',\n  'Linguine',\n  'Manicotti',\n  'Orecchiette',\n  'Orzo',\n  'Pappardelle',\n  'Pastina',\n  'Penne',\n  'Radiatore',\n  'Rigatoni',\n  'Rotelle',\n  'Rotini',\n  'Spaghetti',\n  'Tagliatelle',\n  'Torchio',\n  'Vermicelli',\n  'Ziti',\n]\n\nexport const pasta = {\n  Pasta: {\n    White: {\n      Cooked: [`White pasta (cooked)`],\n      Dry: [`White pasta (dry)`],\n    },\n    'Whole wheat': {\n      Cooked: [`Whole wheat pasta (cooked)`],\n      Dry: [`Whole wheat pasta (dry)`],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const pea: DummyFoods = {\n  Pea: {\n    Green: ['Green peas'],\n    Split: ['Split peas'],\n    'Sugar snap': ['Sugar snap peas'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const pepper: DummyFoods = {\n  Pepper: {\n    Chili: ['Chili peppers'],\n    'Green bell': ['Green bell pepper'],\n    Jalapeno: ['Jalapeno peppers'],\n    Poblano: ['Poblano pepper'],\n    'Red bell': ['Red bell pepper'],\n    Serrano: ['Serrano pepper'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const pork: DummyFoods = {\n  Pork: {\n    Belly: {\n      Cooked: ['Pork belly (cooked)'],\n      Raw: ['Pork belly (raw)'],\n    },\n    Chops: {\n      Cooked: ['Pork chops (cooked)'],\n      Raw: ['Pork chops (raw)'],\n    },\n    Leg: {\n      Cooked: ['Pork leg (cooked)'],\n      Raw: ['Pork leg (raw)'],\n    },\n    Loin: {\n      Cooked: ['Pork loin (cooked)'],\n      Raw: ['Pork loin (raw)'],\n    },\n    Shoulder: {\n      Cooked: ['Pork shoulder (cooked)'],\n      Raw: ['Pork shoulder (raw)'],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const proteinPowder: DummyFoods = {\n  'Protein powder': {\n    'Brown rice': ['Brown rice protein powder'],\n    Casein: ['Casein protein powder'],\n    Hemp: ['Hemp protein powder'],\n    Pea: ['Pea protein powder'],\n    Soy: ['Soy protein powder'],\n    Whey: ['Whey protein powder'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const ribs: DummyFoods = {\n  Ribs: {\n    Beef: {\n      Cooked: ['Ribs (cooked)'],\n      Raw: ['Ribs (raw)'],\n    },\n    Lamb: {\n      Cooked: ['Lamb ribs (cooked)'],\n      Raw: ['Lamb ribs (raw)'],\n    },\n    Pork: {\n      Cooked: ['Pork ribs (cooked)'],\n      Raw: ['Pork ribs (raw)'],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const rice: DummyFoods = {\n  Rice: {\n    Brown: {\n      Cooked: ['Brown rice (cooked)'],\n      Dry: ['Brown rice (dry)'],\n    },\n    White: {\n      Cooked: ['White rice (cooked)'],\n      Dry: ['White rice (dry)'],\n    },\n    Wild: {\n      Cooked: ['Wild rice (cooked)'],\n      Dry: ['Wild rice (dry)'],\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const tortilla: DummyFoods = {\n  Tortilla: {\n    Corn: ['Corn tortilla'],\n    Flour: ['Flour tortilla'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const turkey: DummyFoods = {\n  Turkey: {\n    Breast: {\n      'With skin': {\n        Cooked: ['Turkey breast with skin (cooked)'],\n        Raw: ['Turkey breast with skin (raw)'],\n      },\n      'Without skin': {\n        Cooked: ['Turkey breast without skin (cooked)'],\n        Raw: ['Turkey breast without skin (raw)'],\n      },\n    },\n    Leg: {\n      'With skin': {\n        Cooked: ['Turkey leg with skin (cooked)'],\n        Raw: ['Turkey leg with skin (raw)'],\n      },\n      'Without skin': {\n        Cooked: ['Turkey leg without skin (cooked)'],\n        Raw: ['Turkey leg without skin (raw)'],\n      },\n    },\n    Wing: {\n      'With skin': {\n        Cooked: ['Turkey wing with skin (cooked)'],\n        Raw: ['Turkey wing with skin (raw)'],\n      },\n      'Without skin': {\n        Cooked: ['Turkey wing without skin (cooked)'],\n        Raw: ['Turkey wing without skin (raw)'],\n      },\n    },\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const vinegar: DummyFoods = {\n  Vinegar: {\n    'Apple cider': ['Apple cider vinegar'],\n    Balsamic: ['Balsamic vinegar'],\n    'Red wine': ['Red wine vinegar'],\n    'Rice wine': ['Rice wine vinegar'],\n    'Sherry wine': ['Sherry wine vinegar'],\n    White: ['White vinegar'],\n    'White wine': ['White wine vinegar'],\n  },\n}\n","import { DummyFoods } from './dummyFoods'\n\nexport const wine: DummyFoods = {\n  Wine: {\n    Red: ['Red wine'],\n    Shaoxing: ['Shaoxing wine'],\n    Sherry: ['Sherry wine'],\n    White: ['White wine'],\n  },\n}\n","import { createDummyFood } from '../../components/standard-adder/helpers/createDummyFood'\nimport { bean } from './bean'\nimport { beef } from './beef'\nimport { bread } from './bread'\nimport { butter } from './butter'\nimport { cheese } from './cheese'\nimport { chicken } from './chicken'\nimport { dairy } from './dairy'\nimport { dough } from './dough'\nimport { driedFruit } from './driedFruit'\nimport { driedHerb } from './driedHerb'\nimport { flour } from './flour'\nimport { wholeGrains } from './grains'\nimport { groundMeat } from './groundMeat'\nimport { jerky } from './jerky'\nimport { lamb } from './lamb'\nimport { lentils } from './lentils'\nimport { lettuce } from './lettuce'\nimport { noodles } from './noodles'\nimport { nutMilk } from './nutMilk'\nimport { organMeat } from './organMeat'\nimport { pasta } from './pasta'\nimport { pea } from './pea'\nimport { pepper } from './pepper'\nimport { pork } from './pork'\nimport { proteinPowder } from './proteinPowder'\nimport { ribs } from './ribs'\nimport { rice } from './rice'\nimport { tortilla } from './tortilla'\nimport { turkey } from './turkey'\nimport { vinegar } from './vinegar'\nimport { wine } from './wine'\n\nexport interface DummyFoods {\n  [key: string]: DummyFoods | string[]\n}\n\nexport const dummyFoods: DummyFoods = {\n  ...bean,\n  ...beef,\n  ...bread,\n  ...butter,\n  ...cheese,\n  ...chicken,\n  ...dairy,\n  ...dough,\n  ...driedFruit,\n  ...driedHerb,\n  ...flour,\n  ...groundMeat,\n  ...jerky,\n  ...lamb,\n  ...lentils,\n  ...lettuce,\n  ...noodles,\n  ...nutMilk,\n  ...organMeat,\n  ...pasta,\n  ...pea,\n  ...pepper,\n  ...pork,\n  ...proteinPowder,\n  ...ribs,\n  ...rice,\n  ...tortilla,\n  ...turkey,\n  ...vinegar,\n  ...wholeGrains,\n  ...wine,\n}\n\nexport const foodsToAdd = Object.keys(dummyFoods).map((name) =>\n  createDummyFood(name)\n)\n","import { DummyFoods } from '../../../constants/dummyFoods/dummyFoods'\n\n/** Recursively go through all dummy foods, getting the foods to remove, like turkey breast with skin */\nexport const getAllDummyFoodLeaves = (\n  dummyFoods: DummyFoods\n): Record<string, string> => {\n  const leaves = {} as Record<string, string>\n  // The recursive function\n  const recurse = (dummyFoods: DummyFoods, path: string[] = []) => {\n    for (const [key, value] of Object.entries(dummyFoods)) {\n      // Guard: Make sure it is not a category\n      if (Array.isArray(value)) {\n        leaves[value[0]] = path[0]\n      } else {\n        recurse(value, [...path, key])\n      }\n    }\n  }\n\n  // Start the recursive function\n  recurse(dummyFoods)\n  return leaves\n}\n","import {\n  DummyFoods,\n  dummyFoods,\n} from '../../../constants/dummyFoods/dummyFoods'\nimport { getAllDummyFoodLeaves } from './getAllDummyFoodLeaves'\n\nexport const isDummyFood = (name: string, subset?: string) => {\n  const leaves = getAllDummyFoodLeaves(\n    subset ? (dummyFoods[subset] as DummyFoods) : dummyFoods\n  )\n  return name in leaves\n}\n","import traverse from 'traverse'\nimport { dummyFoods } from '../../../constants/dummyFoods/dummyFoods'\nimport { isDummyFood } from './isDummyFood'\n\nexport type Path = { stem: string[]; leaf: string }\n\nexport const removeParens = (s: string) => s.replace(')', '').replace('(', '')\n\nexport const getDummyFoodPath = (name: string): Path | null => {\n  const paths = [] as Path[]\n  if (isDummyFood(name)) {\n    // eslint-disable-next-line array-callback-return\n    traverse(dummyFoods).reduce(function (acc, x) {\n      // Working through each leaf, if the leaf matches the name of the dummy food\n      if (name && name === x) {\n        // Should return [\"Chicken\", \"Breast\", \"without skin\"]\n        const stem = this.path.slice(0, -1).map((p) => p.toLowerCase())\n        // It does not include \"leaf\"\n        // In this case, that is (raw)\n        // This must be assemble manually (below)\n        // Assembling the leaf\n        const leaf = removeParens(name).toLowerCase().split(' ').slice(-1)[0]\n        // Remove duplicates, in case the leaf is also contained in the path\n        paths.push({ leaf, stem })\n      }\n    }, [])\n    return paths[0]\n  }\n  return null\n}\n","import {\n  DummyFoods,\n  dummyFoods,\n} from '../../../constants/dummyFoods/dummyFoods'\nimport { capitalize } from '../../../helpers/capitalize'\nimport { Path } from './getDummyFoodPath'\n\nexport const getDummyFoodTree = (\n  path: Path\n): { root: string; tree: DummyFoods } => {\n  const root = capitalize(path.stem[0])\n  const tree = dummyFoods[root] as DummyFoods\n  return { root, tree }\n}\n","// Customize for each dummy food how much of the name is cut and replaced with tags\n// The default is 2, but some look better with 1\nexport const getThreshold = (root: string) => {\n  if (\n    [\n      'Beef',\n      'Lettuce',\n      'Noodles',\n      'Pasta',\n      'Protein powder',\n      'Rice',\n      'Ribs',\n      'Vinegar',\n    ].includes(root)\n  ) {\n    return 1\n  } else {\n    return 2\n  }\n}\n","import truncate from 'lodash.truncate'\nimport { capitalize } from '../../../helpers/capitalize'\nimport { getDummyFoodPath } from '../../standard-adder/helpers/getDummyFoodPath'\nimport { getDummyFoodTree } from '../../standard-adder/helpers/getDummyFoodTree'\nimport { getThreshold } from './getThreshold'\n\nexport const TRUNCATE_LENGTH = 30\n\nexport const getNameAndTags = (\n  name: string,\n  alias: string\n): { name: string; tags: string[] } => {\n  const dynamicName =\n    alias.indexOf('[') === -1 ? '' : alias.slice(alias.indexOf('['))\n\n  const path = getDummyFoodPath(alias || name)\n\n  if (path === null) {\n    return { name: truncate(name, { length: TRUNCATE_LENGTH }), tags: [] }\n  } else {\n    const { leaf, stem } = path\n    const { root } = getDummyFoodTree(path)\n    const threshold = getThreshold(root)\n\n    // If the stem only have two segments or less (the default threshold)\n    // Just render the name in full. Do not modify it.\n    // Otherwise, remove all the tags that will be used from the name\n    // This, by default, is all but the first two segments\n    const nameToUse = capitalize(\n      (stem.length <= threshold ? name : stem.slice(0, threshold).join(' '))\n        // Certain dummy foods need their root removed from the name\n        .replace('whole grain ', '')\n      // Otherwise, it is Ground meat turkey\n    ).replace('Ground meat', 'Ground')\n\n    const forbiddenTags = ['i want to be more specific']\n    // If the stem only has two segments or less, the default threshold, don't render any tags\n    const tagsToRender =\n      stem.length <= threshold\n        ? []\n        : // Remove duplicates, in case of overlaps between the stem and leaf\n          [...new Set([...stem, leaf])]\n            .slice(threshold)\n            // If the name, like Protein powder, includes a tag, like powder, remove the tag\n            .filter((t) => !nameToUse.includes(t))\n            // Do not include any of the forbidden tags\n            .filter((t) => !forbiddenTags.includes(t))\n            // Exclude any of the dynamic name\n            .filter((t) => !dynamicName.toLowerCase().includes(t))\n            // Remove any parentheses, inspired by the ground meat bug\n            .map((t) => t.replace('(', '').replace(')', ''))\n\n    const nameToRender = dynamicName\n      ? `${dynamicName\n          .replace('[', '')\n          .replace(']', '')} ${nameToUse.toLowerCase()}`\n      : nameToUse\n\n    return {\n      name: truncate(nameToRender, { length: TRUNCATE_LENGTH }),\n      tags: tagsToRender,\n    }\n  }\n}\n","export default {\"src\":\"/_next/static/media/calmini.584a2907.svg\",\"height\":125,\"width\":85,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/density.6b224f44.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/proteinmini.51f9ee69.svg\",\"height\":125,\"width\":85,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\nimport React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport CalMini from '../../assets/common/calmini.svg'\nimport Density from '../../assets/common/density.svg'\nimport ProteinMini from '../../assets/common/proteinmini.svg'\nimport { Log } from '../../models/log'\nimport { Profile } from '../../models/profile'\nimport { AllEvents } from '../../store/store'\nimport { Dispatch } from '../../store/types'\nimport { Image } from '../image/Image'\nimport { calculateFoodOrRecipeDensities } from './helpers/calculateDensities'\nimport { calculateMacros } from './helpers/calculateMacros'\n\ntype props = {\n  log: Log\n  profile: Profile\n  showTitles: boolean\n}\n\nexport const Macros: React.FC<props> = ({ log, profile, showTitles }) => {\n  const { dispatch }: { dispatch: Dispatch<AllEvents> } = useStoreon()\n\n  const [caloriesConsumed, proteinConsumed] = calculateMacros([log]).map((v) =>\n    Math.round(v)\n  )\n\n  const densities = calculateFoodOrRecipeDensities(\n    log.amount,\n    log.barcode || log.logToFood || log.logToRecipe,\n    caloriesConsumed,\n    proteinConsumed\n  )\n\n  let caloricDensity: number | null = null\n  let proteinDensity: number | null = null\n  let combinedDensity: number | null = null\n\n  if (densities) {\n    caloricDensity = densities[0]\n    proteinDensity = densities[1]\n    combinedDensity = densities[2]\n\n    if (Number.isNaN(caloricDensity)) {\n      caloricDensity = 0\n    }\n    if (Number.isNaN(proteinDensity)) {\n      proteinDensity = 0\n    }\n    if (Number.isNaN(combinedDensity)) {\n      combinedDensity = 0\n    }\n  }\n\n  const macros = css`\n    font-size: 12px;\n    margin-left: auto;\n    white-space: nowrap;\n    margin-top: 3px;\n\n    img {\n      margin: 0px 6px;\n      margin-left: 0px;\n    }\n\n    span {\n      margin-right: 6px;\n    }\n  `\n\n  if (caloriesConsumed >= 0) {\n    return (\n      <div id=\"macros\" css={macros}>\n        <div className=\"fr\">\n          <div id=\"MacrosCalories\" className=\"fr\">\n            <Image width={10} height={10} alt=\"Fire\" src={CalMini} />\n            {showTitles && <div className=\"mr5\">Calories:</div>}\n            <span>{caloriesConsumed}</span>\n          </div>\n          <div id=\"MacrosProtein\" className={`fr ${showTitles ? 'ml5' : ''}`}>\n            <Image\n              width={10}\n              height={10}\n              alt=\"Strong arm flexing\"\n              src={ProteinMini}\n            />\n            {showTitles && <div className=\"mr5\">Protein:</div>}\n            <span>{proteinConsumed}</span>\n          </div>\n          {densities && profile.showDensities && (\n            <div\n              onClick={() =>\n                dispatch(\n                  'openInformationModal',\n                  <div>\n                    <strong>\n                      {caloricDensity}/{proteinDensity}\n                    </strong>{' '}\n                    stands for caloric density ({caloricDensity}) and protein\n                    density ({proteinDensity}). To learn more about them, first\n                    navigate to{' '}\n                    <a\n                      href=\"https://cleanslate.sh/weight-loss\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      here\n                    </a>\n                    . Then, read the third and fourth sections.\n                    <br />\n                    <br />\n                    If you would like to see a reference table of all basic\n                    foods by caloric and protein density, navigate to{' '}\n                    <a href=\"/foods\" target=\"_blank\" rel=\"noreferrer\">\n                      here\n                    </a>\n                    .\n                  </div>\n                )\n              }\n            >\n              <Image\n                css={css`\n                  position: relative;\n                  top: 1px;\n                `}\n                width={10}\n                height={10}\n                alt=\"Little balls pressed together\"\n                src={Density}\n              />\n              <span>\n                {caloricDensity}/{proteinDensity}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  } else {\n    return <div />\n  }\n}\n","import { Log } from '../../../models/log'\nimport { Profile } from '../../../models/profile'\nimport { Macros } from '../../macros/Macros'\nimport { CommonItem } from '../types'\n\nexport const renderMacros = (\n  item: CommonItem,\n  profile: Profile\n): JSX.Element => {\n  if (item.type === 'log' || item.type === 'ingredient') {\n    const log = new Log()\n    log.logToFood = item.food\n    log.logToRecipe = item.recipe || item.childRecipe\n    log.logToProfile = null\n    log.amount = item.amount || 0\n    log.unit = item.unit || 'COUNT'\n    log.barcode = item.barcode\n\n    return <Macros log={log} profile={profile} showTitles={false} />\n  } else {\n    return <div>{''}</div>\n  }\n}\n","import { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { CommonItem } from '../types'\n\nexport const spawnItemEditModal = (\n  item: CommonItem,\n  dispatch: Dispatch<AllEvents>\n) => {\n  const { food, recipe, type } = item\n  if (type === 'food' || (type === 'log' && food?.basicFoodId === null)) {\n    dispatch('setFoodToUpdate', food?.id)\n    dispatch('openFoodFormModal')\n  } else if (type === 'recipe' || (type === 'log' && recipe)) {\n    dispatch('openRecipeFormModal', recipe?.id)\n  } else if (type === 'ingredient') {\n    // Do nothing\n  }\n}\n","import { css } from '@emotion/react'\nimport { round } from '../../../helpers/round'\n\ntype props = { amount: number | null }\nexport const Amount: React.FC<props> = ({ amount }) => {\n  return (\n    <div\n      css={css`\n        padding-right: 3px;\n      `}\n    >\n      {amount && round(amount, 2)}\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport { updateLogOnCloud } from '../../../helpers/log/updateLogOnCloud'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { CommonItem } from '../types'\nimport { nameStyling } from './Meta'\n\ntype props = {\n  item: CommonItem\n  dispatch: Dispatch<AllEvents>\n}\nexport const ConsumeButton: React.FC<props> = ({ item }) => {\n  return (\n    <div className=\"fr mt10\">\n      <div css={nameStyling}>Eaten:</div>\n      <input\n        css={css`\n          width: 25px !important;\n          height: 25px !important;\n          margin: 0px !important;\n          margin-left: 5px !important;\n          position: relative;\n          top: 1px;\n        `}\n        onChange={() => {\n          item.unit &&\n            item.amount !== null &&\n            updateLogOnCloud(\n              {\n                pk_columns: {\n                  id: item.id,\n                },\n                set: {\n                  amount: item.amount,\n                  consumed: !item.consumed,\n                  unit: item.unit,\n                },\n              },\n              () => {}\n            )\n        }}\n        checked={item.consumed || false}\n        type=\"checkbox\"\n        id=\"consumed\"\n      />\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\n\ntype props = { tags: string[] }\nexport const Tags: React.FC<props> = ({ tags }) => {\n  const tag = css`\n    border-radius: 5px;\n    font-size: 0.7rem;\n    font-weight: 400;\n    margin-right: 5px;\n    margin-top: 5px;\n    padding: 5px 7.5px;\n  `\n\n  return (\n    <div className=\"fc\">\n      {tags.length > 0 && (\n        <div className=\"fr m5 wrap\">\n          {tags.map((t) => (\n            <span css={tag} className={`pink`} key={t}>\n              {t}\n            </span>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n","import { defaultContainer, defaultCount, Unit } from '../../../constants/units'\nimport { CommonItem } from '../types'\n\nexport const makeUnitPretty = (item: CommonItem, unit: Unit | null) => {\n  if (unit === 'CALORIE') {\n    return 'calories'\n  } else if (unit === 'EXERCISE') {\n    return 'calories burned'\n  } else if (unit === 'COUNT') {\n    return (\n      item.food?.countName ||\n      item.childRecipe?.countName ||\n      item.recipe?.countName ||\n      defaultCount\n    )\n  } else if (unit === 'CONTAINER') {\n    return (\n      item.food?.containerName ||\n      item.childRecipe?.containerName ||\n      item.recipe?.containerName ||\n      defaultContainer\n    )\n  } else if (unit === 'mL') {\n    return unit\n  } else {\n    return unit?.toLowerCase()\n  }\n}\n","import pluralize from 'pluralize'\nimport { Unit } from '../../../constants/units'\nimport { makeUnitPretty } from '../helpers/makeUnitPretty'\nimport { CommonItem } from '../types'\n\ntype props = {\n  item: CommonItem\n  unit: Unit | null\n}\nexport const UnitInput: React.FC<props> = ({ item, unit }) => {\n  const { amount } = item\n  const prettyUnit = makeUnitPretty(item, unit)\n\n  return (\n    <div>\n      {Number(amount) > 1 &&\n      prettyUnit &&\n      unit !== 'mL' &&\n      unit !== 'LBS' &&\n      unit !== 'OZ' &&\n      unit !== 'TBSP' &&\n      unit !== 'TSP'\n        ? pluralize(prettyUnit)\n        : prettyUnit}\n    </div>\n  )\n}\n","/* eslint-disable @next/next/no-img-element */\nimport { css } from '@emotion/react'\nimport truncate from 'lodash.truncate'\nimport { quickAddUnits } from '../../../constants/units'\nimport { capitalize } from '../../../helpers/capitalize'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { blue, colors, green } from '../../../theme'\nimport { getNameAndTags, TRUNCATE_LENGTH } from '../helpers/getNameAndTags'\nimport { renderMacros } from '../helpers/renderMacros'\nimport { spawnItemEditModal } from '../helpers/spawnItemEditModal'\nimport { CommonItem } from '../types'\nimport { Amount } from './Amount'\nimport { ConsumeButton } from './ConsumeButton'\nimport { Tags } from './Tags'\nimport { UnitInput } from './UnitInput'\n\ntype props = {\n  item: CommonItem\n  dispatch: Dispatch<AllEvents>\n}\n\nexport const nameStyling = css`\n  font-size: 13px;\n  line-height: 0px;\n`\n\nexport const imageStyling = css`\n  height: 40px;\n  margin-right: 15px;\n  width: 40px;\n`\n\nexport const withoutImage = css`\n  border-radius: 5px;\n  font-size: 14px;\n  padding: 10px 15px;\n`\n\nexport const custom = css`\n  cursor: pointer;\n  text-decoration: underline;\n`\n\nexport const Meta: React.FC<props> = ({ dispatch, item }) => {\n  const {\n    alias,\n    amount,\n    barcode,\n    food,\n    name,\n    profile,\n    recipe,\n    src,\n    type,\n    unit,\n  } = item\n\n  const isRecipe = type === 'recipe'\n  const isCustomFood = Boolean(type === 'food' && profile)\n  const isCustomLog =\n    type === 'log' && Boolean(food?.foodToProfile?.authId || recipe)\n\n  const result = getNameAndTags(\n    type !== 'log'\n      ? name || capitalize(barcode?.name || '')\n      : recipe?.name ||\n          food?.name ||\n          capitalize(barcode?.name || '') ||\n          name ||\n          '',\n    alias || ''\n  )\n\n  const truncateLength =\n    (type === 'log' && unit && !quickAddUnits.includes(unit)) ||\n    type === 'ingredient'\n      ? TRUNCATE_LENGTH - 11\n      : TRUNCATE_LENGTH - 5\n\n  return (\n    <div className={`fr expand`}>\n      <div className={`fr ${isCustomLog ? 'pointer' : ''}`}>\n        {src && <img css={imageStyling} alt=\"Item\" src={src}></img>}\n        <div className=\"fc\">\n          <div className=\"fr\">\n            <div\n              id=\"MetaItemName\"\n              onClick={() => isCustomLog && spawnItemEditModal(item, dispatch)}\n              className={['food', 'recipe'].includes(type) ? 'fcs' : ''}\n              css={[\n                nameStyling,\n                src === null && withoutImage,\n                isCustomLog && custom,\n                isCustomFood && green,\n                isRecipe && blue,\n                css`\n                  height: ${['food', 'recipe'].includes(type)\n                    ? '40px !important;'\n                    : 'auto'};\n                  justify-content: center;\n                  white-space: nowrap;\n                  width: ${unit && quickAddUnits.includes(unit)\n                    ? '125px'\n                    : undefined};\n                `,\n              ]}\n            >\n              {truncate(result.name, { length: truncateLength })}\n            </div>\n\n            {(type === 'ingredient' || type === 'log') && (\n              <div\n                className=\"fr\"\n                css={css`\n                  font-size: 11px !important;\n                  position: relative;\n                  margin-left: 6px;\n                `}\n              >\n                (<Amount amount={amount} />\n                {<UnitInput item={item} unit={unit} />})\n              </div>\n            )}\n\n            {type === 'unit' && (\n              <div\n                className=\"fr ml5\"\n                css={css`\n                  font-size: 13px !important;\n                  background-color: ${unit === 'PROTEIN'\n                    ? colors.blue\n                    : colors.green};\n                  padding: 5px;\n                  border-radius: 5px;\n                  min-width: 40px;\n                `}\n              >\n                <div\n                  css={css`\n                    margin: 0px auto;\n                  `}\n                >\n                  <Amount amount={amount} />\n                </div>\n              </div>\n            )}\n          </div>\n          <div>\n            <Tags tags={result.tags} />\n          </div>\n          {!isCustomFood && !isRecipe && profile && (\n            <div className=\"fr\">\n              <div className=\"mt5\">{renderMacros(item, profile)}</div>\n            </div>\n          )}\n          {item.type === 'log' && item.profile?.enablePlanning && (\n            <ConsumeButton item={item} dispatch={dispatch} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export default {\"src\":\"/_next/static/media/pencil.d4f50524.svg\",\"height\":16,\"width\":16,\"blurWidth\":0,\"blurHeight\":0};","import { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { CommonItem } from '../types'\n\nexport const spawnInstanceEditModal = (\n  item: CommonItem,\n  dispatch: Dispatch<AllEvents>\n) => {\n  const { id, type } = item\n  if (type === 'food') {\n    dispatch('setFoodToUpdate', id)\n    dispatch('openFoodFormModal')\n  } else if (type === 'recipe') {\n    dispatch('openRecipeFormModal', id)\n  } else if (type === 'log' || type === 'ingredient') {\n    dispatch('openItemModal', item)\n  } else if (type === 'unit') {\n    dispatch('openUnitModal', item)\n  }\n}\n","import { css } from '@emotion/react'\nimport Pencil from '../../../assets/common/pencil.svg'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { HiddenInput } from '../../buttons/HiddenInput'\nimport { Image } from '../../image/Image'\nimport { spawnInstanceEditModal } from '../helpers/spawnInstanceEditModal'\nimport { CommonItem } from '../types'\n\ntype props = {\n  item: CommonItem\n  dispatch: Dispatch<AllEvents>\n}\nexport const UpdateButton: React.FC<props> = ({ dispatch, item }) => {\n  const { type } = item\n  const clickable = ['ingredient', 'log', 'unit'].includes(type)\n  return (\n    <button\n      data-id=\"update-button\"\n      css={css`\n        width: 42px;\n        height: 42px;\n        margin-right: 10px !important;\n      `}\n      type=\"button\"\n      className=\"background mr5\"\n      onClick={() => spawnInstanceEditModal(item, dispatch)}\n    >\n      {clickable && <HiddenInput />}\n      <Image width={22} height={22} alt=\"Pencil\" src={Pencil} />\n    </button>\n  )\n}\n","import { css } from '@emotion/react'\nimport { useStoreon } from 'storeon/react'\nimport { AllEvents } from '../../store/store'\nimport { Dispatch } from '../../store/types'\nimport { DeleteButton } from './components/DeleteButton'\nimport { Meta } from './components/Meta'\nimport { UpdateButton } from './components/UpdateButton'\nimport { CommonItem } from './types'\n\nexport const Item = (props: { item: CommonItem }) => {\n  const { dispatch }: { dispatch: Dispatch<AllEvents> } = useStoreon()\n\n  const { item } = props\n  const { id, onDelete, type } = item\n\n  const itemStyles = css`\n    margin: 20px auto;\n  `\n\n  const consumedStyling = css`\n    text-decoration: line-through;\n    opacity: 0.5;\n  `\n\n  return (\n    <div\n      css={[\n        itemStyles,\n        item.consumed && item.profile?.enablePlanning && consumedStyling,\n      ]}\n      className={`w100 item item-${type}`}\n    >\n      <div className=\"fr\">\n        {/* Meta information */}\n        <Meta item={item} dispatch={dispatch} />\n\n        <div className=\"fr\">\n          <div className=\"fr\">\n            {/* Edit Button */}\n            <UpdateButton item={item} dispatch={dispatch} />\n\n            {/* Delete Button */}\n            {onDelete && <DeleteButton id={id} onDelete={onDelete} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport toast from 'react-hot-toast'\nimport BarcodeWithoutScanner from '../../../assets/common/barcode-without-scanner.svg'\nimport { Unit } from '../../../constants/units'\nimport { deleteLogOnCloud } from '../../../helpers/log/deleteLogOnCloud'\nimport { updateLogOnCloud } from '../../../helpers/log/updateLogOnCloud'\nimport { Log, Meal } from '../../../models/log'\nimport { Profile } from '../../../models/profile'\nimport { Item } from '../../item/Item'\nimport { getImagePath, selectFoodImage } from '../helpers/selectFoodImage'\n\nexport const logOrIngredientUpdateError = [\n  'Please specify a unit',\n  ' Please specify a valid amount',\n] as const\nexport type LogOrIngredientUpdateError = typeof logOrIngredientUpdateError\n\nexport const LogItem: React.FC<{\n  log: Log\n  profile: Profile\n  renderUnit: boolean\n}> = (props) => {\n  const { log, profile } = props\n  const { alias, amount, barcode, consumed, createdAt, id, meal, type, unit } =\n    log\n  const food = log.logToFood\n  const recipe = log.logToRecipe\n\n  const onUpdate = (\n    id: string,\n    unit: Unit | null,\n    amount: number | null,\n    consumed: boolean | null,\n    meal: Meal | null\n  ): Promise<string | Log> => {\n    return new Promise((resolve, reject) => {\n      if (consumed === null) {\n        toast.error('Please mark the log as consumed or not')\n        reject('Please mark the log as consumed or not')\n      } else if (!unit) {\n        const message = logOrIngredientUpdateError[0]\n        toast.error(message)\n        reject(message)\n      } else if (!amount) {\n        const message = logOrIngredientUpdateError[1]\n        toast.error(message)\n        reject(message)\n      } else {\n        const variables = {\n          pk_columns: { id },\n          set: { amount, consumed, meal, unit },\n        }\n        return updateLogOnCloud(variables, () => {\n          resolve('Success!')\n        })\n      }\n    })\n  }\n\n  const onDelete = () => {\n    deleteLogOnCloud(id, () => {})\n  }\n\n  const src = selectFoodImage(food || recipe, getImagePath)\n  const name = recipe?.name || food?.name || ''\n\n  return (\n    <Item\n      item={{\n        alias,\n        amount,\n        barcode,\n        basicFood: log.basicFood,\n        childRecipe: null,\n        consumed,\n        createdAt,\n        food,\n        id,\n        meal,\n        name,\n        onDelete,\n        onUpdate,\n        profile,\n        recipe,\n        src: barcode ? BarcodeWithoutScanner.src : src,\n        type,\n        unit,\n      }}\n    />\n  )\n}\n","export default {\"src\":\"/_next/static/media/calculator.00896922.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/edit.aac9bd0e.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/food.78d03985.svg\",\"height\":600,\"width\":600,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/foodbowl.8fdee5b4.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/mortarboard.e8856edb.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/recipe.aab03a9a.svg\",\"height\":600,\"width\":600,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/sunrise.54df953e.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\nimport { useStoreon } from 'storeon/react'\nimport Barcode from '../../../assets/common/barcode.svg'\nimport Calculator from '../../../assets/common/calculator.svg'\nimport Edit from '../../../assets/common/edit.svg'\nimport Runner from '../../../assets/common/exercise.svg'\nimport Rocket from '../../../assets/common/fast.svg'\nimport CustomFood from '../../../assets/common/food.svg'\nimport Food from '../../../assets/common/foodbowl.svg'\nimport Search from '../../../assets/common/magnify.svg'\nimport Mortarboard from '../../../assets/common/mortarboard.svg'\nimport CustomRecipe from '../../../assets/common/recipe.svg'\nimport Sunrise from '../../../assets/common/sunrise.svg'\nimport { isMobile } from '../../../helpers/isMobile'\nimport { Profile } from '../../../models/profile'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { colors } from '../../../theme'\nimport { md } from '../../../theme'\nimport { HiddenInput } from '../../buttons/HiddenInput'\nimport { Explanation } from '../../explanation/Explanation'\nimport { Image } from '../../image/Image'\n\ntype props = {\n  profile: Profile\n}\nexport const Shell: React.FC<props> = ({ profile }) => {\n  const { dispatch }: { dispatch: Dispatch<AllEvents> } = useStoreon()\n\n  const shell = css`\n    margin-bottom: 50px;\n    margin-top: 50px;\n    width: 100%;\n  `\n  const section = css`\n    margin-top: 50px;\n    width: 95%;\n  `\n  const sectionHeader = css`\n    margin-bottom: 10px;\n    > button,\n    a.button {\n      border-radius: 5px;\n      font-size: 14px;\n      margin-left: 10px;\n      padding: 7.5px 10px;\n      position: relative;\n    }\n  `\n  const buttons = css`\n    width: 100%;\n    button,\n    a.button {\n      border: 1px solid ${colors.lightgrey};\n      flex: 1;\n      font-size: 1rem;\n      margin: 10px 5px;\n      position: relative;\n\n      @media (max-width: ${md}px) {\n        min-width: 100%;\n      }\n    }\n  `\n\n  const explanationHeader = css`\n    margin-right: 5px;\n  `\n\n  return (\n    <div id=\"Shell\" css={shell} className={`fcc`}>\n      <Image width={70} height={70} src={Sunrise} alt=\"sun\" />\n      <div\n        css={css`\n          color: ${colors.black};\n          font-size: 1.5rem;\n          font-weight: 700;\n          margin-top: 15px;\n        `}\n      >\n        It{`'`}s a new day!\n      </div>\n      <div\n        css={css`\n          font-size: 1.2rem;\n          font-weight: 300;\n          margin-top: 10px;\n        `}\n      >\n        Here are some things to do\n      </div>\n\n      {profile.showCalories && (\n        <div css={section} className={`fc`}>\n          <div css={sectionHeader} className={`fr`}>\n            <Image width={40} height={40} src={Calculator} alt=\"Calculator\" />\n            <div className=\"ml15\">Set calorie {'&'} protein goals</div>\n            <button\n              className=\"reset pink ml10\"\n              type=\"button\"\n              onClick={() => dispatch('openTargetModal')}\n            >\n              Here\n            </button>\n          </div>\n          <Explanation color=\"background\">\n            <div className=\"fr\">\n              <strong css={explanationHeader}>Remember: </strong> Logs reset\n              each day\n            </div>\n          </Explanation>\n        </div>\n      )}\n\n      <div css={section} className={`fc`}>\n        <div css={sectionHeader} className={`fr`}>\n          <Image width={40} height={40} src={Food} alt=\"Food\" />\n          <div className=\"ml15\">Add a log</div>\n        </div>\n        <div css={buttons} className={`fr wrap`}>\n          <button\n            type=\"button\"\n            onClick={() => {\n              dispatch('openModal')\n            }}\n          >\n            <Image width={30} height={30} src={Search} alt=\"search\" />\n            <HiddenInput />\n            <div className=\"ml10\">Search</div>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              dispatch('openBarcodeModal')\n            }}\n          >\n            <Image width={30} height={30} src={Barcode} alt=\"Barcode\" />\n            <div className=\"ml10\">Barcode</div>\n          </button>\n          {profile.showCalories && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                dispatch('openQuickAddModal')\n              }}\n            >\n              <Image width={30} height={30} src={Rocket} alt=\"search\" />\n              <HiddenInput type=\"text\" inputMode=\"decimal\" />\n              <div\n                className=\"ml10\"\n                css={css`\n                  white-space: nowrap;\n                `}\n              >\n                Quick Add\n              </div>\n            </button>\n          )}\n          {profile.showCalories && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                dispatch('openExerciseModal')\n              }}\n            >\n              <Image width={30} height={30} src={Runner} alt=\"search\" />\n              <div className=\"ml10\">Exercise</div>\n            </button>\n          )}\n        </div>\n        {!isMobile() && (\n          <div className=\"w100\">\n            <Explanation color=\"blue\">\n              <div>\n                <strong>Tip:</strong> To log your food even faster, check out{' '}\n                <button\n                  className=\"empty inline\"\n                  onClick={() => dispatch('openHelpModal')}\n                >\n                  <strong>\n                    <u>our keyboard shortcuts</u>\n                  </strong>\n                  .\n                </button>\n              </div>\n            </Explanation>\n          </div>\n        )}\n        {profile.showCalories && (\n          <Explanation color=\"green\">\n            <div>\n              <strong>Tip: </strong> With{' '}\n              <button\n                className=\"empty inline mr5\"\n                onClick={() => dispatch('openQuickAddModal')}\n              >\n                <strong>Quick Add 🚀</strong>\n              </button>\n              you can add calories and protein directly.\n            </div>\n          </Explanation>\n        )}\n      </div>\n      <div css={section} className={`fc`}>\n        <div css={sectionHeader} className={`fr`}>\n          <Image width={40} height={40} src={Edit} alt=\"Pencil\" />\n          <div className=\"ml15\">Create a food or recipe</div>\n        </div>\n        <div css={buttons} className={`fr wrap`}>\n          <button\n            type=\"button\"\n            onClick={() => {\n              dispatch('openFoodFormModal')\n            }}\n          >\n            <Image width={30} height={30} src={CustomFood} alt=\"search\" />\n            <div className=\"ml10\">Food</div>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              dispatch('openRecipeFormModal')\n            }}\n          >\n            <Image width={30} height={30} src={CustomRecipe} alt=\"Recipe\" />\n            <div className=\"ml10\">Recipe</div>\n          </button>\n        </div>\n      </div>\n\n      <div css={section} className={`fc`}>\n        <div css={sectionHeader} className={`fr`}>\n          <Image width={40} height={40} src={Mortarboard} alt=\"Mortarboard\" />\n          <div className=\"ml15\">Improve your skills</div>\n          <a\n            href=\"https://cleanslate.sh/curriculum\"\n            target=\"_blank\"\n            className=\"pink button\"\n            rel=\"noreferrer\"\n          >\n            Here\n          </a>\n        </div>\n        <Explanation color=\"background\">\n          <div>Losing weight is a skill. Let our curriculum teach you how!</div>\n        </Explanation>\n      </div>\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport groupBy from 'lodash.groupby'\nimport React from 'react'\nimport { quickAddUnits } from '../../../constants/units'\nimport { Unit } from '../../../constants/units'\nimport { profileIsLoaded } from '../../../helpers/profileIsLoaded'\nimport { Food } from '../../../models/food'\nimport { Log, Meal, MealEnum } from '../../../models/log'\nimport { Profile } from '../../../models/profile'\nimport { colors } from '../../../theme'\nimport { Spinner } from '../../spinner/Spinner'\nimport { sortByCreatedAt } from './helpers/sortByCreatedAt'\nimport { LogItem } from './LogItem'\nimport { Shell } from './Shell'\n\ntype props = {\n  logs: Log[]\n  foods: Food[]\n  profile: Profile\n}\n\nexport const LogList: React.FC<props> = (props) => {\n  const { logs, profile } = props\n  const units: Unit[] = quickAddUnits\n\n  const logsToUse = sortByCreatedAt(\n    [...logs].filter((log) => !units.includes(log.unit))\n  ) as Log[]\n\n  const groupedLogs = groupBy(logsToUse, 'meal')\n  const consumptionByGroup: Record<Meal, boolean> = {\n    Breakfast: true,\n    Dinner: true,\n    Lunch: true,\n    Snack: true,\n  }\n\n  Object.keys(groupedLogs).map((m) => {\n    const meal = m as Meal\n    const status = groupedLogs[meal].reduce((acc, log) => {\n      if (log.consumed) {\n        acc = true\n      } else {\n        acc = false\n      }\n      return acc\n    }, true)\n\n    consumptionByGroup[meal] = status\n  })\n\n  const mapMealToColor = (meal: Meal) => {\n    if (meal === 'Breakfast') {\n      return colors.pink\n    }\n    if (meal === 'Lunch') {\n      return colors.green\n    }\n    if (meal === 'Dinner') {\n      return colors.blue\n    } else {\n      return colors.yellow\n    }\n  }\n\n  return (\n    <div\n      css={css`\n        margin: 0 auto;\n        width: 90%;\n      `}\n    >\n      {logs.length > 0 ? (\n        Object.keys(groupedLogs)\n          .sort((a, b) => {\n            const mealA = a as Meal\n            const mealB = b as Meal\n            return MealEnum[mealA] - MealEnum[mealB]\n          })\n          .map((m, i) => {\n            const meal = m as Meal\n            const logsByMeal = groupedLogs[meal]\n            return (\n              <div key={meal}>\n                {profile.enablePlanning && (\n                  <div\n                    css={css`\n                      margin-top: ${i === 0 ? 20 : 0}px;\n                      background-color: ${mapMealToColor(meal)};\n                      text-decoration: ${consumptionByGroup[meal]\n                        ? 'line-through'\n                        : undefined};\n                      opacity: ${consumptionByGroup[meal] ? 0.5 : 1};\n                      display: inline-block;\n                      padding: 5px 7.5px;\n                      border-radius: 5px;\n                      font-size: 0.9rem;\n                    `}\n                  >\n                    {meal}\n                  </div>\n                )}\n                {logsByMeal.map((log: Log) => (\n                  <LogItem\n                    key={log.id}\n                    log={log}\n                    profile={profile}\n                    renderUnit={true}\n                  />\n                ))}\n              </div>\n            )\n          })\n      ) : profileIsLoaded(profile) ? (\n        <Shell profile={profile} />\n      ) : (\n        <div className=\"w100 h100\">\n          <Spinner />\n        </div>\n      )}\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** Zips two lists into one object.\n *\n * For example: zipObject(['a', 'b'], [1, 2]) => { 'a': 1, 'b': 2 } */\nexport const zipObject = (L1: Array<any>, L2: Array<any>): Record<any, any> => {\n  return L1.reduce((acc, item, index) => {\n    acc[item] = L2[index]\n    return acc\n  }, {})\n}\n","import { css, SerializedStyles } from '@emotion/react'\nimport React from 'react'\nimport { colors } from '../../theme'\n\ntype props = {\n  className?: string\n  height?: number\n  styles?: SerializedStyles\n}\nexport const Divider: React.FC<props> = ({ className, height, styles }) => {\n  const divider = css`\n    background-color: ${colors.background};\n    height: ${height || 2}px;\n    width: 100%;\n  `\n  return <div className={className} css={[divider, styles]} />\n}\n","import { QuickAddUnit } from '../../../../constants/units'\nimport { UnitLogs } from './getUnitLogs'\n\nexport type UnitTotals = Record<QuickAddUnit, number>\nexport const getTotals = (unitLogs: UnitLogs): UnitTotals => {\n  return {\n    CALORIE: unitLogs.CALORIE.reduce((accumulator, log) => {\n      return log.amount + accumulator\n    }, 0),\n    EXERCISE: unitLogs.EXERCISE.reduce((accumulator, log) => {\n      return log.amount + accumulator\n    }, 0),\n    PROTEIN: unitLogs.PROTEIN.reduce((accumulator, log) => {\n      return log.amount + accumulator\n    }, 0),\n  }\n}\n","import { quickAddUnits } from '../../../../constants/units'\nimport { QuickAddUnit } from '../../../../constants/units'\nimport { Log } from '../../../../models/log'\n\nexport type UnitLogs = Record<QuickAddUnit, Log[]>\n\nexport const getUnitLogs = (logs: Log[]): UnitLogs => {\n  const units = quickAddUnits\n  const unitLogs = logs.filter((log) => units.includes(log.unit))\n  const calorieLogs = unitLogs.filter((log) => log.unit === 'CALORIE')\n  const proteinLogs = unitLogs.filter((log) => log.unit === 'PROTEIN')\n  const exerciseLogs = unitLogs.filter((log) => log.unit === 'EXERCISE')\n  return {\n    CALORIE: calorieLogs,\n    EXERCISE: exerciseLogs,\n    PROTEIN: proteinLogs,\n  }\n}\n","import { Log } from '../../../../models/log'\nimport { getTotals } from './getTotals'\nimport { getUnitLogs } from './getUnitLogs'\n\nexport const getCombinedLogs = (logs: Log[]): Log[] => {\n  const unitLogs = getUnitLogs(logs)\n  const totals = getTotals(unitLogs)\n\n  const calorie = new Log()\n  calorie.amount = totals.CALORIE\n  calorie.unit = 'CALORIE'\n\n  const protein = new Log()\n  protein.amount = totals.PROTEIN\n  protein.unit = 'PROTEIN'\n\n  const exercise = new Log()\n  exercise.amount = totals.EXERCISE\n  exercise.unit = 'EXERCISE'\n\n  return [calorie, protein, exercise]\n}\n","import { quickAddUnits } from '../../../../constants/units'\nimport { Log } from '../../../../models/log'\n\nexport const getCount = (logs: Log[]) => {\n  const units = quickAddUnits\n  return logs.filter((log) => units.includes(log.unit)).length\n}\n","import { DELETE_LOGS } from '../../graphql/log'\nimport { store } from '../../store/store'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\ntype Response = { delete_logs: { returning: { id: string }[] } }\n\nexport const deleteLogsOnCloud = (\n  idsToDelete: string[],\n  onSuccess: () => void\n) =>\n  getHasuraClient()\n    .then((client) => {\n      client\n        .request(stringifyQuery(DELETE_LOGS), { id: idsToDelete })\n        .then((response: Response) => {\n          const ids = response.delete_logs.returning.map((o) => o.id)\n          store.dispatch('removeLogsById', ids)\n          onSuccess()\n        })\n    })\n    .catch((error) => {\n      handleError(error)\n    })\n","import { Unit } from '../../../constants/units'\nimport { capitalize } from '../../../helpers/capitalize'\n\n/** Capitalize the passed in unit and possibly pluralize it */\nexport const formatUnitAsTitle = (unit: Unit) => {\n  if (unit === 'CALORIE') {\n    return capitalize(unit + 'S')\n  } else {\n    return capitalize(unit)\n  }\n}\n","export default {\"src\":\"/_next/static/media/calorie.603efe2d.svg\",\"height\":200,\"width\":200,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/fastexercise.770aaf4b.svg\",\"height\":200,\"width\":200,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/protein.6f2ead17.svg\",\"height\":200,\"width\":200,\"blurWidth\":0,\"blurHeight\":0};","import Calorie from '../../../assets/common/calorie.svg'\nimport Exercise from '../../../assets/common/fastexercise.svg'\nimport Protein from '../../../assets/common/protein.svg'\nimport { Unit } from '../../../constants/units'\n\nexport const selectUnitImage = (unit: Unit) => {\n  if (unit === 'CALORIE') {\n    return Calorie.src\n  } else if (unit === 'PROTEIN') {\n    return Protein.src\n  } else if (unit === 'EXERCISE') {\n    return Exercise.src\n  } else {\n    throw Error(`Error: selectUnitImage: ${unit}`)\n  }\n}\n","import React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport { quickAddUnits } from '../../../constants/units'\nimport { deleteLogsOnCloud } from '../../../helpers/log/deleteLogsOnCloud'\nimport { Log } from '../../../models/log'\nimport { Data } from '../../../store/data/types'\nimport { Item } from '../../item/Item'\nimport { formatUnitAsTitle } from '../helpers/formatUnitAsTitle'\nimport { selectUnitImage } from '../helpers/selectUnitImage'\n\nexport const UnitItem: React.FC<{ log: Log }> = (props) => {\n  const { log } = props\n  const { amount, createdAt, id, unit } = log\n\n  const { data }: { data: Data } = useStoreon('data')\n\n  const logs = data.profiles[0].logs\n\n  const onDelete = () => {\n    // When trying to delete a quick add unit, find ALL quick add units corresponding to the unit\n    // For example, find all CALORIE logs\n    // Then delete all of them\n    if (quickAddUnits.includes(unit)) {\n      const logsToDelete = logs\n        .filter((log) => log.unit === unit)\n        .map((log) => log.id)\n      deleteLogsOnCloud(logsToDelete, () => {})\n    }\n  }\n\n  const name = `Quick Add: ${formatUnitAsTitle(unit)}`\n  const src = selectUnitImage(unit)\n\n  return (\n    <Item\n      item={{\n        alias: null,\n        amount,\n        barcode: null,\n        basicFood: null,\n        childRecipe: null,\n        consumed: null,\n        createdAt,\n        food: null,\n        id,\n        meal: null,\n        name,\n        onDelete,\n        onUpdate: null,\n        profile: null,\n        recipe: null,\n        src,\n        type: 'unit',\n        unit,\n      }}\n    />\n  )\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { quickAddUnits } from '../../../constants/units'\nimport { zipObject } from '../../../helpers/zipObject'\nimport { Log } from '../../../models/log'\nimport { Divider } from '../../divider/Divider'\nimport { getCombinedLogs } from './helpers/getCombinedLogs'\nimport { getCount } from './helpers/getCount'\nimport { UnitItem } from './UnitItem'\n\ntype props = {\n  logs: Log[]\n}\n\nexport const UnitList: React.FC<props> = (props) => {\n  const { logs } = props\n\n  // To implement custom ordering: CALORIE -> PROTEIN -> EXERCISE\n  const ordering = zipObject(quickAddUnits, [1, 2, 3])\n\n  return (\n    <div\n      css={css`\n        margin: 0 auto;\n        width: 90%;\n      `}\n    >\n      {getCombinedLogs(logs)\n        .sort(\n          (logA: Log, logB: Log) => ordering[logA.unit] - ordering[logB.unit]\n        )\n        // Don't show any log with no amount\n        .filter((log: Log) => log.amount !== 0)\n        .map((log: Log) => (\n          <UnitItem key={log.id} log={log} />\n        ))}\n      {getCount(logs) >= 1 && <Divider height={2} className=\"mt25 mb20\" />}\n    </div>\n  )\n}\n","import { Dispatch, store } from '../store/store'\n\nexport const getDispatch = (): Dispatch => store.dispatch\n","import { isIpad } from './isIpad'\n\nexport const isMobileSafari = () => {\n  const ua = window.navigator.userAgent\n  const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i)\n  const webkit = !!ua.match(/WebKit/i)\n  const isMobileSafari = iOS && webkit && !ua.match(/CriOS/i)\n  return isMobileSafari || isIpad()\n}\n","export const isNumeric = (number: any) => {\n  return isNaN(number) === false\n}\n","const beep = (freq = 750, duration = 150, vol = 5) => {\n  try {\n    const context = window.audioContext\n    const oscillator = context.createOscillator()\n    const gain = context.createGain()\n    oscillator.connect(gain)\n    oscillator.frequency.value = freq\n    oscillator.type = 'square'\n    gain.connect(context.destination)\n    gain.gain.value = vol * 0.01\n    oscillator.start(context.currentTime)\n    oscillator.stop(context.currentTime + duration * 0.001)\n  } catch (e) {\n    console.warn('Sorry, Web Audio API is not supported by your browser')\n    console.warn(e.toString())\n  }\n}\n\nconst WORKER_TYPE = {\n  JS_QR: 'jsQr',\n  WASM: 'wasm',\n}\n\nexport { beep, WORKER_TYPE }\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nclass Transformer {\n  codeType() {\n    return 'TODO'\n  }\n\n  identified(raw) {\n    return false\n  }\n\n  async transform(raw) {\n    return 'TODO'\n  }\n\n  static buttonCaption() {\n    return 'TODO'\n  }\n}\n\nconst CODE_TYPE = {\n  RAW: 'RAW',\n}\n\nexport { CODE_TYPE, Transformer }\n","import { css } from '@emotion/react'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Explanation } from '../../explanation/Explanation'\nimport { WORKER_TYPE } from '../helpers'\nimport { CODE_TYPE } from '../transformers/base'\n\nconst BTN_TXT = {\n  AGAIN: 'START AGAIN',\n  START: 'START',\n  STOP: 'STOP',\n}\n\nconst CANVAS_SIZE = {\n  HEIGHT: 430,\n  WIDTH: 320,\n}\n\nconst sw = CANVAS_SIZE.WIDTH\nconst sh = CANVAS_SIZE.HEIGHT\nconst dw = sw\nconst dh = sh\nconst dx = 0\nconst dy = 0\nlet sx = 0\nlet sy = 0\n\nlet fps = 0\n\nconst crossHairSvg =\n  'M77.125 148.02567c0-3.5774 2.73862-6.27567 6.37076-6.27567H119V117H84.0192C66.50812 117 52 130.77595 52 148.02567V183h25.125v-34.97433zM237.37338 117H202v24.75h35.18494c3.63161 0 6.69006 2.69775 6.69006 6.27567V183H269v-34.97433C269 130.77595 254.88446 117 237.37338 117zM243.875 285.4587c0 3.5774-2.73863 6.27567-6.37076 6.27567H202V317h35.50424C255.01532 317 269 302.70842 269 285.4587V251h-25.125v34.4587zM83.49576 291.73438c-3.63213 0-6.37076-2.69776-6.37076-6.27568V251H52v34.4587C52 302.70842 66.50812 317 84.0192 317H119v-25.26563H83.49576z'\nconst crossHairWidth = 217,\n  crossHairHeight = 200,\n  x0 = 53,\n  y0 = 117\n\nclass Scan extends React.Component {\n  constructor(props) {\n    super(props)\n    this.video = document.createElement('video')\n    this.video.onplaying = () => {\n      sx = (this.video.videoWidth - CANVAS_SIZE.WIDTH) / 2\n      sy = (this.video.videoHeight - CANVAS_SIZE.HEIGHT) / 2\n    }\n    this.state = {\n      btnText: BTN_TXT.START,\n      bw: this.props.bw,\n      codeType: CODE_TYPE.RAW,\n      crosshair: this.props.crosshair,\n      fpsOn: this.props.fps,\n      neverScanned: true,\n      onScan: this.props.onScan,\n      openModal: false,\n      rawCode: '',\n      scanning: false,\n      transformToggle: true,\n      worker: this.props.worker,\n    }\n\n    this.decodeQR = this.props.decode\n    this.scanRate = this.props.scanRate\n    this.qrworker = null\n    this.oldTime = 0\n  }\n\n  initWorker = () => {\n    this.qrworker = new Worker(this.state.worker + 'Worker.js')\n\n    this.qrworker.onmessage = async (ev) => {\n      if (ev.data != null) {\n        this.qrworker.terminate()\n        const result = ev.data\n        this.stopScan()\n\n        let res = result.data\n        const milliseconds = ev.data.ms\n        const rawCode = res\n        let codeType = CODE_TYPE.RAW\n\n        this.setState({\n          barcode: res,\n          codeType,\n          milliseconds,\n          rawCode,\n          resultOpen: true,\n        })\n      }\n    }\n  }\n\n  startScan = () => {\n    this.initWorker()\n    this.fpsTimestamp = new Date()\n\n    this.setState({\n      barcode: '',\n      btnText: BTN_TXT.STOP,\n      codeType: CODE_TYPE.RAW,\n      neverScanned: false,\n      rawCode: '',\n      resultOpen: false,\n      scanning: true,\n      transformToggle: true,\n    })\n    navigator.mediaDevices\n      .getUserMedia({ audio: false, video: { facingMode: 'environment' } })\n      .then((stream) => {\n        this.video.srcObject = stream\n        this.video.setAttribute('playsinline', 'true')\n        this.video.play()\n        requestAnimationFrame(this.tick)\n      })\n      .catch((err) => {\n        this.stopScan()\n        alert(err)\n      })\n  }\n\n  initializeAudio = () => {\n    window.AudioContext = window.AudioContext || window.webkitAudioContext\n    if (window.AudioContext) {\n      window.audioContext = new window.AudioContext()\n    }\n    const fixAudioContext = function () {\n      if (window.audioContext) {\n        // Create empty buffer\n        const buffer = window.audioContext.createBuffer(1, 1, 22050)\n        const source = window.audioContext.createBufferSource()\n        source.buffer = buffer\n        // Connect to output (speakers)\n        source.connect(window.audioContext.destination)\n        // Play sound\n        if (source.start) {\n          source.start(0)\n        } else if (source.play) {\n          source.play(0)\n        } else if (source.noteOn) {\n          source.noteOn(0)\n        }\n      }\n      // Remove events\n      document.removeEventListener('touchstart', fixAudioContext)\n      document.removeEventListener('touchend', fixAudioContext)\n    }\n    // iOS 6-8\n    document.addEventListener('touchstart', fixAudioContext)\n    // iOS 9\n    document.addEventListener('touchend', fixAudioContext)\n  }\n\n  stopScan = () => {\n    this.setState({\n      boxShadow:\n        '0 4px 8px 0 rgba(0, 0, 0, .2), 0 6px 20px 0 rgba(0, 0, 0, .19)',\n      btnText: BTN_TXT.START,\n      scanning: false,\n    })\n    this.video.pause()\n    if (this.video.srcObject) {\n      this.video.srcObject.getVideoTracks().forEach((track) => track.stop())\n      this.video.srcObject = null\n    }\n  }\n\n  tick = (time) => {\n    if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\n      if (this.state.fpsOn) {\n        fps = 1000 / (time - this.fpsTimestamp)\n        this.fpsTimestamp = time\n      }\n\n      this.canvas.drawImage(this.video, sx, sy, sw, sh, dx, dy, dw, dh)\n\n      if (this.state.bw) this.monochromize()\n      if (this.state.crosshair) this.drawCrosshair()\n      if (this.state.fpsOn) this.drawFPS(fps)\n      if (this.state.scanning) requestAnimationFrame(this.tick)\n      if (this.decodeQR) this.recognizeQRcode(time)\n    } else if (this.state.scanning) requestAnimationFrame(this.tick)\n  }\n\n  monochromize = () => {\n    let imgd = this.canvas.getImageData(\n      0,\n      0,\n      this.canvasElement.width,\n      this.canvasElement.height\n    )\n    let pix = imgd.data\n    for (let i = 0; i < pix.length; i += 4) {\n      let gray = pix[i] * 0.3 + pix[i + 1] * 0.59 + pix[i + 2] * 0.11\n      pix[i] = gray\n      pix[i + 1] = gray\n      pix[i + 2] = gray\n    }\n    this.canvas.putImageData(imgd, 0, 0)\n  }\n\n  drawCrosshair = () => {\n    this.canvas.fillStyle = 'rgba(255,255,255,0.4)'\n    const shape = new Path2D(crossHairSvg)\n    this.canvas.fill(shape)\n  }\n\n  recognizeQRcode = (time) => {\n    if (time - this.oldTime > this.scanRate) {\n      this.oldTime = time\n      let imageData\n      if (this.state.crosshair === true)\n        imageData = this.canvas.getImageData(\n          x0,\n          y0,\n          crossHairWidth,\n          crossHairHeight\n        )\n      else\n        imageData = this.canvas.getImageData(\n          0,\n          0,\n          this.canvasElement.width,\n          this.canvasElement.height\n        )\n      this.qrworker.postMessage({\n        height: imageData.height,\n        width: imageData.width,\n      })\n      this.qrworker.postMessage(imageData, [imageData.data.buffer])\n    }\n  }\n\n  drawFPS = (fps) => {\n    this.canvas.font = 'normal 16pt Arial'\n    this.canvas.fillStyle = '#f8ff4c'\n    this.canvas.fillText(Math.round(fps) + ' fps', 10, CANVAS_SIZE.HEIGHT - 16)\n  }\n\n  componentDidMount() {\n    this.canvasElement = document.getElementById('canvas')\n    this.canvas = this.canvasElement.getContext('2d')\n    this.canvasElement.width = CANVAS_SIZE.WIDTH\n    this.canvasElement.height = CANVAS_SIZE.HEIGHT\n  }\n\n  onBtnClickHandler = (e) => {\n    e.preventDefault()\n    if (this.state.scanning) this.stopScan()\n    else this.startScan()\n  }\n\n  startStyle = () => {\n    const style = { textAlign: 'center', width: 64 }\n    if (this.state.scanning) return { backgroundColor: 'red', ...style }\n    else return { backgroundColor: '', ...style }\n  }\n\n  render() {\n    if (this.state.resultOpen) {\n      const result = this.renderQrCodeResult()\n      this.props.onScan(result)\n    }\n    return (\n      <div\n        className=\"fcs\"\n        css={css`\n          width: 90%;\n          height: 100%;\n          max-width: 400px;\n        `}\n      >\n        <button\n          className=\"purple bold\"\n          css={css`\n            width: 100% !important;\n            margin: 20px auto !important;\n            margin-bottom: ${!this.state.neverScanned\n              ? '20px !important'\n              : '0px !important'};\n          `}\n          onTouchStart={this.initializeAudio}\n          onClick={this.onBtnClickHandler}\n          style={this.startStyle()}\n        >\n          {this.state.scanning ? 'Stop scan' : 'Scan barcode'}\n        </button>\n        {this.state.neverScanned && (\n          <Explanation color=\"blue\">\n            <div>\n              This barcode scanner uses the Open Food Facts database. Because\n              this database is a free service, it may not have every food. Just\n              a heads up!\n            </div>\n          </Explanation>\n        )}\n        <canvas\n          css={css`\n            width: 100%;\n            max-width: 400px;\n            max-height: ${this.state.neverScanned ? '0px' : '400px'};\n            margin: 0px auto;\n          `}\n          id=\"canvas\"\n        />\n      </div>\n    )\n  }\n\n  renderQrCodeResult = () => {\n    return this.state.barcode\n  }\n\n  componentWillUnmount() {\n    if (this.state.scanning === true) this.stopScan()\n  }\n}\n\nScan.propTypes = {\n  bw: PropTypes.bool,\n  crosshair: PropTypes.bool,\n  decode: PropTypes.bool,\n  fps: PropTypes.bool,\n  scanRate: PropTypes.number,\n  worker: PropTypes.string,\n}\n\nScan.defaultProps = {\n  bw: false,\n  crosshair: true,\n  decode: true,\n  fps: false,\n  scanRate: 250,\n  worker: WORKER_TYPE.WASM,\n}\n\nexport default Scan\n","export default {\"src\":\"/_next/static/media/check.e08f44ed.svg\",\"height\":16,\"width\":16,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\nimport Check from '../../../assets/common/check.svg'\nimport { Image } from '../../image/Image'\n\ntype props = {\n  onClick?: () => void\n  className?: string\n  submit: boolean\n}\nexport const SubmitButton: React.FC<props> = ({\n  className,\n  onClick,\n  submit,\n}) => {\n  const button = css`\n    height: 50px;\n    margin-left: auto;\n    margin-top: 10px;\n    width: 60px;\n  `\n\n  return (\n    <button\n      id=\"SubmitButton\"\n      onClick={() => {\n        if (onClick) onClick()\n      }}\n      css={button}\n      className={`success ${className}`}\n      type={submit ? 'submit' : 'button'}\n    >\n      <Image width={30} height={30} src={Check} alt=\"Check\" />\n    </button>\n  )\n}\n","import React from 'react'\nimport { SubmitButton } from '../../item-modal/components/SubmitButton'\n\ntype props = {\n  showSubmit: boolean\n  submit: () => void\n}\nexport const ButtonPanel: React.FC<props> = ({ showSubmit, submit }) => {\n  return (\n    <div className=\"w100 fre mb20\">\n      {showSubmit && (\n        <SubmitButton className=\"mt20\" submit={false} onClick={submit} />\n      )}\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport { isMobile } from '../../helpers/isMobile'\nimport { HiddenInput } from '../buttons/HiddenInput'\n\ntype props = {\n  value: string | number\n  setValue: (value: string) => void\n  placeholder?: string\n  className?: string\n  inputRef?: React.RefObject<HTMLInputElement>\n}\nexport const FractionInput: React.FC<props> = ({\n  className,\n  inputRef,\n  placeholder,\n  setValue,\n  value,\n}) => {\n  const styles = css`\n    height: 41px;\n    margin-left: 10px;\n  `\n\n  return (\n    <div className={`${className} fr w100`}>\n      <input\n        id=\"FractionInputInput\"\n        onChange={(event) => {\n          setValue(event.target.value)\n        }}\n        ref={inputRef}\n        required\n        step=\"any\"\n        type=\"text\"\n        inputMode=\"decimal\"\n        autoComplete={'off'}\n        autoCorrect={'off'}\n        autoCapitalize={'off'}\n        value={value}\n        placeholder={placeholder || ''}\n      />\n      {isMobile() && (\n        <button\n          onClick={() => {\n            setValue(value + '/')\n          }}\n          css={styles}\n          className={`pink`}\n          type=\"button\"\n        >\n          <HiddenInput inputMode=\"decimal\" />/\n        </button>\n      )}\n    </div>\n  )\n}\n","import { volumeUnits, weightUnits } from '../../../constants/units'\nimport { defaultContainer, defaultCount, Unit } from '../../../constants/units'\nimport { zipObject } from '../../../helpers/zipObject'\nimport { Food } from '../../../models/food'\nimport { Recipe } from '../../../models/recipe'\n\n/**\n * Given the all possible units, it slims and prettifies those units for each food item or dictionary.\n * Ultimately, this function creates a dictionary of defaultUnit:prettyUnit. In most cases, the prettyUnit and defaultUnit are identical!\n * Thus, the dictionary looks like this.\n * {TBSP: \"TBSP\", \"GRAM\": \"GRAM\", \"COUNT\": \"COUNT\"}, etc.\n * - If the food item does NOT have values for countName or volume (i.e. TBSP) in the database, those key:value pairs are removed\n * - If the food item has a \"pretty\" name for count (i.e. onion), the default value of \"COUNT\" is replaced with the prettyName\n */\n\nexport const getPrettyUnits = (item: Food | Recipe) => {\n  const volume =\n    (item.type === 'food' && (item?.countToTbsp || item?.tbspToGram)) ||\n    (item.type === 'recipe' && item?.countToTbsp)\n      ? volumeUnits\n      : []\n\n  const volumeDict = zipObject(volume, volume)\n\n  const weight =\n    (item.type === 'food' && (item.caloriesPerGram || item.countToGram)) ||\n    (item.type === 'recipe' && item.countToGram)\n      ? weightUnits\n      : []\n\n  const weightDict = zipObject(weight, weight)\n\n  const count =\n    item.type === 'recipe' ||\n    (item.type === 'food' && item?.countName) ||\n    (item.type === 'food' &&\n      (item.caloriesPerCount || item.caloriesPerCount === 0) &&\n      (item.proteinPerCount || item.proteinPerCount === 0))\n      ? ['COUNT']\n      : []\n\n  const countDict = zipObject(count, count)\n  if (countDict.COUNT) {\n    countDict.COUNT = item.countName || defaultCount\n  }\n\n  const container =\n    item.type === 'food' &&\n    (item.caloriesPerCount || item.caloriesPerCount === 0) &&\n    (item.proteinPerCount || item.proteinPerCount === 0) &&\n    item.servingPerContainer\n      ? ['CONTAINER']\n      : []\n\n  const containerDict = zipObject(container, container)\n  if (containerDict.COUNT) {\n    containerDict.COUNT = item.countName || defaultContainer\n  }\n\n  return [{ ...countDict, ...containerDict }, weightDict, volumeDict] as Record<\n    Unit,\n    string\n  >[]\n}\n","/* eslint-disable sort/object-properties */\n\nimport { css } from '@emotion/react'\nimport { Meal } from '../../models/log'\nimport { colors } from '../../theme'\nimport { Tabs } from '../tabs/Tabs'\n\ntype props = { meal: Meal; setMeal: (meal: Meal) => void }\nexport const MealInput: React.FC<props> = ({ meal, setMeal }) => {\n  return (\n    <div className=\"mt10 w100 mb10\">\n      <Tabs\n        css={css`\n          flex-wrap: nowrap;\n          button {\n            &.active {\n              background-color: ${colors.pink} !important;\n              border-color: ${colors.pink} !important;\n            }\n          }\n          button > div {\n            font-size: 0.8rem !important;\n          }\n        `}\n        selected={meal}\n        tabs={{\n          Breakfast: {\n            image: '',\n            title: 'Breakfast',\n          },\n          Lunch: {\n            image: '',\n            title: 'Lunch',\n          },\n          Dinner: {\n            image: '',\n            title: 'Dinner',\n          },\n          Snack: {\n            image: '',\n            title: 'Snack',\n          },\n        }}\n        onSelect={(tab) => {\n          setMeal(tab as Meal)\n        }}\n      />\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { colors } from '../../theme'\n\n// X is Units\ntype props<X extends string> = {\n  currentOption: X | null\n  optionDictionary: Record<X, string>[]\n  onChange: (option: X) => void\n  focus: boolean\n}\n\nexport const Select = <X extends string>(props: props<X>) => {\n  const { currentOption, focus, onChange, optionDictionary } = props\n  const optionInput = React.useRef<HTMLDivElement>(null)\n\n  React.useEffect(() => {\n    // Only focus the input on being spawned if the developer explicitly requests it for that component\n    if (optionInput.current && focus) {\n      optionInput.current.focus()\n    }\n  }, [focus])\n\n  const buttons = css`\n    button {\n      flex: 1;\n      font-weight: 500 !important;\n      margin: 5px;\n      text-transform: uppercase;\n    }\n  `\n\n  const active = css`\n    background-color: ${colors.blue} !important;\n    &:hover,\n    &:focus {\n      background-color: ${colors.darkblue} !important;\n    }\n  `\n\n  return (\n    <div css={buttons} ref={optionInput} className={`frc w100 wrap`}>\n      {optionDictionary.map((optionSet, index) => {\n        return (\n          <div key={index} className=\"w100 frc\">\n            {(Object.keys(optionSet) as X[]).map((option) => (\n              <button\n                type=\"button\"\n                id={`Select-${option}`}\n                onClick={() => {\n                  onChange(option)\n                }}\n                css={currentOption === option ? active : ''}\n                className={`background bold`}\n                key={option}\n              >\n                {optionSet[option].toLowerCase()}\n              </button>\n            ))}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Unit } from '../../../constants/units'\nimport { Food } from '../../../models/food'\nimport { Meal } from '../../../models/log'\nimport { Recipe } from '../../../models/recipe'\nimport { FractionInput } from '../../fraction-input/FractionInput'\nimport { getPrettyUnits } from '../../list/helpers/getPrettyUnits'\nimport { MealInput } from '../../meal-input/MealInput'\nimport { Select } from '../../select/Select'\n\ntype props = {\n  selectedItem: Food | Recipe | null\n  unit: Unit | null\n  units?: Unit\n  setUnit: (unit: Unit) => void\n  amount: string | number\n  setAmount: (amount: string) => void\n  meal: Meal\n  setMeal: (meal: Meal) => void\n  enablePlanning: boolean\n}\n\nexport const InputFields: React.FC<props> = ({\n  amount,\n  enablePlanning,\n  meal,\n  selectedItem,\n  setAmount,\n  setMeal,\n  setUnit,\n  unit,\n}) => {\n  const amountInput = React.useRef<HTMLInputElement>(null)\n\n  React.useEffect(() => {\n    if (selectedItem?.name) {\n      amountInput.current?.focus()\n    }\n  }, [selectedItem?.name])\n\n  return (\n    <div className={`w100`}>\n      {/* amount */}\n      <FractionInput\n        inputRef={amountInput}\n        className=\"m20\"\n        value={amount || ''}\n        setValue={setAmount}\n        placeholder={'Enter amount...'}\n      />\n\n      {/* unit */}\n      {selectedItem && (\n        <Select\n          focus={false}\n          currentOption={unit}\n          optionDictionary={getPrettyUnits(selectedItem)}\n          onChange={(newUnit: Unit) => {\n            setUnit(newUnit)\n          }}\n        />\n      )}\n\n      {enablePlanning && <MealInput meal={meal} setMeal={setMeal} />}\n    </div>\n  )\n}\n","import { FoodSubmission } from '../../components/forms/CustomFoodForm/CustomFoodForm'\nimport { CREATE_FOOD } from '../../graphql/food'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport const addFoodToCloud = (\n  variables: FoodSubmission,\n  onSuccess: (id: string) => void\n) =>\n  getHasuraClient()\n    .then((client) => {\n      client\n        .request(stringifyQuery(CREATE_FOOD), { object: variables })\n        .then((e: { insert_foods_one: { id: string } }) => {\n          onSuccess(e.insert_foods_one.id)\n        })\n    })\n    .catch((error) => handleError(error))\n","import { Unit } from '../constants/units'\nimport { uuid } from '../helpers/uuid'\nimport { Food } from './food'\nimport { Barcode } from './log'\nimport { Profile } from './profile'\nimport { Recipe } from './recipe'\n\n// Called ingredients in Hasura\nexport class Ingredient {\n  // Data\n  amount: number\n  barcode: Barcode | null\n  unit: Unit\n\n  // Foreign keys\n  basicFood = uuid() || null\n  childRecipe = uuid() || null\n  food = uuid() || null\n  profile: string\n  recipe = uuid()\n\n  // Relationships\n  ingredientToFood: Food | null\n  ingredientToRecipe: Recipe\n  ingredientToChildRecipe: Recipe | null\n  ingredientToProfile: Profile\n\n  // Metadata\n  id = uuid()\n  updatedAt = new Date()\n  createdAt = new Date()\n  type: 'ingredient'\n\n  constructor() {\n    this.type = 'ingredient'\n  }\n}\n","import { Unit } from '../../constants/units'\nimport { Food } from '../../models/food'\nimport { Ingredient } from '../../models/ingredient'\nimport { Barcode } from '../../models/log'\nimport { Profile } from '../../models/profile'\nimport { Recipe } from '../../models/recipe'\n\nexport const addIngredient = (\n  item: Food | Recipe | null | undefined,\n  barcode: Barcode | null,\n  amount: number,\n  unit: Unit,\n  basicFoodId: string | null\n): Ingredient => {\n  // Make sure a custom food has the right values\n  // Only relevant for a newly added custom food via the barcode scanner\n  if (item?.type === 'food' && !basicFoodId) {\n    item.category = 'Food'\n    item.group = 'Custom'\n    item.basicFoodId = null\n  }\n  const ingredient = new Ingredient()\n  ingredient.amount = amount\n  ingredient.barcode = barcode\n  ingredient.basicFood = basicFoodId\n  ingredient.childRecipe = item?.type === 'recipe' ? item.id : null\n  ingredient.food = item?.type === 'food' ? item.id : null\n  ingredient.ingredientToChildRecipe = item?.type === 'recipe' ? item : null\n  ingredient.ingredientToFood = item?.type === 'food' ? item : null\n  ingredient.ingredientToProfile = new Profile()\n  ingredient.unit = unit\n  return ingredient\n}\n","import { AddLog } from '../../components/standard-adder/helpers/addLog'\nimport { CREATE_LOG } from '../../graphql/log'\nimport { Log } from '../../models/log'\nimport { store } from '../../store/store'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport const addLogToCloud = (log: AddLog, onSuccess: () => void) => {\n  getHasuraClient()\n    .then((client) => {\n      client\n        .request(stringifyQuery(CREATE_LOG), { object: log })\n        .then((result: { insert_logs_one: Log }) => {\n          store.dispatch('addLogs', [result.insert_logs_one])\n          onSuccess()\n        })\n    })\n    .catch((error) => {\n      handleError(error)\n    })\n}\n","import { Unit } from '../../../constants/units'\nimport { addLogToCloud } from '../../../helpers/log/addLogToCloud'\nimport { Barcode, Meal } from '../../../models/log'\nimport { Type } from '../../../store/data/types'\nimport { Dispatch } from '../../../store/store'\n\nexport type AddLog = {\n  alias: string | null\n  amount: number\n  barcode: Barcode | null\n  basicFood: string | undefined\n  consumed: boolean\n  food: string | undefined\n  meal: Meal\n  recipe: string | undefined\n  unit: Unit\n}\n\nexport const addLog = (\n  dispatch: Dispatch,\n  alias: string | null,\n  amount: number | null,\n  unit: Unit | null,\n  barcode: Barcode | null,\n  enablePlanning: boolean,\n  meal: Meal,\n  type: Type,\n  isBasicFood: boolean,\n  id: string | undefined\n) => {\n  const food = type === 'food' && !isBasicFood ? id : undefined\n  const basicFood = type === 'food' && isBasicFood ? id : undefined\n  const recipe = type === 'recipe' ? id : undefined\n  if (amount && unit) {\n    const log: AddLog = {\n      alias,\n      amount,\n      barcode,\n      basicFood,\n      consumed: !enablePlanning,\n      food,\n      meal,\n      recipe,\n      unit,\n    }\n    dispatch('closeModal')\n    dispatch('closeQuickAddModal')\n    dispatch('closeBarcodeModal')\n    addLogToCloud(log, () => {})\n  }\n}\n","import toast from 'react-hot-toast'\nimport { Unit } from '../../../constants/units'\nimport { addFoodToCloud } from '../../../helpers/Food/addFoodToCloud'\nimport { addIngredient } from '../../../helpers/ingredient/addIngredient'\nimport { Food } from '../../../models/food'\nimport { Barcode, Meal } from '../../../models/log'\nimport { SelectedItem } from '../../../store/editor/types'\nimport { Dispatch } from '../../../store/store'\nimport { AdderItem } from '../StandardAdder'\nimport { addLog } from './addLog'\n\nexport const submitEditor = (\n  type: AdderItem,\n  alias: string | null,\n  amount: number | null,\n  unit: Unit | null,\n  barcode: Barcode | null,\n  enablePlanning: boolean,\n  meal: Meal,\n  dispatch: Dispatch,\n  searchResult?: SelectedItem,\n  customFoodToCreate?: Food\n) => {\n  const basicFoodId =\n    searchResult && searchResult.type === 'food' && searchResult.basicFoodId\n\n  if (!amount) {\n    toast.error('Please specify a valid amount')\n    return false\n  }\n\n  if (!unit) {\n    toast.error('Please specify a valid unit')\n    return false\n  }\n\n  if (!searchResult && !barcode) {\n    toast.error('Please specify a valid food or recipe')\n    return false\n  }\n\n  if (type === 'ingredient') {\n    const ingredient = addIngredient(\n      searchResult,\n      barcode,\n      amount,\n      unit,\n      typeof basicFoodId === 'string' ? basicFoodId : null\n    )\n    dispatch('saveIngredient', ingredient)\n    return true\n  }\n\n  if (customFoodToCreate && type === 'log') {\n    addFoodToCloud(\n      {\n        caloriesPerCount: customFoodToCreate?.caloriesPerCount,\n        category: 'Food',\n        containerName: 'Container',\n        countName: 'Serving',\n        countToGram: customFoodToCreate?.countToGram,\n        countToTbsp: customFoodToCreate?.countToTbsp,\n        group: 'Custom',\n        name: customFoodToCreate.name,\n        preferredVolumeUnit: 'TBSP',\n        preferredWeightUnit: 'GRAM',\n        proteinPerCount: customFoodToCreate?.proteinPerCount,\n        servingPerContainer: customFoodToCreate?.servingPerContainer,\n      },\n      (id) => {\n        toast.success(`Created the ${customFoodToCreate.name} custom food!`)\n        addLog(\n          dispatch,\n          alias,\n          amount,\n          unit,\n          null,\n          enablePlanning,\n          meal,\n          'food',\n          false,\n          id\n        )\n        return true\n      }\n    )\n    return true\n  }\n\n  if (type === 'log' && !customFoodToCreate) {\n    const id = searchResult ? searchResult.id : undefined\n    const type = searchResult ? searchResult.type : 'food'\n    addLog(\n      dispatch,\n      alias,\n      amount,\n      unit,\n      barcode,\n      enablePlanning,\n      meal,\n      type,\n      Boolean(basicFoodId),\n      id\n    )\n    return true\n  }\n\n  return false\n}\n","import { css } from '@emotion/react'\nimport axios from 'axios'\nimport { compareVersions } from 'compare-versions'\nimport { useEffect, useState } from 'react'\nimport toast from 'react-hot-toast'\nimport { debounce } from 'throttle-debounce'\nimport UAParser from 'ua-parser-js'\nimport BarcodeWithoutScanner from '../../assets/common/barcode-without-scanner.svg'\nimport { Unit } from '../../constants/units'\nimport { capitalize } from '../../helpers/capitalize'\nimport { getDispatch } from '../../helpers/getDispatch'\nimport { isMobile } from '../../helpers/isMobile'\nimport { isMobileSafari } from '../../helpers/isMobileSafari'\nimport { isNumeric } from '../../helpers/isNumeric'\nimport { isProduction } from '../../helpers/isProduction'\nimport { round } from '../../helpers/round'\nimport { Food } from '../../models/food'\nimport { Barcode, defaultMeal } from '../../models/log'\nimport { Profile } from '../../models/profile'\nimport { Explanation } from '../explanation/Explanation'\nimport { Image } from '../image/Image'\nimport Scan from '../scanner/components/scan'\nimport { ButtonPanel } from '../standard-adder/components/ButtonPanel'\nimport { InputFields } from '../standard-adder/components/InputFields'\nimport { submitEditor } from '../standard-adder/helpers/submitEditor'\n\ntype props = { profile: Profile; type: 'ingredient' | 'log' }\nexport const BarcodeModal: React.FC<props> = ({ profile, type }) => {\n  const { enablePlanning } = profile\n  const dispatch = getDispatch()\n\n  const [barcode, setBarcode] = useState(null as Barcode | null)\n  const [amount, setAmount] = useState('')\n  const [meal, setMeal] = useState(defaultMeal)\n  const [createCustomFood, setCreateCustomFood] = useState(false)\n\n  const [unit, setUnit] = useState('GRAM' as Unit)\n  const [ran, setRan] = useState(false)\n\n  const fetchData = debounce(100, (code: string) => {\n    setRan(true)\n    axios\n      .get(`https://world.openfoodfacts.org/api/v0/product/${code}.json`)\n      .then((r) => {\n        if (r.data.status_verbose !== 'product found') {\n          dispatch('closeBarcodeModal')\n          toast.error('Matching food not found!')\n          return\n        }\n        const product = r.data.product\n        const { nutriments, product_name } = product\n        const {\n          proteins_100g,\n          proteins_serving,\n          serving_quantity,\n          serving_size,\n        } = nutriments\n\n        setBarcode({\n          calories_per_gram: nutriments['energy-kcal_100g'] / 100,\n          calories_per_serving: nutriments['energy-kcal_serving'],\n          code: code,\n          name: product_name,\n          protein_per_gram: proteins_100g / 100,\n          protein_per_serving: proteins_serving,\n          serving_quantity,\n          serving_size,\n        })\n      })\n  })\n\n  useEffect(() => {\n    // On localhost on development on a desktop, we want to \"mock\" the barcode scanning operation\n    // That way, you do not need to proxy to your phone every time you want test the feature\n    if (!isProduction() && !isMobile()) {\n      fetchData('3017620422003') // Nutella\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const parser = UAParser(window.navigator.userAgent)\n  const browser = parser.browser\n  // Bug: Designed to handle \"Invalid argument not valid semver ('X.X,X' received)\"\n  const version = String(browser.version).replace(',', '.').replace(',', '.')\n\n  // https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy\n\n  const oldSafari =\n    isMobileSafari() &&\n    // 'wasm-unsafe-eval' is only supported on Safari 16 and above\n    compareVersions('16.0.0', version) == 1\n\n  // 'wasm-unsafe-eval' is only supported on Chrome 103 and above\n  const oldChrome =\n    browser.name == 'Chrome' && compareVersions('103', version) == 1\n\n  // 'wasm-unsafe-eval' is only supported on Firefox 102 and above\n  const oldFirefox =\n    browser.name == 'Firefox' && compareVersions('102', version) == 1\n\n  if (oldSafari || oldChrome || oldFirefox) {\n    return (\n      <Explanation\n        color=\"blue\"\n        css={css`\n          margin: 0px auto;\n          margin-top: 20px;\n          width: 90%;\n        `}\n      >\n        <div>\n          For security reasons, this feature is not supported on your version of\n          your browser. Please update to the latest version.\n        </div>\n      </Explanation>\n    )\n  }\n\n  const selectedItem = new Food()\n  if (barcode) {\n    selectedItem.name = barcode.name\n    if (\n      isNumeric(barcode?.calories_per_gram) &&\n      isNumeric(barcode?.protein_per_gram)\n    ) {\n      selectedItem.caloriesPerGram = barcode.calories_per_gram\n      selectedItem.proteinPerGram = barcode.protein_per_gram\n      if (\n        isNumeric(barcode?.calories_per_serving) &&\n        isNumeric(barcode?.protein_per_serving)\n      ) {\n        selectedItem.countToGram = round(\n          barcode.calories_per_serving / barcode.calories_per_gram,\n          0\n        )\n        selectedItem.caloriesPerCount = round(\n          barcode.calories_per_gram * selectedItem.countToGram,\n          0\n        )\n        selectedItem.proteinPerCount = round(\n          barcode.protein_per_gram * selectedItem.countToGram,\n          0\n        )\n      }\n    }\n  }\n\n  return (\n    <>\n      {!barcode ? (\n        <Scan\n          scanRate={250}\n          onScan={(code: string) => !ran && fetchData(code)}\n        />\n      ) : (\n        <div>\n          <div className={`w100 fr m20`}>\n            <Image\n              width={50}\n              height={50}\n              src={BarcodeWithoutScanner}\n              alt=\"Barcode\"\n            />\n            <span\n              css={css`\n                margin-left: 15px;\n                font-size: 1rem;\n                font-weight: 400;\n              `}\n            >\n              {capitalize(barcode.name || 'Unknown')}\n            </span>\n          </div>\n          <InputFields\n            selectedItem={selectedItem}\n            unit={unit}\n            setUnit={setUnit}\n            amount={amount}\n            setAmount={setAmount}\n            enablePlanning={enablePlanning}\n            meal={meal}\n            setMeal={setMeal}\n          />\n          {/* Custom foods require a count. Hence, if the per serving is missing, you cannot add a custom food */}\n          {/* We only want to create a custom food from a barcode. Doing so from a recipe adds to much complexity */}\n          {/* As the recipe form must re-render with the custom food */}\n          {isNumeric(barcode?.calories_per_serving) &&\n            isNumeric(barcode?.protein_per_serving) &&\n            type === 'log' && (\n              <div className=\"fr\">\n                <label htmlFor=\"customFood\">\n                  Create a custom food from this scan?\n                </label>\n                <input\n                  checked={createCustomFood}\n                  onChange={(e) => {\n                    setCreateCustomFood(e.target.checked)\n                  }}\n                  id=\"customFood\"\n                  type=\"checkbox\"\n                />\n              </div>\n            )}\n\n          <ButtonPanel\n            showSubmit={Boolean(amount && unit)}\n            submit={() => {\n              submitEditor(\n                type,\n                null,\n                Number(amount),\n                unit,\n                barcode,\n                enablePlanning,\n                meal,\n                dispatch,\n                type === 'ingredient' ? selectedItem : undefined,\n                createCustomFood ? selectedItem : undefined\n              )\n            }}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n","import { Sex } from '../../../../store/navbar/types'\n\n// Reference: https://fitties.com/fat-caliper-plus/body-fat-calculation-methods/us-navy/\nexport const calculateBFUsingNavyMethod = (\n  sex: Sex,\n  height: number,\n  waist: number,\n  neck: number,\n  hip: number\n) => {\n  if (sex === 'male') {\n    return (\n      86.01 * Math.log10(waist - neck) - 70.041 * Math.log10(height) + 36.76\n    )\n  } else if (sex === 'female') {\n    return (\n      163.205 * Math.log10(waist + hip - neck) -\n      97.684 * Math.log10(height) -\n      78.387\n    )\n  }\n  throw Error(\n    `Error: calculateBFUsingNavyMethod: ${JSON.stringify({\n      height,\n      hip,\n      neck,\n      sex,\n      waist,\n    })}`\n  )\n}\n","import React from 'react'\nimport { round } from '../../../helpers/round'\nimport { Sex } from '../../../store/navbar/types'\nimport { Explanation } from '../../explanation/Explanation'\nimport { calculateBFUsingNavyMethod } from './helpers/calculateBFUsingNavyMethod'\n\n// Currently not in use as we estimate BF% from BMI\nexport const BodyFatPercentageForm = () => {\n  const [feet, updateFeet] = React.useState('')\n  const [inches, updateInches] = React.useState('')\n  const [sex, updateSex] = React.useState('male' as Sex)\n\n  const [waist, setWaist] = React.useState('')\n  const [neck, setNeck] = React.useState('')\n  const [hip, setHip] = React.useState('')\n\n  const [bodyFatPercentage, setBodyFatPercentage] = React.useState(0)\n\n  return (\n    <div className=\"target-form\">\n      <div>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault()\n            const height = Number(feet) * 12 + Number(inches)\n            const BF = calculateBFUsingNavyMethod(\n              sex,\n              height,\n              Number(waist),\n              Number(neck),\n              Number(hip)\n            )\n            setBodyFatPercentage(BF)\n          }}\n        >\n          {bodyFatPercentage > 0 && (\n            <Explanation color=\"green\">\n              <div>\n                Your body fat percentage is{' '}\n                <span>{round(bodyFatPercentage, 1)}%</span>\n              </div>\n            </Explanation>\n          )}\n          <div className=\"fc\">\n            <label>\n              Sex\n              <span className=\"tag info\">Assigned at birth</span>\n            </label>\n            <div className=\"fr\">\n              <label className=\"fr\">\n                <input\n                  type=\"radio\"\n                  value=\"male\"\n                  onChange={() => updateSex('male')}\n                  checked={sex === 'male'}\n                />\n                <span>Male</span>\n              </label>\n              <label className=\"fr\">\n                <input\n                  type=\"radio\"\n                  value=\"female\"\n                  onChange={() => updateSex('female')}\n                  checked={sex === 'female'}\n                />\n                <span>Female</span>\n              </label>\n            </div>\n          </div>\n\n          <div className=\"section target-form-height\">\n            <div>\n              <label htmlFor=\"feet\">Feet</label>\n              <input\n                required\n                id=\"feet\"\n                onChange={(event) => {\n                  updateFeet(event.target.value)\n                }}\n                value={feet}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"inches\">Inches</label>\n              <input\n                required\n                id=\"inches\"\n                onChange={(event) => {\n                  updateInches(event.target.value)\n                }}\n                value={inches}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n              />\n            </div>\n          </div>\n\n          <div className=\"section target-form-measurements\">\n            <div className=\"form-alert expand information\">\n              How to measure:\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://www.youtube.com/watch?v=CdtIb5VojUQ\"\n              >\n                {' '}\n                Man\n              </a>\n              |\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://www.youtube.com/watch?v=bATNkP4w-jk\"\n              >\n                {' '}\n                Woman\n              </a>\n            </div>\n            <div>\n              <label htmlFor=\"waist\">\n                Waist\n                <span className=\"tag info\">Inches</span>\n              </label>\n              <input\n                id=\"waist\"\n                onChange={(event) => {\n                  setWaist(event.target.value)\n                }}\n                value={waist}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"neck\">\n                Neck\n                <span className=\"tag info\">Inches</span>\n              </label>\n              <input\n                id=\"neck\"\n                onChange={(event) => {\n                  setNeck(event.target.value)\n                }}\n                value={neck}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n              />\n            </div>\n            {sex === 'female' && (\n              <div>\n                <label htmlFor=\"hip\">Hip (inches)</label>\n                <input\n                  id=\"hip\"\n                  onChange={(event) => {\n                    setHip(event.target.value)\n                  }}\n                  value={hip}\n                  type=\"number\"\n                  autoComplete={'off'}\n                  autoCorrect={'off'}\n                  autoCapitalize={'off'}\n                  step=\"any\"\n                />\n              </div>\n            )}\n          </div>\n\n          <button type=\"submit\" className=\"purple target-form-submit-button\">\n            Calculate body fat %\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import { FoodSubmission } from '../../components/forms/CustomFoodForm/CustomFoodForm'\nimport { UPDATE_FOOD } from '../../graphql/food'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport type UpdateFood = {\n  pk_columns: {\n    id: string\n  }\n  set: FoodSubmission\n}\n\nexport const updateFoodOnCloud = (\n  variables: UpdateFood,\n  onSuccess: () => void\n) =>\n  getHasuraClient()\n    .then((client) => {\n      client.request(stringifyQuery(UPDATE_FOOD), variables).then(() => {\n        onSuccess()\n      })\n    })\n    .catch((error) => handleError(error))\n","export const convertToNumber = (amount: string | number): number | null => {\n  if (amount === '') {\n    return null\n  } else {\n    const value = Number(amount)\n    if (isNaN(value) || value === Infinity) {\n      return null\n    } else if (value === 0) {\n      return 0\n    } else {\n      return value\n    }\n  }\n}\n","import { convertToNumber } from './convertToNumber'\n\n/**\n * To avoid any GraphQL errors, convert any fraction inputs to numbers and any \"\" to null\n */\nexport const prep = (input: string | number): number | null => {\n  return convertToNumber(input)\n}\n","import { Unit } from '../../../constants/units'\nimport { handleError } from '../../../helpers/handleError'\n\n/** Convert TBSP to other volume units, like CUP and TSP */\nexport const mapTbspToOtherVolumeUnit = (unit: Unit, tbsp: number) => {\n  if (unit === 'TBSP') {\n    return tbsp\n  } else if (unit === 'TSP') {\n    return tbsp * 3\n  } else if (unit === 'CUP') {\n    return tbsp / 16\n  } else if (unit === 'mL') {\n    return tbsp / 0.067628\n  } else {\n    return handleError('The unit entered is not a volume unit!')\n  }\n}\n","import { VolumeUnit } from '../../../../constants/units'\nimport { prep } from '../../../../helpers/prepareFractionalInputForSubmission'\nimport { mapTbspToOtherVolumeUnit } from '../../../macros/helpers/mapTbspToOtherVolumeUnit'\n\nexport const getAdjustedVolumeAmount = (\n  countToGram: string | number,\n  volumeUnit: VolumeUnit\n): string | number => {\n  const num = prep(countToGram)\n  if (!num) {\n    return countToGram\n  } else if (volumeUnit === 'TBSP') {\n    return num\n  } else {\n    return mapTbspToOtherVolumeUnit(volumeUnit, num)\n  }\n}\n","import { Unit } from '../../../constants/units'\nimport { handleError } from '../../../helpers/handleError'\n\nexport const convertToImperialFromGrams = (\n  unit: Unit,\n  amountInGrams: number\n): number => {\n  if (unit === 'LBS') {\n    return amountInGrams / 453\n  } else if (unit === 'OZ') {\n    return (amountInGrams / 453) * 16\n  } else {\n    return handleError('The unit entered is not OZ or LBS!')\n  }\n}\n","import { WeightUnit } from '../../../../constants/units'\nimport { prep } from '../../../../helpers/prepareFractionalInputForSubmission'\nimport { convertToImperialFromGrams } from '../../../macros/helpers/convertToImperialFromGrams'\n\nexport const getAdjustedWeightAmount = (\n  countToGram: string | number,\n  weightUnit: WeightUnit\n): string | number => {\n  const num = prep(countToGram)\n  if (!num) {\n    return countToGram\n  } else if (weightUnit === 'GRAM') {\n    return num\n  } else {\n    const imperial = convertToImperialFromGrams(weightUnit, num)\n    return imperial\n  }\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { Unit } from '../../../constants/units'\n\ntype props = {\n  title?: string\n  amount: string | number\n  unit: Unit\n  units: Unit[]\n  onChange: (unit: Unit, amount: string | number) => void\n}\n\nconst getAmount = (amount: string | number) =>\n  typeof amount === 'number' ? amount : amount\n\nexport const UnitSelector: React.FC<props> = ({\n  amount,\n  onChange,\n  title,\n  unit,\n  units,\n}) => {\n  const [newAmount, updateNewAmount] = React.useState(getAmount(amount))\n  const [selectedUnit, updatedSelectedUnit] = React.useState(unit)\n  const isContainer = units[0] === 'CONTAINER'\n\n  // Make sure the form is filled with \"late\" data\n  React.useEffect(() => {\n    updatedSelectedUnit(unit)\n    updateNewAmount(getAmount(amount))\n  }, [amount, unit])\n\n  return (\n    <div className=\"fr w100 mt20\">\n      <input\n        id={`unit-selector-input`}\n        value={newAmount}\n        inputMode=\"decimal\"\n        onChange={(e) => {\n          const amount = e.target.value\n          updateNewAmount(amount)\n          onChange(unit, amount)\n        }}\n        className=\"mr10\"\n        css={css`\n          width: 90px;\n        `}\n        type=\"text\"\n        placeholder={''}\n      />{' '}\n      {isContainer ? (\n        <span\n          css={css`\n            padding: 10px;\n            width: 100px;\n          `}\n        >\n          servings\n        </span>\n      ) : (\n        <select\n          id={`unit-selector-select`}\n          value={selectedUnit}\n          onChange={(e) => {\n            const unit = e.target.value as Unit\n            updatedSelectedUnit(unit)\n            onChange(unit, newAmount)\n          }}\n          className=\"mr10\"\n          css={css`\n            width: 100px;\n          `}\n        >\n          {units.map((unit) => (\n            <option key={unit} value={unit}>\n              {`${unit.toLowerCase()}`}\n            </option>\n          ))}\n        </select>\n      )}\n      <span\n        className=\"ml5\"\n        css={css`\n          white-space: nowrap;\n        `}\n      >\n        {title || (isContainer ? 'per container ' : 'per serving')}\n      </span>\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport toast from 'react-hot-toast'\nimport { useStoreon } from 'storeon/react'\nimport { Category } from '../../../constants/categories'\nimport { Group } from '../../../constants/groups'\nimport {\n  VolumeUnit,\n  volumeUnits,\n  WeightUnit,\n  weightUnits,\n} from '../../../constants/units'\nimport { addFoodToCloud } from '../../../helpers/Food/addFoodToCloud'\nimport { updateFoodOnCloud } from '../../../helpers/Food/updateFoodOnCloud'\nimport { isNumeric } from '../../../helpers/isNumeric'\nimport { prep } from '../../../helpers/prepareFractionalInputForSubmission'\nimport { Food } from '../../../models/food'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { colors } from '../../../theme'\nimport { Divider } from '../../divider/Divider'\nimport { Explanation } from '../../explanation/Explanation'\nimport { convertFromWeightToGrams } from '../../macros/helpers/convertFromWeightToGrams'\nimport { mapOtherVolumeUnitToTbsp } from '../../macros/helpers/mapOtherVolumeUnitToTbsp'\nimport { getAdjustedVolumeAmount } from './helpers/getAdjustedVolumeAmount'\nimport { getAdjustedWeightAmount } from './helpers/getAdjustedWeightAmount'\nimport { UnitSelector } from './UnitSelector'\n\nexport type FoodSubmission = {\n  name: string\n  group: Group\n  category: Category\n  countName: string\n  containerName: string\n  servingPerContainer: number | null\n  caloriesPerCount: number | null\n  proteinPerCount: number | null\n  countToGram: number | null\n  countToTbsp: number | null\n  preferredVolumeUnit: VolumeUnit\n  preferredWeightUnit: WeightUnit\n}\n\ntype props = { food: Food | undefined }\nexport const CustomFoodForm: React.FC<props> = ({ food }) => {\n  const { dispatch }: { dispatch: Dispatch<AllEvents> } = useStoreon()\n\n  const [name, updateName] = React.useState(food?.name || '')\n  const [caloriesPerCount, updateCaloriesPerCount] = React.useState(\n    food?.caloriesPerCount || ''\n  )\n  const [proteinPerCount, updateProteinPerCount] = React.useState(\n    food?.proteinPerCount || ''\n  )\n  const [servingPerContainer, updateServingPerContainer] = React.useState(\n    food?.servingPerContainer || ''\n  )\n  const [countToGram, setCountToGram] = React.useState(\n    (food?.countToGram || '') as string | number\n  )\n  const [countToTbsp, setCountToTbsp] = React.useState(\n    (food?.countToTbsp || '') as string | number\n  )\n  const [volumeUnit, setVolumeUnit] = React.useState(\n    food?.preferredVolumeUnit || ('TBSP' as VolumeUnit)\n  )\n  const [weightUnit, setWeightUnit] = React.useState(\n    food?.preferredWeightUnit || ('GRAM' as WeightUnit)\n  )\n  const [convertVolume, updateConvertVolume] = React.useState(true)\n  const [convertWeight, updateConvertWeight] = React.useState(true)\n\n  const convertedCountToGram = convertFromWeightToGrams(\n    weightUnit,\n    prep(countToGram) || 0\n  )\n\n  const convertedCountToTbsp = mapOtherVolumeUnitToTbsp(\n    volumeUnit,\n    prep(countToTbsp) || 0\n  )\n\n  // Make sure the form is filled with \"late\" data\n  React.useEffect(() => {\n    updateName(food?.name || '')\n    updateCaloriesPerCount(food?.caloriesPerCount || '')\n    updateProteinPerCount(food?.proteinPerCount || '')\n    updateServingPerContainer(food?.servingPerContainer || '')\n    setCountToGram((food?.countToGram || '') as string | number)\n    setCountToTbsp((food?.countToTbsp || '') as string | number)\n    setVolumeUnit(food?.preferredVolumeUnit || ('TBSP' as VolumeUnit))\n    setWeightUnit(food?.preferredWeightUnit || ('GRAM' as WeightUnit))\n\n    // Only convert the volume and weight on the first time the page loads.\n    // After that, treat them as \"dumb numbers\" until submission\n    if (convertVolume) {\n      setCountToTbsp(getAdjustedVolumeAmount(countToTbsp, volumeUnit))\n      updateConvertVolume(false)\n    }\n    if (convertWeight) {\n      setCountToGram(getAdjustedWeightAmount(countToGram, weightUnit))\n      updateConvertWeight(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [food])\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault()\n        const data: FoodSubmission = {\n          caloriesPerCount: prep(caloriesPerCount),\n          category: 'Food',\n          containerName: food?.containerName || '',\n          countName: food?.countName || '',\n          countToGram: convertedCountToGram,\n          countToTbsp: convertedCountToTbsp,\n          group: 'Custom',\n          name,\n          preferredVolumeUnit: volumeUnit,\n          preferredWeightUnit: weightUnit,\n          proteinPerCount: prep(proteinPerCount),\n          servingPerContainer: prep(servingPerContainer),\n        }\n\n        const close = () => {\n          dispatch('closeFoodFormModal')\n          dispatch('closeMenu')\n        }\n        if (food?.id) {\n          const variables = {\n            pk_columns: { id: food.id },\n            set: { ...data },\n          }\n\n          if (!caloriesPerCount) {\n            return toast.error('Calories per serving cannot be zero or empty!')\n          }\n          if (proteinPerCount === null || proteinPerCount === undefined) {\n            return toast.error('Protein per serving cannot be empty!')\n          }\n          if (!isNumeric(caloriesPerCount)) {\n            return toast.error('Calorie per serving must be a number!')\n          }\n          if (!isNumeric(proteinPerCount)) {\n            return toast.error('Protein per serving must be a number!')\n          }\n\n          const countToGramZeroedOut = food.countToGram && !data.countToGram\n          const countToTbspZeroedOut = food.countToTbsp && !data.countToTbsp\n          const servingPerContainerZeroedOut =\n            food.servingPerContainer && !data.servingPerContainer\n\n          if (\n            countToGramZeroedOut ||\n            countToTbspZeroedOut ||\n            servingPerContainerZeroedOut\n          ) {\n            alert(\n              'When you remove a unit from a custom food, it can break the recipes and the logs if they have stored the custom food with that unit. For example, you have made a log with 500mL of pudding and you remove the tbsp per recipe. Make sure you fix them after this update!'\n            )\n          }\n\n          updateFoodOnCloud(variables, () => close())\n        } else {\n          addFoodToCloud(data, () => dispatch('closeFoodFormModal'))\n        }\n      }}\n    >\n      <div className=\"group\">\n        <div className=\"w100\">\n          <label htmlFor=\"name\">Food</label>\n          <input\n            id=\"name\"\n            autoCapitalize={'on'}\n            autoComplete={'off'}\n            autoCorrect={'off'}\n            onChange={(event) => {\n              updateName(event.target.value)\n            }}\n            placeholder=\"Chocolate pudding\"\n            required\n            type=\"text\"\n            value={name || ''}\n          />\n        </div>\n      </div>\n\n      <div className=\"group\">\n        <div className=\"w50\">\n          <label htmlFor=\"caloriesPerCount\">\n            Calories\n            <span className=\"tag pink\">per serving</span>\n          </label>\n          <input\n            id=\"caloriesPerCount\"\n            onChange={(event) => {\n              updateCaloriesPerCount(event.target.value)\n            }}\n            required\n            step=\"any\"\n            type=\"text\"\n            placeholder={'120'}\n            inputMode=\"decimal\"\n            autoComplete={'off'}\n            autoCorrect={'off'}\n            autoCapitalize={'off'}\n            value={caloriesPerCount}\n          />\n        </div>\n        <div className=\"w50\">\n          <label htmlFor=\"proteinPerCount\">\n            Protein\n            <span className=\"tag pink\">per serving</span>\n          </label>\n          <input\n            id=\"proteinPerCount\"\n            onChange={(event) => {\n              updateProteinPerCount(event.target.value)\n            }}\n            required\n            step=\"any\"\n            type=\"text\"\n            inputMode=\"decimal\"\n            placeholder=\"20\"\n            autoComplete={'off'}\n            autoCorrect={'off'}\n            autoCapitalize={'off'}\n            value={proteinPerCount}\n          />\n        </div>\n      </div>\n\n      <Divider\n        height={1}\n        className=\"mt20 mb0\"\n        styles={css`\n          background-color: ${colors.lightgrey};\n        `}\n      />\n\n      <Explanation color=\"blue\">\n        <div>\n          <strong>Note:</strong> These units are optional\n        </div>\n      </Explanation>\n\n      <div className=\"mb20\">\n        <div className=\"mt20\">\n          <UnitSelector\n            amount={countToTbsp}\n            unit={volumeUnit}\n            units={volumeUnits}\n            onChange={(unit, amount) => {\n              setCountToTbsp(amount)\n              setVolumeUnit(unit as VolumeUnit)\n            }}\n          />\n          <UnitSelector\n            amount={countToGram}\n            unit={weightUnit}\n            units={weightUnits}\n            onChange={(unit, amount) => {\n              setCountToGram(amount)\n              setWeightUnit(unit as WeightUnit)\n            }}\n          />\n          <UnitSelector\n            unit={'CONTAINER'}\n            amount={servingPerContainer}\n            units={['CONTAINER']}\n            onChange={(unit, amount) => updateServingPerContainer(amount)}\n          />\n        </div>\n      </div>\n\n      <button\n        id=\"submitCustomFoodForm\"\n        type=\"submit\"\n        className=\"purple bold mt30 mb10\"\n      >\n        {food ? 'Update Food' : 'Create Food'}\n      </button>\n    </form>\n  )\n}\n","import { QuickAddUnit } from '../../constants/units'\nimport { CREATE_LOGS } from '../../graphql/log'\nimport { Log } from '../../models/log'\nimport { store } from '../../store/store'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport type AddQuickLog = {\n  objects: {\n    amount: number\n    unit: QuickAddUnit\n  }[]\n}\n\ntype Response = { insert_logs: { returning: Log[] } }\n\nexport const addQuickLogToCloud = (\n  variables: AddQuickLog,\n  enablePlanning: boolean,\n  onSuccess: () => void\n) =>\n  getHasuraClient()\n    .then((client) => {\n      client\n        .request(stringifyQuery(CREATE_LOGS), variables)\n        .then((response: Response) => {\n          const logs = response.insert_logs.returning\n          store.dispatch('addLogs', logs)\n          onSuccess()\n        })\n    })\n    .catch((error) => {\n      handleError(error)\n    })\n","// Reference https://community.plu.edu/~chasega/met.html\nexport const otherMet = {\n  Baseball: 5,\n  Basketball: 6.5,\n  Boxing: 7,\n  Cricket: 5,\n  Dance: 6,\n  'Field hockey': 8,\n  Football: 9,\n  Golf: 4.5,\n  Hiking: 6,\n  'Horseback riding': 4.5,\n  'Ice hockey': 8,\n  'Ice skating': 7,\n  'Jumping rope': 10,\n  Lacrosse: 8,\n  'Martial arts': 10,\n  Racquetball: 7,\n  'Roller skating': 7,\n  Rugby: 10,\n  Skateboarding: 5,\n  Skiing: 7,\n  Soccer: 7,\n  Softball: 5,\n  Squash: 7,\n  'Tennis (doubles)': 6,\n  'Tennis (singles)': 8,\n  Volleyball: 4,\n  'Water polo': 10,\n  Wrestling: 5,\n} as const\n\nexport type OtherMET = typeof otherMet\nexport type OtherActivity = keyof OtherMET\n\nexport const swimmingMET = {\n  Backstroke: 8,\n  Breaststroke: 10,\n  Butterfly: 11,\n  Freestyle: 9,\n} as const\n\nexport type SwimmingMET = typeof swimmingMET\nexport type SwimmingActivity = keyof SwimmingMET\n\nexport const liftingMET = {\n  'Free weights': 5,\n  Machines: 3.5,\n} as const\n\nexport type LiftingMET = typeof liftingMET\nexport type LiftingActivity = keyof LiftingMET\n","import { round } from '../../../../helpers/round'\n\nexport const calculateCaloriesFromMETs = (\n  weight: number,\n  minutes: number,\n  MET: number\n) => {\n  return round((MET * 3.5 * (weight / 2.2) * minutes) / 200, 0)\n}\n","import { round } from '../../../../helpers/round'\n\nexport const getCyclingMET = (mph: number) => {\n  // Formula: y= 0.8425x - 2.243, R = 0.976\n  return round(0.8425 * mph - 2.243, 2)\n}\n","import { round } from '../../../../helpers/round'\nimport rowingMET from '../data/rowingMET.json'\n\nexport const getRowingMET = (watts: number) => {\n  // Formula: y = 0.054x + 1, r = 0.989\n  const MET: Record<string, number> = rowingMET\n  const exactMET = MET[String(watts)]\n  // If we have an exact MET match for watts, use that.\n  // Otherwise, return the predicated MET\n  return exactMET || round(0.054 * watts + 1, 2)\n}\n","import { round } from '../../../../helpers/round'\nimport runningMETs from '../data/runningMETs.json'\n\nexport const getRunningMET = (mph: number) => {\n  // Formula: y = 1.7306x - 0.7185, r = 0.99\n  const MET: Record<string, number> = runningMETs\n  const exactMET = MET[String(mph)]\n  // If we have an exact MET match for MPH, use that.\n  // Otherwise, return the predicated MET\n  return exactMET || round(1.7306 * mph - 0.7185, 2)\n}\n","import { round } from '../../../../helpers/round'\n\nexport const getWalkingMET = (mph: number, incline: number): number => {\n  const speed = 26.8 * mph\n  const horizontalComponent = speed * 0.1\n  const verticalComponent = speed * 1.8 * (incline / 100)\n  const vo2 = horizontalComponent + verticalComponent + 3.5\n  const MET = vo2 / 3.5\n  return round(MET, 2)\n}\n","import {\n  LiftingActivity,\n  liftingMET,\n  OtherActivity,\n  otherMet,\n  SwimmingActivity,\n  swimmingMET,\n} from '../constants'\nimport { ExerciseGroup } from '../ExerciseForm'\nimport { getCyclingMET } from './getCyclingMET'\nimport { getRowingMET } from './getRowingMET'\nimport { getRunningMET } from './getRunningMET'\nimport { getWalkingMET } from './getWalkingMET'\n\nexport const getMETsFromInput = (\n  exerciseGroup: ExerciseGroup,\n  otherActivity: OtherActivity,\n  swimmingActivity: SwimmingActivity,\n  liftingActivity: LiftingActivity,\n  mph: number,\n  incline: number,\n  watts: number\n): number => {\n  if (exerciseGroup === 'Cycling') {\n    return getCyclingMET(mph)\n  } else if (exerciseGroup === 'Running') {\n    return getRunningMET(mph)\n  } else if (exerciseGroup === 'Walking') {\n    return getWalkingMET(mph, incline)\n  } else if (exerciseGroup === 'Rowing') {\n    return getRowingMET(watts)\n  } else if (exerciseGroup === 'Other') {\n    return otherMet[otherActivity]\n  } else if (exerciseGroup === 'Swimming') {\n    return swimmingMET[swimmingActivity]\n  } else if (exerciseGroup === 'Lifting') {\n    return liftingMET[liftingActivity]\n  } else if (exerciseGroup === 'Custom') {\n    return 0 // Dummy value\n  } else {\n    throw Error(\n      `Error: getMETsFromInput: ${JSON.stringify({\n        exerciseGroup,\n        incline,\n        liftingActivity,\n        mph,\n        otherActivity,\n        swimmingActivity,\n        watts,\n      })}`\n    )\n  }\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport { QuickAddUnit } from '../../../constants/units'\nimport { addQuickLogToCloud } from '../../../helpers/log/addQuickLogToCloud'\nimport { round } from '../../../helpers/round'\nimport { Profile } from '../../../models/profile'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { md } from '../../../theme'\nimport {\n  LiftingActivity,\n  liftingMET,\n  OtherActivity,\n  otherMet,\n  SwimmingActivity,\n  swimmingMET,\n} from './constants'\nimport { calculateCaloriesFromMETs } from './helpers/calculateCaloriesFromMETs'\nimport { getMETsFromInput } from './helpers/getMETsFromInput'\n\nexport const group = [\n  'Cycling',\n  'Lifting',\n  'Rowing',\n  'Running',\n  'Swimming',\n  'Walking',\n  'Other',\n  'Custom',\n] as const\nexport type ExerciseGroup = (typeof group)[number]\n\ntype props = { profile: Profile }\nexport const ExerciseForm: React.FC<props> = ({ profile }) => {\n  const { metricSystem } = profile\n  const [weight, updateWeight] = React.useState('')\n  const [minutes, setMinutes] = React.useState('')\n  const [watt, setWatts] = React.useState('')\n  const [mph, setMph] = React.useState('')\n  const [incline, setIncline] = React.useState('')\n  const [calories, setCalories] = React.useState('')\n  const [exerciseGroup, setExerciseGroup] = React.useState(\n    'Custom' as ExerciseGroup\n  )\n  const [otherActivity, setOtherActivity] = React.useState(\n    'Baseball' as OtherActivity\n  )\n  const [swimmingActivity, setSwimmingActivity] = React.useState(\n    'Backstroke' as SwimmingActivity\n  )\n  const [liftingActivity, setLiftingActivity] = React.useState(\n    'Machines' as LiftingActivity\n  )\n\n  const {\n    dispatch,\n  }: {\n    dispatch: Dispatch<AllEvents>\n  } = useStoreon()\n\n  const groupButtonStyling = css`\n    min-width: 20%;\n\n    @media (max-width: ${md}px) {\n      flex: 1;\n      min-width: 45%;\n    }\n  `\n\n  const otherButtons = css`\n    min-width: 25%;\n  `\n\n  const groupButton = (g: ExerciseGroup) => (\n    <button\n      onClick={() => setExerciseGroup(g)}\n      type=\"button\"\n      css={groupButtonStyling}\n      className={`expand background ${g === exerciseGroup ? 'active' : ''}`}\n      key={g}\n    >\n      {g}\n    </button>\n  )\n\n  const label = css`\n    margin-top: 0;\n  `\n\n  return (\n    <div className=\"w100\">\n      <form\n        css={css`\n          > div > button {\n            font-size: 0.9rem;\n            margin: 5px;\n          }\n        `}\n        onSubmit={(event) => {\n          event.preventDefault()\n          const MET = getMETsFromInput(\n            exerciseGroup,\n            otherActivity,\n            swimmingActivity,\n            liftingActivity,\n            // When metric is true, mph is actually is kph.  When metric is false, mph is mph\n            metricSystem ? Number(mph) * 0.6213711922 : Number(mph),\n            Number(incline),\n            Number(watt)\n          )\n          // If MET === -1, then no valid MET was found\n          // Thus, we definitely don't want to submit a request using a bad MET!\n          if (MET !== -1) {\n            const caloriesBurned =\n              // Custom is when the user just adds the calories directly\n              // Hence, you don't need to calculate calories from METS\n              exerciseGroup === 'Custom'\n                ? Number(calories)\n                : calculateCaloriesFromMETs(\n                    // When metric is true, weight is kg.  When metric is false, it is lbs\n                    metricSystem\n                      ? Number(weight) * 2.2046226218\n                      : Number(weight),\n                    Number(minutes),\n                    MET\n                  )\n\n            const variables = {\n              objects: [\n                {\n                  amount: round(caloriesBurned, 0),\n                  unit: 'EXERCISE' as QuickAddUnit,\n                },\n              ],\n            }\n            addQuickLogToCloud(variables, profile.enablePlanning, () => {\n              dispatch('closeExerciseModal')\n            })\n          }\n        }}\n      >\n        {exerciseGroup !== 'Custom' && (\n          <div className=\"group\">\n            <div className=\"w50\">\n              <label htmlFor=\"weight\">\n                Weight\n                <span className=\"pink tag\">{metricSystem ? 'kg' : 'lbs'}</span>\n              </label>\n              <input\n                placeholder=\"200\"\n                id=\"weight\"\n                onChange={(event) => {\n                  updateWeight(event.target.value)\n                }}\n                value={weight}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                required\n              />\n            </div>\n            <div className=\"w50\">\n              <label htmlFor=\"minutes\">\n                Duration\n                <span className=\"pink tag\">Minutes</span>\n              </label>\n              <input\n                placeholder=\"60\"\n                id=\"minutes\"\n                onChange={(event) => {\n                  setMinutes(event.target.value)\n                }}\n                value={minutes}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                required\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Group buttons */}\n        <div className=\"fr wrap mt30 mb30 w100\">\n          {group.map((g) => groupButton(g))}\n        </div>\n\n        {/* Other buttons */}\n\n        {exerciseGroup === 'Other' && (\n          <div className=\"fr wrap\">\n            {Object.keys(otherMet).map((key) => (\n              <button\n                type=\"button\"\n                onClick={() => setOtherActivity(key as OtherActivity)}\n                css={[groupButtonStyling, otherButtons]}\n                className={`blue expand ${\n                  key === otherActivity ? 'active' : ''\n                }`}\n                key={key}\n              >\n                {key}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {exerciseGroup === 'Swimming' && (\n          <div className=\"fr wrap\">\n            {Object.keys(swimmingMET).map((key) => (\n              <button\n                type=\"button\"\n                onClick={() => setSwimmingActivity(key as SwimmingActivity)}\n                className={`blue expand ${\n                  key === swimmingActivity ? 'active' : ''\n                }`}\n                key={key}\n              >\n                {key}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {exerciseGroup === 'Lifting' && (\n          <div className=\"fr wrap\">\n            {Object.keys(liftingMET).map((key) => (\n              <button\n                type=\"button\"\n                onClick={() => setLiftingActivity(key as LiftingActivity)}\n                className={`blue expand ${\n                  key === liftingActivity ? 'active' : ''\n                }`}\n                key={key}\n              >\n                {key}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {['Running', 'Cycling'].includes(exerciseGroup) && (\n          <div className=\"group\">\n            <div className=\"w100\">\n              <label css={label} htmlFor=\"miles\">\n                Pace\n                <span className=\"pink tag\">{metricSystem ? 'kph' : 'mph'}</span>\n              </label>\n              <input\n                placeholder=\"3\"\n                id=\"mph\"\n                onChange={(event) => {\n                  setMph(event.target.value)\n                }}\n                value={mph}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                required\n              />\n            </div>\n          </div>\n        )}\n\n        {exerciseGroup === 'Rowing' && (\n          <div className=\"group\">\n            <div className=\"w100\">\n              <label css={label} htmlFor=\"watt\">\n                Power\n                <span className=\"pink tag\">Watts</span>\n              </label>\n              <input\n                placeholder=\"100\"\n                id=\"watt\"\n                onChange={(event) => {\n                  setWatts(event.target.value)\n                }}\n                value={watt}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                required\n              />\n            </div>\n          </div>\n        )}\n\n        {exerciseGroup === 'Walking' && (\n          <div className=\"group\">\n            <div className=\"w50\">\n              <label css={label} htmlFor=\"pace\">\n                Pace\n                <span className=\"pink tag\">{metricSystem ? 'kph' : 'mph'}</span>\n              </label>\n              <input\n                placeholder=\"3\"\n                id=\"pace\"\n                onChange={(event) => {\n                  setMph(event.target.value)\n                }}\n                value={mph}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                required\n              />\n            </div>\n            <div className=\"w50\">\n              <label css={label} htmlFor=\"incline\">\n                Incline\n                <span className=\"pink tag\">%</span>\n              </label>\n              <input\n                placeholder=\"3\"\n                id=\"incline\"\n                onChange={(event) => {\n                  setIncline(event.target.value)\n                }}\n                value={incline}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                required\n              />\n            </div>\n          </div>\n        )}\n\n        {exerciseGroup === 'Custom' && (\n          <div className=\"group\">\n            <div className=\"w100\">\n              <label css={label} htmlFor=\"calories\">\n                Calories burned\n              </label>\n              <input\n                placeholder=\"100\"\n                id=\"calories\"\n                onChange={(event) => {\n                  setCalories(event.target.value)\n                }}\n                value={calories}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                required\n              />\n            </div>\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"purple bold mt30 mb10\">\n          Add calories burned\n        </button>\n      </form>\n    </div>\n  )\n}\n","export const splitIntoPages = <X>(\n  array: Array<X>,\n  pageSize: number\n): Array<X>[] => {\n  /** Split an array of many items into a nested array with equal size groups */\n  if (array.length <= pageSize) {\n    return [array]\n  } else {\n    const slice = array.slice(0, pageSize)\n    const remainder = array.slice(pageSize)\n    return [slice, ...splitIntoPages(remainder, pageSize)]\n  }\n}\n","export default {\"src\":\"/_next/static/media/leftArrow.0dc724ce.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/rightArrow.47a41b0b.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\nimport React from 'react'\nimport leftArrow from '../../assets/common/leftArrow.svg'\nimport rightArrow from '../../assets/common/rightArrow.svg'\nimport { colors } from '../../theme'\nimport { Image } from '../image/Image'\n\ntype props = {\n  // Items is an array of pages, which is page, in turn, containing a number of items\n  items: unknown[][]\n  handleClick: (number: number) => void\n  activePage: number\n}\n\nexport const Paginator: React.FC<props> = ({\n  activePage,\n  handleClick,\n  items,\n}) => {\n  const paginator = css`\n    margin-bottom: 5px;\n    margin-top: 20px;\n  `\n\n  const noHover = css`\n    &:hover,\n    &:focus {\n      background-color: transparent;\n      outline: 1px solid ${colors.black};\n    }\n  `\n\n  return (\n    <div css={paginator} className={`fec w100 h100 expand ai-fe`}>\n      <div className=\"frc w100\">\n        <button\n          onClick={(event) => {\n            event.preventDefault()\n            handleClick(0)\n          }}\n          type=\"button\"\n          className=\"background\"\n        >\n          Start\n        </button>\n        <div className=\"fr\">\n          {/* The move left arrow */}\n          <button\n            css={noHover}\n            onClick={(event) => {\n              event.preventDefault()\n              if (activePage > 0) {\n                handleClick(activePage - 1)\n              }\n            }}\n            type=\"button\"\n          >\n            <Image\n              width={15}\n              height={15}\n              alt=\"arrow pointing left\"\n              src={leftArrow}\n            />\n          </button>\n\n          {/* The list itself */}\n          <div>\n            {activePage + 1} / {items.length}\n          </div>\n\n          {/* The move right arrow */}\n          <button\n            css={noHover}\n            onClick={(event) => {\n              event.preventDefault()\n              if (activePage + 1 < items.length) {\n                handleClick(activePage + 1)\n              }\n            }}\n            type=\"button\"\n          >\n            <Image\n              width={15}\n              height={15}\n              alt=\"arrow pointing right\"\n              src={rightArrow}\n            />\n          </button>\n        </div>\n\n        <button\n          onClick={(event) => {\n            event.preventDefault()\n            handleClick(items.length - 1)\n          }}\n          className=\"background\"\n          type=\"button\"\n        >\n          End\n        </button>\n      </div>\n    </div>\n  )\n}\n","import { DELETE_FOOD } from '../../graphql/food'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport const deleteFoodOnCloud = (id: string, onSuccess: () => void) =>\n  getHasuraClient()\n    .then((client) => {\n      client.request(stringifyQuery(DELETE_FOOD), { id }).then(() => {\n        onSuccess()\n      })\n    })\n    .catch((error) => handleError(error))\n","import React from 'react'\nimport { deleteFoodOnCloud } from '../../../helpers/Food/deleteFoodOnCloud'\nimport { Food } from '../../../models/food'\nimport { Item } from '../../item/Item'\n\nexport const FoodItem: React.FC<{ food: Food }> = (props) => {\n  const { food } = props\n  const { createdAt, foodToProfile, id, name, type } = food\n\n  const onDelete = () => {\n    deleteFoodOnCloud(id, () => {})\n  }\n\n  return (\n    <Item\n      item={{\n        alias: null,\n        amount: null,\n        barcode: null,\n        basicFood: null,\n        childRecipe: null,\n        consumed: null,\n        createdAt,\n        food: null,\n        id,\n        meal: null,\n        name,\n        onDelete,\n        onUpdate: null,\n        profile: foodToProfile,\n        recipe: null,\n        src: null,\n        type,\n        unit: null,\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport toast from 'react-hot-toast'\nimport BarcodeWithoutScanner from '../../../assets/common/barcode-without-scanner.svg'\nimport { Ingredient } from '../../../models/ingredient'\nimport { Item } from '../../item/Item'\nimport { OnUpdateItem } from '../../item/types'\nimport { getImagePath, selectFoodImage } from '../helpers/selectFoodImage'\n\ntype props = {\n  ingredient: Ingredient\n  updateIngredient: (ingredient: Ingredient) => void\n  deleteIngredient: (id: string) => void\n}\nexport const IngredientItem: React.FC<props> = (props) => {\n  const { deleteIngredient, ingredient } = props\n  const { amount, barcode, createdAt, id, type, unit } = ingredient\n  const food = ingredient.ingredientToFood\n  const childRecipe = ingredient.ingredientToChildRecipe\n\n  const onUpdate: OnUpdateItem = (\n    id,\n    unit,\n    amount,\n    consumed,\n    meal,\n    dispatch\n  ) => {\n    if (!unit) {\n      toast.error('Please specify a unit')\n    } else if (!amount) {\n      toast.error('Please specify a valid amount')\n    } else {\n      const updatedIngredient = { ...ingredient, amount, consumed, meal, unit }\n      dispatch('saveIngredient', updatedIngredient)\n    }\n  }\n\n  const src = selectFoodImage(food || childRecipe, getImagePath)\n  const name = food?.name || childRecipe?.name || ''\n\n  const onDelete = (id: string | undefined) => {\n    if (id) {\n      deleteIngredient(id)\n    }\n  }\n\n  return (\n    <Item\n      item={{\n        alias: null,\n        amount,\n        barcode,\n        basicFood: ingredient.basicFood,\n        childRecipe,\n        consumed: null,\n        createdAt,\n        food,\n        id,\n        meal: null,\n        name,\n        onDelete,\n        onUpdate,\n        profile: ingredient.ingredientToProfile,\n        recipe: null,\n        src: barcode ? BarcodeWithoutScanner.src : src,\n        type,\n        unit,\n      }}\n    />\n  )\n}\n","import { DELETE_RECIPE } from '../../graphql/recipe'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport const deleteRecipeOnCloud = (id: string, onSuccess: () => void) =>\n  getHasuraClient()\n    .then((client) => {\n      client.request(stringifyQuery(DELETE_RECIPE), { id }).then(() => {\n        onSuccess()\n      })\n    })\n    .catch((error) => handleError(error))\n","import React from 'react'\nimport { deleteRecipeOnCloud } from '../../../helpers/recipes/deleteRecipeOnCloud'\nimport { Recipe } from '../../../models/recipe'\nimport { Item } from '../../item/Item'\n\nexport const RecipeItem: React.FC<{ recipe: Recipe }> = (props) => {\n  const { recipe } = props\n  const { createdAt, id, name, type } = recipe\n\n  const onDelete = () => {\n    deleteRecipeOnCloud(id, () => {})\n  }\n\n  return (\n    <Item\n      item={{\n        alias: null,\n        amount: null,\n        barcode: null,\n        basicFood: null,\n        childRecipe: null,\n        consumed: null,\n        createdAt,\n        food: null,\n        id,\n        meal: null,\n        name,\n        onDelete,\n        onUpdate: null,\n        profile: recipe.recipeToProfile,\n        recipe: null,\n        src: null,\n        type,\n        unit: null,\n      }}\n    />\n  )\n}\n","import { Food } from '../../../../models/food'\nimport { Ingredient } from '../../../../models/ingredient'\nimport { Recipe } from '../../../../models/recipe'\nimport { FoodItem } from '../../Food/FoodItem'\nimport { IngredientItem } from '../../Ingredient/IngredientItem'\nimport { RecipeItem } from '../../Recipe/RecipeItem'\nimport { Item } from '../List'\nimport { PaginatedListPurpose } from '../types'\n\nexport const getItem = (\n  item: Item,\n  updateItem: null | ((item: any) => void),\n  deleteItem: null | ((id: string) => void),\n  purpose: PaginatedListPurpose\n) => {\n  if (item.type === 'recipe') {\n    return <RecipeItem recipe={item as Recipe} />\n  } else if (item.type === 'food' && purpose === 'food-list') {\n    return <FoodItem food={item as Food} />\n  } else if (item.type === 'ingredient' && deleteItem && updateItem) {\n    return (\n      <IngredientItem\n        deleteIngredient={deleteItem}\n        updateIngredient={updateItem}\n        ingredient={item as Ingredient}\n      />\n    )\n  } else {\n    throw Error(`Error: PaginatedList: ${JSON.stringify({ item })}`)\n  }\n}\n","/** Adjust the number of items on each page by the height of the webpage */\nexport const getNumberOfItems = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  firstItem: React.RefObject<HTMLDivElement>\n) => {\n  // Get the height of the list and divide it by the height of item, to get the maximum number\n  // of items that can fit on a page. For example, an iPad Pro can take about 15 items,\n  // whereas an iPhone 6 can only take about 5\n  const containerHeight = containerRef.current?.getBoundingClientRect().height\n  const itemHeight = firstItem.current?.getBoundingClientRect().height\n\n  if (containerHeight && itemHeight) {\n    // Always round and subtract by 1 to make sure we don't overflow the container!\n    const numberOfItems = Math.ceil(containerHeight / itemHeight)\n    return numberOfItems\n  } else {\n    return null\n  }\n}\n","import React from 'react'\nimport { debounce } from 'throttle-debounce'\nimport { EmotionJSX } from '@emotion/react/types/jsx-namespace'\nimport { Type } from '../../../store/data/types'\nimport { splitIntoPages } from '../../paginator/helpers/splitIntoPages'\nimport { Paginator } from '../../paginator/Paginator'\nimport { createSearcher } from '../../standard-adder/helpers/createSearcher'\nimport { getSearchResults } from '../../standard-adder/helpers/getSearchResults'\nimport { getItem } from './helpers/getItem'\nimport { getNumberOfItems } from './helpers/getNumberOfItems'\nimport { PaginatedListPurpose } from './types'\n\nexport type Item = { id: string; type: Type }\ntype props = {\n  paginate: boolean\n  items: Item[]\n  searchable: boolean\n  updateItem: null | ((item: any) => void)\n  deleteItem: null | ((id: string) => void)\n  purpose: PaginatedListPurpose\n  forcedNumberOfItems?: number\n  renderItem?: (item: Item) => EmotionJSX.Element\n}\n\nexport const List: React.FC<props> = ({\n  deleteItem,\n  forcedNumberOfItems,\n  items,\n  paginate,\n  purpose,\n  renderItem,\n  searchable,\n  updateItem,\n}) => {\n  // The initial state\n  const [activePage, updateActivePage] = React.useState(0)\n  const [searchText, setSearchText] = React.useState('')\n  const [searchResults, setSearchResults] = React.useState([] as Item[])\n  const [numbersOfItems, setNumberOfItems] = React.useState(\n    forcedNumberOfItems || 4\n  )\n  const [referenceItemLength, updateReferenceItemLength] = React.useState(\n    items.length\n  )\n\n  // Other, initial variables\n  const searcher = createSearcher(items)\n  const itemContainer = React.useRef<HTMLDivElement>(null)\n  const firstItem = React.useRef<HTMLDivElement>(null)\n\n  const getNumberOfItemsFromPage = debounce(100, () => {\n    const numberOfItems = getNumberOfItems(itemContainer, firstItem)\n    if (numberOfItems) {\n      setNumberOfItems(numberOfItems)\n    }\n  })\n  // This function sets the number of items per page\n  // Only use forcedNumberOfItems on /foods where the page container can change unreliably\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const adjustNumberOfItems = forcedNumberOfItems\n    ? () => setNumberOfItems(forcedNumberOfItems)\n    : getNumberOfItemsFromPage\n\n  // This code ensures it runs on every resize event\n  React.useEffect(() => {\n    adjustNumberOfItems()\n    // Adjust the page size on every resize event\n    window.addEventListener('resize', adjustNumberOfItems)\n    return () => {\n      window.removeEventListener('resize', adjustNumberOfItems)\n    }\n  }, [adjustNumberOfItems])\n  // This code ensures in runs when the number of items changes\n  if (referenceItemLength !== items.length) {\n    updateActivePage(0)\n    updateReferenceItemLength(items.length)\n  }\n\n  // If paginate is false, put all the items into one nested arrays\n  // Otherwise, the nested array should have multiple entries, each corresponding to a different page\n  const itemsToUse =\n    paginate === false\n      ? [items]\n      : splitIntoPages(\n          searchable && searchText !== '' ? searchResults : items,\n          numbersOfItems\n        )\n\n  return (\n    <div id={`${purpose}`} className=\"w100 h100 fcs expand\">\n      {/* The fuzzy search input */}\n      {searchable && (\n        <input\n          type=\"text\"\n          autoCapitalize={'off'}\n          autoComplete={'off'}\n          autoCorrect={'off'}\n          value={searchText}\n          disabled={false}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            const text = event.target.value\n            const searchResults = getSearchResults(text, searcher).slice(0, 4)\n            setSearchText(text)\n            setSearchResults(searchResults)\n            updateActivePage(0)\n          }}\n          placeholder={'Filter by name...'}\n          className=\"fr bar list-bar mb30\"\n        />\n      )}\n      <div ref={itemContainer} className=\"w100\">\n        {referenceItemLength === items.length &&\n          itemsToUse[activePage].map((item, index) => (\n            <div\n              className=\"w100\"\n              ref={index === 0 ? firstItem : null}\n              key={item.id}\n            >\n              {renderItem\n                ? // Used only for /foods and DensityItem so we can pass density in\n                  renderItem(item)\n                : getItem(item, updateItem, deleteItem, purpose)}\n            </div>\n          ))}\n      </div>\n\n      {paginate && (\n        <Paginator\n          activePage={activePage}\n          items={itemsToUse}\n          handleClick={(number: number) => {\n            updateActivePage(number)\n          }}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Ingredient } from '../../../models/ingredient'\nimport { Recipe } from '../../../models/recipe'\nimport { List } from '../List/List'\n\ntype props = {\n  recipe: Recipe | null\n  ingredients: Ingredient[]\n  updateIngredient: (ingredient: Ingredient) => void\n  deleteIngredient: (id: string) => void\n}\n\nexport const IngredientList: React.FC<props> = ({\n  deleteIngredient,\n  ingredients,\n  recipe,\n  updateIngredient,\n}) => {\n  const ingredientsToUse = ingredients\n    // Add the parent recipe, just in case\n    .map((a) => {\n      return { ...a, ingredientToRecipe: recipe }\n    })\n    .sort((a, b) => {\n      const nameA =\n        a?.ingredientToFood?.name || a?.ingredientToChildRecipe?.name || a.unit\n      const nameB =\n        b?.ingredientToFood?.name || b?.ingredientToChildRecipe?.name || b.unit\n      return nameA.localeCompare(nameB)\n    })\n\n  return (\n    <List\n      purpose=\"ingredient-list\"\n      items={ingredientsToUse}\n      searchable={false}\n      paginate={false}\n      updateItem={updateIngredient}\n      deleteItem={deleteIngredient}\n    />\n  )\n}\n","/** Given a collection (ingredients of components) and a new item, either update the collection with the revised item or insert the item into the collection */\nexport const upsertItem = <Item extends { id: string }>(\n  items: Item[],\n  updatedItem: Item\n): Item[] => {\n  // Try to match the id of the item (Ingredient or Component) to update and an existing item\n  // If one exists, we need to update an item, not create a new one\n  const existingIngredient = items.find((item) => item.id === updatedItem.id)\n  if (existingIngredient !== undefined) {\n    // Replace the item at the old id with the new item\n    return items.map((item) =>\n      item.id === existingIngredient.id ? updatedItem : item\n    )\n  } else {\n    return [...items, updatedItem]\n  }\n}\n","import { VolumeUnit, WeightUnit } from '../constants/units'\nimport { uuid } from '../helpers/uuid'\nimport { Density } from './food'\nimport { Ingredient } from './ingredient'\nimport { Log } from './log'\nimport { Profile } from './profile'\n\n// Called recipes in Hasura\nexport class Recipe {\n  // Data\n  name: string\n  countName: string | null\n  containerName: string | null\n  servingPerContainer: number | null\n  countToGram: number | null\n  countToTbsp: number | null\n  preferredVolumeUnit: VolumeUnit | null\n  preferredWeightUnit: WeightUnit | null\n\n  // Foreign keys\n  profile: string\n\n  // Relationships\n  ingredients: Ingredient[]\n  ingredientsOfChildRecipe: Ingredient[]\n  logs: Log[]\n  recipeToProfile: Profile\n\n  // Metadata\n  id = uuid()\n  updatedAt = new Date()\n  createdAt = new Date()\n  type: 'recipe'\n\n  // Runtime\n  isDummy: undefined // For searchbar\n  density: Density // For AllFoodItem\n  alias: string | null // For dynamically created DummyFoods, like Pasta\n\n  constructor() {\n    this.type = 'recipe'\n    this.ingredients = [] as Ingredient[]\n  }\n}\n","import { Ingredient } from '../../../../models/ingredient'\nimport { Log } from '../../../../models/log'\nimport { Recipe } from '../../../../models/recipe'\n\n/** Create an empty log with a recipe filled with the ingredients passed in */\nexport const createRecipeLog = (ingredients: Ingredient[]) => {\n  const newRecipe = new Recipe()\n  newRecipe.ingredients = ingredients\n  const newLog = new Log()\n  newLog.logToRecipe = newRecipe\n  newLog.amount = 1\n  newLog.unit = 'COUNT'\n  return newLog\n}\n","import { RecipeMutationInput } from '../../components/forms/RecipeForm/helpers/formatDataForMutation'\nimport { CREATE_RECIPE } from '../../graphql/recipe'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport const addRecipeToCloud = (\n  variables: RecipeMutationInput,\n  onSuccess: () => void\n) =>\n  getHasuraClient()\n    .then((client) => {\n      client\n        .request(stringifyQuery(CREATE_RECIPE), { object: variables })\n        .then(() => {\n          onSuccess()\n        })\n    })\n    .catch((error) => handleError(error))\n","import { FormattedIngredient } from '../../components/forms/RecipeForm/helpers/formatIngredient'\nimport { UPDATE_RECIPE } from '../../graphql/recipe'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport type UpdateRecipe = {\n  pk_columns: {\n    id: string\n  }\n\n  set: Partial<any>\n  ingredients_to_delete: string[]\n  ingredients_to_insert: FormattedIngredient[]\n}\n\nexport const updateRecipeOnCloud = (\n  variables: UpdateRecipe,\n  onSuccess: () => void\n) =>\n  getHasuraClient()\n    .then((client) => {\n      client.request(stringifyQuery(UPDATE_RECIPE), variables).then(() => {\n        onSuccess()\n      })\n    })\n    .catch((error) => handleError(error))\n","import deepmerge from 'deepmerge'\nimport { RecipeFormData } from '../RecipeForm'\nimport { RecipeMutationInput } from './formatDataForMutation'\nimport { FormattedIngredient } from './formatIngredient'\n\n/** Add the formatted ingredients and tag in a way that can be accepted by Hasura\n *\n * That means replacing ingredients: Ingredient[] with ingredients: { data: Ingredient[]}. tags undergoes a similar process\n */\nexport const addIngredients = (\n  formData: RecipeFormData,\n  formattedIngredients: FormattedIngredient[]\n): RecipeMutationInput => {\n  const { ...data } = formData\n  return deepmerge(data, { ingredients: { data: formattedIngredients } })\n}\n","import merge from 'deepmerge'\nimport { Unit } from '../../../../constants/units'\nimport { Ingredient } from '../../../../models/ingredient'\nimport { Barcode } from '../../../../models/log'\n\nexport type FormattedIngredient = {\n  amount: number\n  barcode: Barcode | null\n  basicFood: string | null // the ID of the food\n  childRecipe: string | null // the ID of the child recipe\n  food: string | null // the ID of the food\n  recipe?: string\n  unit: Unit\n}\n\n/** Format the Ingredient object into a shape that Hasura requires.\n *\n *  This means replacing the food object in Ingredient with the food id. Also, deleting many extra fields, like id, type, etc.\n */\nexport const formatIngredient = (\n  ingredient: Ingredient,\n  recipeId: string | undefined\n): FormattedIngredient => {\n  const { amount, barcode, basicFood, childRecipe, food, recipe, unit } = merge(\n    ingredient,\n    {\n      barcode: ingredient.barcode,\n      basicFood: ingredient.basicFood,\n      childRecipe: ingredient.ingredientToChildRecipe?.id,\n      food: !ingredient.basicFood ? ingredient.ingredientToFood?.id : null,\n      recipe: recipeId,\n    }\n  )\n  return {\n    amount,\n    barcode,\n    basicFood,\n    childRecipe,\n    food,\n    recipe,\n    unit,\n  }\n}\n","import { Ingredient } from '../../../../models/ingredient'\nimport { RecipeFormData } from '../RecipeForm'\nimport { addIngredients } from './addIngredients'\nimport { formatIngredient, FormattedIngredient } from './formatIngredient'\n\nexport type RecipeMutationInput = {\n  name: string | number\n  countName: string | number\n  countToGram: number | null\n  countToTbsp: number | null\n  servingPerContainer: number | null\n  ingredients: {\n    data: FormattedIngredient[]\n  }\n}\n\nexport const formatDataForMutation = (\n  data: RecipeFormData,\n  ingredientsToUse: Ingredient[],\n  recipe?: string\n) => {\n  // Shape ingredients into the right format\n  const ingredients = ingredientsToUse.map((ingredient) =>\n    formatIngredient(ingredient, recipe)\n  )\n  const variables = {\n    // Add those ingredients and tags in the right format for Hasura\n    object: addIngredients(data, ingredients),\n  }\n  return variables\n}\n","import { produce } from 'immer'\nimport { addRecipeToCloud } from '../../../../helpers/recipes/addRecipeToCloud'\nimport { updateRecipeOnCloud } from '../../../../helpers/recipes/updateRecipeOnCloud'\nimport { Ingredient } from '../../../../models/ingredient'\nimport { Recipe } from '../../../../models/recipe'\nimport { AllEvents } from '../../../../store/store'\nimport { Dispatch } from '../../../../store/types'\nimport { RecipeFormData } from '../RecipeForm'\nimport { formatDataForMutation } from './formatDataForMutation'\n\nexport const submitRecipe = (\n  data: RecipeFormData,\n  ingredientsToUse: Ingredient[],\n  remoteIngredients: Ingredient[],\n  recipe: Recipe | null,\n  dispatch: Dispatch<AllEvents>,\n  closeModal: boolean\n) => {\n  if (recipe?.id) {\n    const formattedData = formatDataForMutation(\n      data,\n      ingredientsToUse,\n      recipe.id\n    )\n    const ingredientsToInsert = formattedData.object.ingredients.data\n    const remoteIds = remoteIngredients.map((ingredient) => ingredient.id)\n    const variables = {\n      ingredients_to_delete: remoteIds,\n      ingredients_to_insert: ingredientsToInsert,\n      pk_columns: { id: recipe.id },\n      set: produce(data, (draft) => {\n        // @ts-ignore\n        delete draft.ingredients\n      }),\n    }\n\n    const countToGramZeroedOut = recipe.countToGram && !data.countToGram\n    const countToTbspZeroedOut = recipe.countToTbsp && !data.countToTbsp\n\n    if (countToGramZeroedOut || countToTbspZeroedOut) {\n      alert(\n        'When you remove a unit from a recipe, it can break the recipes and the logs if they have stored the recipe with that unit. For example, you have made a log with 500mL of pudding and you remove the tbsp per recipe. Make sure you fix them after this update!'\n      )\n    }\n\n    return updateRecipeOnCloud(variables, () => {\n      if (closeModal) {\n        dispatch('closeRecipeFormModal')\n        dispatch('closeMenu')\n      }\n    })\n  } else {\n    const variables = formatDataForMutation(data, ingredientsToUse, recipe?.id)\n    return addRecipeToCloud(\n      {\n        ...variables.object,\n        countToGram: data.countToGram,\n        countToTbsp: data.countToTbsp,\n        servingPerContainer: data.servingPerContainer,\n      },\n      () => {\n        if (closeModal) {\n          dispatch('closeRecipeFormModal')\n        }\n      }\n    )\n  }\n}\n","import { css } from '@emotion/react'\nimport { curry } from '@typed/curry'\nimport React, { useEffect } from 'react'\nimport { useStoreon } from 'storeon/react'\nimport {\n  VolumeUnit,\n  volumeUnits,\n  WeightUnit,\n  weightUnits,\n} from '../../../constants/units'\nimport { prep } from '../../../helpers/prepareFractionalInputForSubmission'\nimport { Food } from '../../../models/food'\nimport { Ingredient } from '../../../models/ingredient'\nimport { Profile } from '../../../models/profile'\nimport { Recipe } from '../../../models/recipe'\nimport { EditorState } from '../../../store/editor/types'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { colors } from '../../../theme'\nimport { Divider } from '../../divider/Divider'\nimport { Explanation } from '../../explanation/Explanation'\nimport { IngredientList } from '../../list/Ingredient/IngredientList'\nimport { convertFromWeightToGrams } from '../../macros/helpers/convertFromWeightToGrams'\nimport { mapOtherVolumeUnitToTbsp } from '../../macros/helpers/mapOtherVolumeUnitToTbsp'\nimport { Macros } from '../../macros/Macros'\nimport { getAdjustedVolumeAmount } from '../CustomFoodForm/helpers/getAdjustedVolumeAmount'\nimport { getAdjustedWeightAmount } from '../CustomFoodForm/helpers/getAdjustedWeightAmount'\nimport { UnitSelector } from '../CustomFoodForm/UnitSelector'\nimport { upsertItem } from '../helpers/upsertItem'\nimport { createRecipeLog } from './helpers/createRecipeLog'\nimport { submitRecipe } from './helpers/submitRecipe'\n\ntype props = { recipe: Recipe | null; foods: Food[]; profile: Profile }\n\nexport type RecipeFormData = {\n  name: string\n  countName: string\n  ingredients: Ingredient[]\n  servingPerContainer: number | null\n  countToGram: number | null\n  countToTbsp: number | null\n}\n\nexport const RecipeForm: React.FC<props> = ({ profile, recipe }) => {\n  const {\n    dispatch,\n    editor,\n  }: { dispatch: Dispatch<AllEvents>; editor: EditorState } =\n    useStoreon('editor')\n\n  const [name, updateName] = React.useState(recipe?.name || '')\n  const [countName, updateCountName] = React.useState(recipe?.countName || '')\n\n  const [countToGram, setCountToGram] = React.useState(\n    (recipe?.countToGram || '') as string | number\n  )\n  const [countToTbsp, setCountToTbsp] = React.useState(\n    (recipe?.countToTbsp || '') as string | number\n  )\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [servingPerContainer, updateServingPerContainer] = React.useState(\n    recipe?.servingPerContainer || ''\n  )\n  const [volumeUnit, setVolumeUnit] = React.useState(\n    recipe?.preferredVolumeUnit || ('TBSP' as VolumeUnit)\n  )\n  const [weightUnit, setWeightUnit] = React.useState(\n    recipe?.preferredWeightUnit || ('GRAM' as WeightUnit)\n  )\n\n  const [convertVolume, updateConvertVolume] = React.useState(true)\n  const [convertWeight, updateConvertWeight] = React.useState(true)\n\n  const remoteIngredients = recipe?.ingredients || ([] as Ingredient[])\n  const [ingredients, setIngredients] = React.useState(remoteIngredients)\n  const { ingredient } = editor\n\n  const convertedCountToGram = convertFromWeightToGrams(\n    weightUnit,\n    prep(countToGram) || 0\n  )\n\n  const convertedCountToTbsp = mapOtherVolumeUnitToTbsp(\n    volumeUnit,\n    prep(countToTbsp) || 0\n  )\n\n  const data = {\n    countName,\n    countToGram: convertedCountToGram,\n    countToTbsp: convertedCountToTbsp,\n    ingredients,\n    name,\n    preferredVolumeUnit: volumeUnit,\n    preferredWeightUnit: weightUnit,\n    servingPerContainer: prep(servingPerContainer),\n  }\n\n  // Make sure the form is filled with \"late\" data\n  React.useEffect(() => {\n    updateName(recipe?.name || '')\n    updateCountName(recipe?.countName || '')\n    setIngredients(remoteIngredients)\n    setVolumeUnit(recipe?.preferredVolumeUnit || ('TBSP' as VolumeUnit))\n    setWeightUnit(recipe?.preferredWeightUnit || ('GRAM' as WeightUnit))\n\n    // Only convert the volume and weight on the first time the page loads.\n    // After that, treat them as \"dumb numbers\" until submission\n    if (convertVolume) {\n      setCountToTbsp(getAdjustedVolumeAmount(countToTbsp, volumeUnit))\n      updateConvertVolume(false)\n    }\n    if (convertWeight) {\n      setCountToGram(getAdjustedWeightAmount(countToGram, weightUnit))\n      updateConvertWeight(false)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recipe])\n\n  // Helpers\n\n  const updateIngredients = (\n    ingredients: Ingredient[],\n    updatedIngredient: Ingredient\n  ) => {\n    const updatedIngredients = upsertItem(ingredients, updatedIngredient)\n    setIngredients(updatedIngredients)\n  }\n\n  const deleteIngredient = (id: string) => {\n    const updatedIngredients = ingredients.filter(\n      (ingredient) => ingredient.id !== id\n    )\n    setIngredients(updatedIngredients)\n  }\n\n  useEffect(() => {\n    if (ingredient !== null) {\n      updateIngredients(ingredients, ingredient)\n      dispatch('saveIngredient', null)\n      dispatch('closeAddIngredientModal', true)\n      dispatch('closeBarcodeModal')\n    }\n  }, [dispatch, ingredient, ingredients])\n\n  const addIngredientStyling = css`\n    font-size: 0.8rem;\n    position: relative;\n  `\n\n  const fields = () => {\n    return (\n      <div className=\"group\">\n        <div className=\"w60\">\n          <label htmlFor=\"nameRecipe\">Name</label>\n          <input\n            placeholder=\"Chili\"\n            required\n            id=\"nameRecipe\"\n            onChange={(event) => {\n              updateName(event.target.value)\n            }}\n            value={data.name}\n            type=\"text\"\n            autoCapitalize={'on'}\n            autoComplete={'off'}\n            autoCorrect={'off'}\n          />\n        </div>\n        <div className=\"w40\">\n          <label htmlFor=\"countNameRecipe\">Label</label>\n          <input\n            required\n            id=\"countNameRecipe\"\n            onChange={(event) => {\n              updateCountName(event.target.value)\n            }}\n            value={countName}\n            type=\"text\"\n            placeholder=\"bowl\"\n            autoCapitalize={'off'}\n            autoComplete={'off'}\n            autoCorrect={'off'}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <form\n      className=\"fcs expand\"\n      onSubmit={(event) => {\n        event.preventDefault()\n\n        submitRecipe(\n          data,\n          ingredients,\n          remoteIngredients,\n          recipe,\n          dispatch,\n          true\n        )\n      }}\n    >\n      {fields()}\n      <div className=\"fc w100 mt20 mb25\">\n        <div className=\"bold\">Add ingredients +</div>\n        <div className=\"fr mt20\">\n          <button\n            onClick={() => dispatch('openAddIngredientModal', recipe?.id)}\n            type=\"button\"\n            css={addIngredientStyling}\n            className={`green mr20`}\n          >\n            By Search\n          </button>\n\n          <button\n            onClick={() => dispatch('openBarcodeModal')}\n            type=\"button\"\n            css={addIngredientStyling}\n            className={`green`}\n          >\n            By Barcode\n          </button>\n        </div>\n      </div>\n      <IngredientList\n        recipe={recipe}\n        ingredients={ingredients}\n        updateIngredient={curry(updateIngredients)(ingredients)}\n        deleteIngredient={deleteIngredient}\n      />\n      <Divider\n        height={1}\n        className=\"mt20 mb0\"\n        styles={css`\n          background-color: ${colors.lightgrey};\n        `}\n      />\n      <Explanation color=\"blue\">\n        <div>\n          <strong>Note:</strong> These units are optional\n        </div>\n      </Explanation>\n      <div className=\"w100\">\n        <div className=\"mb20\">\n          <div className=\"mt20\">\n            <UnitSelector\n              title={'per recipe'}\n              amount={countToTbsp}\n              unit={volumeUnit}\n              units={volumeUnits}\n              onChange={(unit, amount) => {\n                setCountToTbsp(amount)\n                setVolumeUnit(unit as VolumeUnit)\n              }}\n            />\n            <UnitSelector\n              title={'per recipe'}\n              amount={countToGram}\n              unit={weightUnit}\n              units={weightUnits}\n              onChange={(unit, amount) => {\n                setCountToGram(amount)\n                setWeightUnit(unit as WeightUnit)\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <Divider\n        height={1}\n        className=\"mb0\"\n        styles={css`\n          background-color: ${colors.lightgrey};\n        `}\n      />\n\n      <div className=\"fc w100 mt20\">\n        <div className=\"bold\">Total</div>\n        <div className=\"background pbutton-large rounded nohover mt20 mb20\">\n          <Macros\n            log={createRecipeLog(ingredients)}\n            profile={profile}\n            showTitles\n          />\n        </div>\n      </div>\n\n      <button\n        id=\"submitRecipeForm\"\n        type=\"submit\"\n        className=\"purple bold mt20 start\"\n      >\n        {recipe ? 'Update Recipe' : 'Create Recipe'}\n      </button>\n    </form>\n  )\n}\n","import { UPDATE_PROFILE } from '../../graphql/profile'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { stringifyQuery } from '../stringifyQuery'\n\ntype UpdateTargets = {\n  id: string\n  set: {\n    calorieTarget?: string | number\n    proteinTarget?: string | number\n    apiToken?: string\n    showCalories?: boolean\n    startTime?: string\n    hidePWAPrompt?: boolean\n    showDensities?: boolean\n    countDown?: boolean\n    enablePlanning?: boolean\n    metricSystem?: boolean\n    convertBetweenUnits?: boolean\n  }\n}\n\nexport const updateProfileOnCloud = (\n  variables: UpdateTargets,\n  onSuccess: () => void\n) => {\n  getHasuraClient().then((client) => {\n    client.request(stringifyQuery(UPDATE_PROFILE), variables).then(() => {\n      onSuccess()\n    })\n  })\n}\n","export const calculateBMRUsingKatchMcardle = (\n  weight: number,\n  bodyfatPercentage: number\n) => {\n  // Only use estimatedBodyFat (from BMI) if body fat is not provided\n  return 370 + 21.6 * (weight / 2.20462) * (1 - bodyfatPercentage)\n}\n","export const calculateBMI = (weight: number, height: number) => {\n  return (703 * weight) / height ** 2\n}\n","import { Sex } from '../../../../store/navbar/types'\nimport { calculateBMI } from './calculateBMI'\n\nexport const calculateBodyFatPercentageUsingCUN_BAE = (\n  weight: number,\n  height: number,\n  sexString: Sex,\n  age: number\n) => {\n  const BMI = calculateBMI(weight, height)\n  // CUN-BAE formula: https://pubmed.ncbi.nlm.nih.gov/33138089/\n  const sex = sexString === 'female' ? 1 : sexString === 'other' ? 0.5 : 0\n  const BF =\n    -44.988 +\n    0.503 * age +\n    10.689 * sex +\n    3.172 * BMI -\n    0.026 * BMI ** 2 +\n    0.181 * BMI * sex -\n    0.02 * BMI * age -\n    0.005 * BMI ** 2 * sex +\n    0.00021 * BMI ** 2\n  return BF\n}\n","import { Sex } from '../../../../store/navbar/types'\n\n/** Calculate ideal body weight, based on the Robinson formula.\n * The results are in kg but height is in inches.\n * */\nexport const calculateIdealBodyWeightInKg = (sex: Sex, height: number) => {\n  const male = 52 + 1.9 * (height - 60)\n  const female = 49 + 1.7 * (height - 60)\n  const other = (male + female) / 2\n  if (sex === 'male') {\n    return male\n  } else if (sex === 'female') {\n    return female\n  } else {\n    return other\n  }\n}\n","import { Sex } from '../../../../store/navbar/types'\nimport { Goal } from '../CalculateTargetForm'\nimport { calculateBMRUsingKatchMcardle } from './calculateBMRUsingKatchMcardle'\nimport { calculateBodyFatPercentageUsingCUN_BAE } from './calculateBodyFatPercentageUsingCUN_BAE'\nimport { calculateIdealBodyWeightInKg } from './calculateIdealBodyWeightInKg'\n\nexport const calculateTargets = (\n  metric: boolean,\n  age: string,\n  sex: Sex,\n  weight: string,\n  feet: string,\n  inches: string,\n  liftWeights: boolean,\n  goal: Goal\n) => {\n  // When metric is true, weight is kg, feet is actually cm, and inches is none\n  // When metric is false, inches and feet are inches and feet, and weight is lbs\n  const ageToUse = Number(age)\n  const weightToUse = metric ? Number(weight) * 2.2046226218 : Number(weight)\n  const heightToUse = metric\n    ? 0.3937 * Number(feet)\n    : Number(feet) * 12 + Number(inches)\n\n  const idealBodyWeightInKg = calculateIdealBodyWeightInKg(sex, heightToUse)\n\n  const estimatedBodyFatPercentage =\n    calculateBodyFatPercentageUsingCUN_BAE(\n      weightToUse,\n      heightToUse,\n      sex,\n      ageToUse\n    ) / 100\n\n  const leanBodyMassInKg =\n    (weightToUse * (1 - estimatedBodyFatPercentage)) / 2.2\n\n  const basalMetabolicRate = calculateBMRUsingKatchMcardle(\n    weightToUse,\n    estimatedBodyFatPercentage\n  )\n\n  // Assume a 10% thermic effect of food\n  // https://examine.com/outcomes/thermic-effect-of-food/\n  const thermicEffectOfFood = 0.1\n\n  // Assume a 1.1 multiplier for PA:  https://legionathletics.com/tdee-calculator/\n  const physicalActivityModifier = 0.1\n\n  const totalDailyEnergyExpenditure =\n    basalMetabolicRate * (1 + physicalActivityModifier + thermicEffectOfFood)\n\n  // Calculate protein targets\n\n  const SURPLUS = 1.1\n  const DEFICIT = 0.75\n  const MAINTAIN = 1\n\n  const getCalorieTarget = (goal: Goal) => {\n    if (goal === 'maintain') {\n      return totalDailyEnergyExpenditure * MAINTAIN\n    } else if (goal === 'muscle') {\n      return totalDailyEnergyExpenditure * SURPLUS\n    } else {\n      return Math.round(totalDailyEnergyExpenditure * DEFICIT)\n    }\n  }\n\n  return {\n    calorieTarget: Math.round(getCalorieTarget(goal)),\n    proteinTarget:\n      liftWeights === true\n        ? // Using the 1.6/2.2 g/kg rule\n          // https://bjsm.bmj.com/content/52/6/376.full?fbclid=IwAR2Hn-sPcLthyGUr6x3bJHJ4CA7h7wHEB83GhKmstCtYSG_yIh100tJUHQp3s\n          Math.round(1.6 * leanBodyMassInKg)\n        : // Using the Cleveland Clinic PSMF rule\n          // https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4784653\n          Math.round(1.2 * idealBodyWeightInKg),\n  }\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport Switch from 'react-switch'\nimport { useStoreon } from 'storeon/react'\nimport { updateProfileOnCloud } from '../../../helpers/profile/updateProfileOnCloud'\nimport { Profile } from '../../../models/profile'\nimport { Sex } from '../../../store/navbar/types'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { lg } from '../../../theme'\nimport { Tabs } from '../../tabs/Tabs'\nimport { calculateTargets } from './helpers/calculateTargets'\n\nexport type Goal = 'fat' | 'muscle' | 'maintain'\nexport type MeasurementSystem = 'imperial' | 'metric'\n\ntype props = { profile: Profile; onUpdate?: () => void }\nexport const CalculateTargetForm: React.FC<props> = ({ profile }) => {\n  const [metricSystem, setMetricSystem] = React.useState(\n    Boolean(profile.metricSystem)\n  )\n  const [weight, updateWeight] = React.useState('')\n  const [feet, updateFeet] = React.useState('')\n  const [inches, updateInches] = React.useState('')\n\n  const [liftWeights, setLiftWeights] = React.useState(false)\n\n  const [sex, updateSex] = React.useState('female' as Sex)\n  const [goal, updateGoal] = React.useState('maintain' as Goal)\n\n  const [age, updateAge] = React.useState('')\n\n  const {\n    dispatch,\n  }: {\n    dispatch: Dispatch<AllEvents>\n  } = useStoreon()\n\n  return (\n    <div>\n      <div>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault()\n            const { calorieTarget, proteinTarget } = calculateTargets(\n              metricSystem,\n              age,\n              sex,\n              weight,\n              feet,\n              inches,\n              liftWeights,\n              goal\n            )\n            const variables = {\n              id: profile.id,\n              set: {\n                calorieTarget: calorieTarget,\n                metricSystem,\n                proteinTarget: proteinTarget,\n              },\n            }\n            updateProfileOnCloud(variables, () => {\n              dispatch('closeTargetModal')\n            })\n          }}\n        >\n          <div className=\"group expand\">\n            <div className=\"w100\">\n              <label className=\"mt25\" htmlFor=\"goal\">\n                What is your goal?\n              </label>\n              <Tabs\n                css={css`\n                  font-size: 0.8rem !important;\n                  margin-bottom: 10px;\n                  @media (max-width: ${lg}px) {\n                    > button {\n                      min-width: 100%;\n                      margin: 5px;\n                    }\n                  }\n                `}\n                selected={goal}\n                tabs={{\n                  fat: {\n                    image: '',\n                    title: 'Lose fat',\n                  },\n                  maintain: {\n                    image: '',\n                    title: 'Maintain weight',\n                  },\n                  muscle: {\n                    image: '',\n                    title: 'Gain muscle',\n                  },\n                }}\n                onSelect={(tab) => {\n                  updateGoal(tab as Goal)\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"group expand\">\n            <div className=\"fr mt10 mb0\">\n              <label htmlFor=\"metricSystem\" className=\"mt0 mb0\">\n                Use the metric system?\n              </label>\n              <Switch\n                className=\"ml10 mt5\"\n                id=\"metricSystem\"\n                onChange={(data) => {\n                  setMetricSystem(data)\n                }}\n                checked={metricSystem}\n              />\n            </div>\n          </div>\n\n          <div className=\"group expand\">\n            <div className=\"w50\">\n              <label htmlFor=\"age\">\n                Age\n                <span className=\"tag pink\">years</span>\n              </label>\n              <input\n                required\n                id=\"age\"\n                onChange={(event) => {\n                  updateAge(event.target.value)\n                }}\n                value={age}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                placeholder={'40'}\n              />\n            </div>\n            <div className=\"w50\">\n              <label htmlFor=\"sex\">\n                Gender\n                <span className=\"tag pink\">preferred</span>\n              </label>\n              <Tabs\n                css={css`\n                  font-size: 0.8rem !important;\n                  height: 41px !important;\n                `}\n                selected={sex}\n                tabs={{\n                  female: {\n                    image: '',\n                    title: 'Female',\n                  },\n                  male: {\n                    image: '',\n                    title: 'Male',\n                  },\n                  other: {\n                    image: '',\n                    title: 'Other',\n                  },\n                }}\n                onSelect={(tab) => {\n                  updateSex(tab as Sex)\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"group\">\n            <div className=\"expand\">\n              <label htmlFor=\"currentWeight\">\n                Weight\n                <span className=\"tag pink\">{metricSystem ? 'kg' : 'lbs'}</span>\n              </label>\n              <input\n                id={metricSystem ? 'currentKg' : 'currentLbs'}\n                onChange={(event) => {\n                  updateWeight(event.target.value)\n                }}\n                value={weight}\n                type=\"number\"\n                autoComplete={'off'}\n                autoCorrect={'off'}\n                autoCapitalize={'off'}\n                step=\"any\"\n                placeholder={metricSystem ? '70' : '160'}\n                required\n              />\n            </div>\n            <div className=\"expand\">\n              <label htmlFor=\"height\">\n                Height\n                <span className=\"tag pink\">{metricSystem ? 'cm' : 'feet'}</span>\n                {!metricSystem && <span className=\"tag pink\">inches</span>}\n              </label>\n              <div className=\"frc\">\n                <input\n                  id={metricSystem ? 'currentCm' : 'currentFeet'}\n                  onChange={(event) => {\n                    updateFeet(event.target.value)\n                  }}\n                  value={feet}\n                  type=\"number\"\n                  autoComplete={'off'}\n                  autoCorrect={'off'}\n                  autoCapitalize={'off'}\n                  step=\"any\"\n                  placeholder={metricSystem ? '80' : '5'}\n                  required\n                />\n                {!metricSystem && (\n                  <input\n                    className=\"ml10\"\n                    id=\"currentInches\"\n                    onChange={(event) => {\n                      updateInches(event.target.value)\n                    }}\n                    value={inches}\n                    type=\"number\"\n                    autoComplete={'off'}\n                    autoCorrect={'off'}\n                    autoCapitalize={'off'}\n                    step=\"any\"\n                    placeholder=\"8\"\n                    required\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"group expand\">\n            <div className=\"fr mt10 mb10\">\n              <label htmlFor=\"liftWeights\">Do you lift weights?</label>\n              <Switch\n                className=\"ml10 mt5\"\n                id=\"liftWeights\"\n                onChange={(data) => {\n                  setLiftWeights(data)\n                }}\n                checked={liftWeights}\n              />\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"purple bold\">\n            Calculate\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport { updateProfileOnCloud } from '../../../helpers/profile/updateProfileOnCloud'\nimport { Profile } from '../../../models/profile'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { Divider } from '../../divider/Divider'\nimport { Explanation } from '../../explanation/Explanation'\nimport { CalculateTargetForm } from '../CalculateTargetForm/CalculateTargetForm'\n\ntype props = { profile: Profile }\n\nexport const TargetForm: React.FC<props> = ({ profile }) => {\n  const [calorieTarget, updateCalorieTarget] = React.useState(\n    profile?.calorieTarget || ''\n  )\n  const [proteinTarget, updateProteinTarget] = React.useState(\n    profile?.proteinTarget || ''\n  )\n\n  const {\n    dispatch,\n  }: {\n    dispatch: Dispatch<AllEvents>\n  } = useStoreon()\n\n  const data = {\n    calorieTarget,\n    proteinTarget,\n  }\n\n  const explanation = css`\n    font-size: 0.95rem !important;\n    width: 90% !important;\n  `\n\n  return (\n    <div className=\"w100\">\n      <div className=\"w100\">\n        {profile && (\n          <div>\n            <form\n              onSubmit={(event) => {\n                event.preventDefault()\n                const variables = { id: profile.id, set: data }\n                updateProfileOnCloud(variables, () => {\n                  dispatch('closeTargetModal')\n                })\n              }}\n            >\n              <div className=\"group fr\">\n                <div className=\"expand\">\n                  <label className=\"fr\" htmlFor=\"calorieTarget\">\n                    Calories\n                  </label>\n                  <input\n                    required\n                    id=\"calorieTarget\"\n                    onChange={(event) => {\n                      updateCalorieTarget(event.target.value)\n                    }}\n                    value={data.calorieTarget}\n                    type=\"number\"\n                    autoComplete={'off'}\n                    autoCorrect={'off'}\n                    autoCapitalize={'off'}\n                    step=\"any\"\n                  />\n                </div>\n                <div className=\"expand\">\n                  <label className=\"fr\" htmlFor=\"proteinTarget\">\n                    Protein\n                  </label>\n                  <input\n                    required\n                    id=\"proteinTarget\"\n                    onChange={(event) => {\n                      updateProteinTarget(event.target.value)\n                    }}\n                    value={data.proteinTarget}\n                    type=\"number\"\n                    autoComplete={'off'}\n                    autoCorrect={'off'}\n                    autoCapitalize={'off'}\n                    step=\"any\"\n                  />\n                </div>\n                <div>\n                  <label className=\"opaque\">Update</label>\n                  <button type=\"submit\" className=\"purple bold\">\n                    Update\n                  </button>\n                </div>\n              </div>\n            </form>\n            <Divider height={5} className=\"mt30 mb30 w90 center\" />\n            <Explanation styles={explanation} color=\"blue\">\n              Personalize your numbers with this form\n            </Explanation>\n            <CalculateTargetForm profile={profile} />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","export default {\"src\":\"/_next/static/media/trashcan.b25ee4cc.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","import { getAuth } from 'firebase/auth'\nimport toast from 'react-hot-toast'\nimport { DELETE_PROFILE } from '../../graphql/profile'\nimport { Profile } from '../../models/profile'\nimport { firebaseApp } from '../../pages'\nimport { firebaseEnabled } from '../getFirebaseConfig'\nimport { getHasuraClient } from '../getHasuraClient'\nimport { handleError } from '../handleError'\nimport { logout } from '../logout'\nimport { stringifyQuery } from '../stringifyQuery'\n\nexport const deleteAccountConfirmation =\n  'Are you sure you want to delete your account? All your data will be permanently deleted. This cannot be undone!'\n\nexport const deleteProfile = async (profile: Profile) => {\n  try {\n    const ok = window.confirm(deleteAccountConfirmation)\n    if (ok) {\n      const client = await getHasuraClient()\n      await client.request(stringifyQuery(DELETE_PROFILE), {\n        authId: profile.authId,\n      })\n      if (firebaseEnabled) {\n        const auth = getAuth(firebaseApp)\n        await auth.currentUser?.delete()\n      }\n      toast.success('Your account has been deleted!')\n      await logout(false)\n    }\n  } catch (error) {\n    handleError(error as Error)\n  }\n}\n","import Trashcan from '../../assets/common/trashcan.svg'\nimport { deleteProfile } from '../../helpers/profile/deleteProfile'\nimport { Profile } from '../../models/profile'\nimport { Image } from '../image/Image'\nimport { button, subheader } from './Settings'\n\nexport const DeleteAccount: React.FC<{ profile: Profile }> = ({ profile }) => (\n  <div className=\"w100\">\n    <div css={subheader} className={`pbutton rounded mt30 mb20 pink nohover`}>\n      Danger zone\n    </div>\n    <button\n      onClick={async () => {\n        await deleteProfile(profile)\n      }}\n      css={button}\n      className={`fr white`}\n    >\n      <Image alt=\"Trashcan\" src={Trashcan} width={40} height={40} />\n      <div className=\"ml15\">Delete account</div>\n    </button>\n  </div>\n)\n","import { css } from '@emotion/react'\nimport { useState } from 'react'\nimport Switch from 'react-switch'\nimport { updateProfileOnCloud } from '../../helpers/profile/updateProfileOnCloud'\nimport { useUser } from '../../hooks/useUser'\nimport { Profile } from '../../models/profile'\nimport { subheader } from './Settings'\n\ntype props = { profile: Profile }\n\nexport const Information: React.FC<props> = ({ profile }) => {\n  const user = useUser()\n  const [showCalories, setShowCalories] = useState(profile.showCalories)\n  const [showDensities, setShowDensities] = useState(profile.showDensities)\n  const [hidePWAPrompt, setHidePWAPrompt] = useState(profile.hidePWAPrompt)\n  const [countDown, setCountDown] = useState(profile.countDown)\n  const [enablePlanning, setEnablePlanning] = useState(profile.enablePlanning)\n  const [enableMetricSystem, setEnableMetricSystem] = useState(\n    profile.metricSystem\n  )\n\n  const userLoaded = user && user !== 'PENDING'\n\n  const info =\n    userLoaded && 'token' in user\n      ? '&' + user.token\n      : userLoaded && (user.email || user.providerData[0]?.email)\n\n  const itemLabelStyling = css`\n    width: 230px;\n  `\n\n  return (\n    <div className=\"w100 mt10\">\n      <div css={subheader} className={`pbutton rounded blue nohover mt20 mb20`}>\n        Profile\n      </div>\n      <div className=\"ml5\">\n        {info && (\n          <>\n            <strong className=\"mr5\">\n              {info[0] === '&' ? 'Token:' : 'Email:'}\n            </strong>\n            {info[0] === '&' ? info.slice(1) : info}\n          </>\n        )}\n      </div>\n\n      <div className=\"ml5 mt5\">\n        <>\n          <strong className=\"mr5\">Version:</strong>\n          {process.env.NEXT_PUBLIC_VERSION}\n        </>\n      </div>\n\n      <div\n        css={subheader}\n        className={`pbutton rounded green nohover mt30 mb20`}\n      >\n        Preferences\n      </div>\n      <div className=\"fr mt20 ml5\">\n        <label className=\"fr\">\n          <span className=\"mr10\" css={itemLabelStyling}>\n            Use the metric system\n          </span>\n          <Switch\n            onChange={(data) => {\n              updateProfileOnCloud(\n                { id: profile.id, set: { metricSystem: data } },\n                () => {\n                  setEnableMetricSystem(data)\n                }\n              )\n            }}\n            checked={enableMetricSystem}\n          />\n        </label>\n      </div>\n      <div className=\"mt20\">\n        <div className=\"fr mt20 ml5\">\n          <label className=\"fr\">\n            <span className=\"mr10\" css={itemLabelStyling}>\n              Do not show calories\n            </span>\n            <Switch\n              onChange={(data) => {\n                updateProfileOnCloud(\n                  { id: profile.id, set: { showCalories: !data } },\n                  () => {\n                    setShowCalories(!data)\n                  }\n                )\n              }}\n              checked={!showCalories}\n            />\n          </label>\n        </div>\n        <div className=\"fr mt20 ml5\">\n          <label className=\"fr\">\n            <span className=\"mr10\" css={itemLabelStyling}>\n              Enable planning the day\n            </span>\n            <Switch\n              onChange={(data) => {\n                updateProfileOnCloud(\n                  { id: profile.id, set: { enablePlanning: data } },\n                  () => {\n                    setEnablePlanning(data)\n                  }\n                )\n              }}\n              checked={enablePlanning}\n            />\n          </label>\n        </div>\n        <div className=\"fr mt20 ml5\">\n          <label className=\"fr\">\n            <span className=\"mr10\" css={itemLabelStyling}>\n              Calories {'&'} protein count up\n            </span>\n            <Switch\n              onChange={(data) => {\n                updateProfileOnCloud(\n                  { id: profile.id, set: { countDown: !data } },\n                  () => {\n                    setCountDown(!data)\n                  }\n                )\n              }}\n              checked={!countDown}\n            />\n          </label>\n        </div>\n        <div className=\"fr mt20 ml5\">\n          <label className=\"fr\">\n            <span className=\"mr10\" css={itemLabelStyling}>\n              Show density of each food\n            </span>\n            <Switch\n              onChange={(data) => {\n                updateProfileOnCloud(\n                  { id: profile.id, set: { showDensities: data } },\n                  () => {\n                    setShowDensities(data)\n                  }\n                )\n              }}\n              checked={showDensities}\n            />\n          </label>\n        </div>\n\n        <div className=\"fr mt20 ml5\">\n          <label className=\"fr\">\n            <span className=\"mr10\" css={itemLabelStyling}>\n              Hide prompt to download app\n            </span>\n            <Switch\n              onChange={(data) => {\n                updateProfileOnCloud(\n                  { id: profile.id, set: { hidePWAPrompt: data } },\n                  () => {\n                    setHidePWAPrompt(data)\n                  }\n                )\n              }}\n              checked={hidePWAPrompt}\n            />\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { Profile } from '../../models/profile'\nimport { colors } from '../../theme'\nimport { DeleteAccount } from './DeleteAccount'\nimport { Information } from './Information'\n\nexport const documentation = css`\n  margin: 20px auto;\n  max-width: 800px;\n  padding-bottom: 10px;\n  width: 80%;\n  line-height: 1.6;\n  h2 {\n    margin-bottom: 25px;\n    margin-top: 25px;\n  }\n  h3 {\n    margin-bottom: 25px;\n    margin-top: 25px;\n  }\n  ul,\n  ol {\n    margin-bottom: 20px;\n    margin-left: 20px;\n  }\n`\n\nexport const subheader = css`\n  font-size: 1rem;\n  font-weight: 400;\n  width: 100%;\n`\n\nexport const button = css`\n  border: 1px solid ${colors.lightgrey};\n  font-size: 1.1rem;\n  img {\n    height: 40px;\n    margin-right: 10px;\n    width: 40px;\n  }\n`\n\ntype props = { profile: Profile }\nexport const Settings: React.FC<props> = ({ profile }) => {\n  return (\n    <div css={documentation} className={`fcc`}>\n      <h1>Settings ⚙️</h1>\n      <Information profile={profile} />\n      <DeleteAccount profile={profile} />\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { KeyboardShortcutKeys } from '../../helpers/createShortcuts'\nimport { colors } from '../../theme'\nimport { Divider } from '../divider/Divider'\nimport { documentation } from '../settings/Settings'\n\nconst shortcuts: Record<KeyboardShortcutKeys, string> = {\n  b: 'Scan barcode',\n  e: 'Log exercise',\n  f: 'List custom foods',\n  h: 'Show shortcuts',\n  l: 'Log food',\n  m: 'Show menu',\n  q: 'Quick add',\n  r: 'List recipes',\n}\n\nexport const Help: React.FC = () => {\n  const keyShortcuts = ['l', 'q', 'Escape', 'h']\n  const subheader = css`\n    font-size: 1.1rem;\n    margin: 20px 0;\n  `\n  const shortcutContainer = css`\n    margin-bottom: 15px;\n    > div {\n      border-radius: 5px;\n      &:first-of-type {\n        background-color: ${colors.background};\n        margin-right: 10px;\n        padding: 5px 10px;\n      }\n    }\n  `\n  return (\n    <div css={documentation}>\n      <h1>Keyboard shortcuts</h1>\n      <h3 css={subheader} className={`fr`}>\n        Primary{' '}\n        <span\n          css={css`\n            margin-left: 5px;\n            position: relative;\n            top: -1px;\n          `}\n        >\n          ⭐\n        </span>\n      </h3>\n      {Object.entries({ Escape: 'Close all windows', ...shortcuts }).map(\n        (shortcut) => {\n          const [key, purpose] = shortcut\n          if (keyShortcuts.includes(key)) {\n            return (\n              <div key={key} css={shortcutContainer} className={`fr`}>\n                <div>{key}</div>\n                <div>{purpose}</div>\n              </div>\n            )\n          } else {\n            return ''\n          }\n        }\n      )}\n\n      <Divider className=\"mt30 mb20\" />\n      <h3 className={`fr ${subheader}`}>Secondary</h3>\n      {Object.entries(shortcuts).map((shortcut) => {\n        const [key, purpose] = shortcut\n        if (!keyShortcuts.includes(key)) {\n          return (\n            <div key={key} css={shortcutContainer} className={`fr`}>\n              <div>{key}</div>\n              <div>{purpose}</div>\n            </div>\n          )\n        } else {\n          return ''\n        }\n      })}\n    </div>\n  )\n}\n","import React from 'react'\nimport { EmotionJSX } from '@emotion/react/types/jsx-namespace'\nimport { documentation } from '../settings/Settings'\n\nexport const InformationModal: React.FC<{\n  Information: EmotionJSX.Element | string | null\n}> = ({ Information }) => {\n  return (\n    <div css={documentation} className={`fc`}>\n      {Information ? (\n        <div>{Information}</div>\n      ) : (\n        <>\n          <h1>I cannot find a food!</h1>\n          <div className=\"mt10\">\n            <p>Don{`'`}t panic, this is by design.</p>\n            <ul>\n              <li>\n                We omit branded foods because they already have nutrition\n                labels.\n              </li>\n              <li>\n                We omit foods served at restaurant, like brownies or pizza,\n                because we cannot estimate them accurately.\n              </li>\n            </ul>\n            <p>\n              By doing so, we remove a ton of clutter from the interface. This,\n              in turn, makes logging everything else much simpler and faster!\n            </p>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","export default {\"src\":\"/_next/static/media/back.3d2d6219.svg\",\"height\":16,\"width\":16,\"blurWidth\":0,\"blurHeight\":0};","/* eslint-disable @next/next/no-img-element */\nimport { css } from '@emotion/react'\nimport React from 'react'\nimport Back from '../../../assets/common/back.svg'\nimport { Key } from '../../../helpers/createShortcuts'\nimport { Food } from '../../../models/food'\nimport { Recipe } from '../../../models/recipe'\nimport { Image } from '../../image/Image'\nimport { Tags } from '../../item/components/Tags'\nimport { getNameAndTags } from '../../item/helpers/getNameAndTags'\nimport {\n  getImagePath,\n  selectFoodImage,\n} from '../../list/helpers/selectFoodImage'\n\ntype props = {\n  selectedItem: Food | Recipe\n  onBack: () => void\n  showBack: boolean\n  isDummy: boolean\n  path: string[]\n}\n\nconst backButton = css`\n  margin-left: auto;\n  padding-bottom: 10px;\n  padding-top: 10px;\n\n  img {\n    height: 18px;\n    width: 18px;\n  }\n`\n\nexport const Meta: React.FC<props> = ({\n  onBack,\n  path,\n  selectedItem,\n  showBack,\n}) => {\n  const result = getNameAndTags(\n    selectedItem?.name || '',\n    selectedItem?.alias || ''\n  )\n\n  return (\n    <div id=\"StandardAdderMeta\" className={`w100 fr m20`}>\n      {/* name and image */}\n      <img\n        id=\"StandardAdderMetaImage\"\n        css={css`\n          height: 50px;\n          margin-right: 10px;\n          width: 50px;\n        `}\n        src={selectFoodImage(selectedItem, getImagePath)}\n        alt=\"Food\"\n      />\n      <span\n        id=\"StandardAdderMetaName\"\n        css={css`\n          font-size: 1rem;\n          font-weight: 400;\n        `}\n      >\n        {result.name}\n        {result.tags.length >= 1 && <Tags tags={result.tags} />}\n        {path.length >= 1 && <Tags tags={path.slice(1)} />}\n      </span>\n      {showBack && (\n        <button\n          id=\"StandardAdderMetaButton\"\n          onClick={() => {\n            onBack()\n          }}\n          onKeyDown={(event) => {\n            const key = event.key as Key\n            key === 'Enter' && onBack()\n          }}\n          css={backButton}\n          className={`background z1`}\n          type=\"button\"\n        >\n          <Image alt=\"Back\" height={18} width={18} src={Back} />\n        </button>\n      )}\n    </div>\n  )\n}\n","/* eslint-disable @next/next/no-img-element */\n\nimport { css } from '@emotion/react'\nimport truncate from 'lodash.truncate'\nimport React from 'react'\nimport { Food } from '../../../models/food'\nimport { Recipe } from '../../../models/recipe'\nimport { colors } from '../../../theme'\nimport { HiddenInput } from '../../buttons/HiddenInput'\nimport { TRUNCATE_LENGTH } from '../../item/helpers/getNameAndTags'\nimport {\n  getImagePath,\n  selectFoodImage,\n} from '../../list/helpers/selectFoodImage'\n\ntype props = {\n  index: number\n  result: Food | Recipe\n  onClick: () => void\n}\nexport const SearchResult: React.FC<props> = ({ index, onClick, result }) => {\n  // Check if a recipe or custom food\n  const isRecipe = (result: Recipe | Food) => result.type === 'recipe'\n  const isCustomFood = (result: Recipe | Food) =>\n    result.type === 'food' && result.foodToProfile\n\n  const dummyFood = css`\n    border-radius: 5px;\n    color: ${colors.text};\n    font-size: 0.7rem;\n    margin-left: 15px;\n    padding: 7.5px 10px;\n  `\n\n  const imageStyles = css`\n    height: 35px;\n    margin-left: 5px;\n    margin-right: 12.5px;\n    width: 35px;\n  `\n\n  const nameStyles = css`\n    color: ${colors.text};\n    font-size: 0.9rem;\n    font-weight: 400;\n  `\n\n  return (\n    <button\n      onClick={() => onClick()}\n      type=\"button\"\n      key={result.id}\n      className={`normal w100`}\n      id={`StandardAdderSearchResult-${index}`}\n    >\n      {!result.isDummy && <HiddenInput inputMode=\"decimal\" />}\n      <div className=\"fr w100\">\n        <img\n          css={imageStyles}\n          src={selectFoodImage(result, getImagePath)}\n          alt=\"Food\"\n        />\n        <span css={nameStyles}>\n          {truncate(result.name, { length: TRUNCATE_LENGTH })}\n        </span>\n        {result.isDummy && (\n          <div css={dummyFood} className={`pink`}>\n            Expand\n          </div>\n        )}\n        {isCustomFood(result) && (\n          <div css={dummyFood} className={`blue`}>\n            Custom food\n          </div>\n        )}\n        {isRecipe(result) && (\n          <div css={dummyFood} className={`green`}>\n            Recipe\n          </div>\n        )}\n      </div>\n    </button>\n  )\n}\n","import { Unit } from '../../../constants/units'\n\nexport const getDefaultUnit = (units: Record<Unit, string>[]) => {\n  return Object.keys(\n    units.reduce((acc, unitSet) => {\n      return { ...acc, ...unitSet }\n    }, {})\n  )[0] as Unit\n}\n","import { css } from '@emotion/react'\nimport { useState } from 'react'\nimport { convertToNumber } from '../../../helpers/convertToNumber'\nimport { getDispatch } from '../../../helpers/getDispatch'\nimport { Food } from '../../../models/food'\nimport { defaultMeal } from '../../../models/log'\nimport { Profile } from '../../../models/profile'\nimport { Recipe } from '../../../models/recipe'\nimport { getPrettyUnits } from '../../list/helpers/getPrettyUnits'\nimport { getDefaultUnit } from '../helpers/getDefaultUnit'\nimport { submitEditor } from '../helpers/submitEditor'\nimport { AdderItem } from '../StandardAdder'\nimport { ButtonPanel } from './ButtonPanel'\nimport { InputFields } from './InputFields'\nimport { Meta } from './Meta'\n\ntype props = {\n  type: AdderItem\n  selectedItem: Food | Recipe\n  setSelectedItem: React.Dispatch<React.SetStateAction<Food | Recipe | null>>\n  onBack: () => void\n  profile: Profile\n}\nexport const SelectedItem: React.FC<props> = ({\n  onBack,\n  profile,\n  selectedItem,\n  setSelectedItem,\n  type,\n}) => {\n  const dispatch = getDispatch()\n  const { enablePlanning } = profile\n\n  const [amount, setAmount] = useState('')\n  const [unit, setUnit] = useState(getDefaultUnit(getPrettyUnits(selectedItem)))\n  const [meal, setMeal] = useState(defaultMeal)\n\n  const submitReady = Boolean(amount && unit)\n\n  const submit = () => {\n    const amountAsNumber = convertToNumber(amount)\n    const status = submitEditor(\n      type,\n      selectedItem?.alias || null,\n      amountAsNumber,\n      unit,\n      null,\n      enablePlanning,\n      meal,\n      dispatch,\n      selectedItem\n    )\n    if (status) {\n      setSelectedItem(null)\n    }\n  }\n\n  return (\n    <form\n      id=\"SelectedItem\"\n      css={css`\n        margin: 0 auto;\n        max-width: 500px;\n      `}\n      className={`mb20`}\n      onKeyDown={(event) => {\n        if (event.key === 'Enter') {\n          event.preventDefault()\n          submitReady && submit()\n        }\n      }}\n    >\n      <div className=\"fcc\">\n        <Meta\n          isDummy={false}\n          selectedItem={selectedItem}\n          showBack={true}\n          onBack={() => onBack()}\n          path={[]}\n        />\n        <InputFields\n          selectedItem={selectedItem}\n          unit={unit}\n          setUnit={setUnit}\n          amount={amount}\n          setAmount={setAmount}\n          enablePlanning={enablePlanning}\n          meal={meal}\n          setMeal={setMeal}\n        />\n        <ButtonPanel showSubmit={submitReady} submit={() => submit()} />\n      </div>\n    </form>\n  )\n}\n","import { dummyFoods } from '../../../constants/dummyFoods/dummyFoods'\nimport { pastaNames } from '../../../constants/dummyFoods/pasta'\nimport { Food } from '../../../models/food'\nimport { Recipe } from '../../../models/recipe'\nimport { createDummyFood } from './createDummyFood'\nimport { getAllDummyFoodLeaves } from './getAllDummyFoodLeaves'\n\nexport const mapFoodToDummyFood = (item: Food | Recipe) => {\n  const leaves = getAllDummyFoodLeaves(dummyFoods)\n  const dummyFoodName = leaves[item.name]\n  // Example: [chicken breast with skin (cooked)] -> Chicken\n  if (dummyFoodName) {\n    return createDummyFood(dummyFoodName)\n    // Example: Penne -> Pasta\n  } else if (pastaNames.includes(item.name)) {\n    return createDummyFood('Pasta', 'Grain', 'Pasta')\n  } else {\n    // The food is not a dummy food, just return it\n    return item\n  }\n}\n","import { css } from '@emotion/react'\nimport get from 'just-safe-get'\nimport uniqueBy from 'lodash.uniqby'\nimport React, { useState } from 'react'\nimport { dummyFoods } from '../../constants/dummyFoods/dummyFoods'\nimport { pastaNames } from '../../constants/dummyFoods/pasta'\nimport { Food } from '../../models/food'\nimport { Profile } from '../../models/profile'\nimport { Recipe } from '../../models/recipe'\nimport { colors } from '../../theme'\nimport { Meta } from './components/Meta'\nimport { SearchResult } from './components/SearchResults'\nimport { SelectedItem } from './components/SelectedItem'\nimport { createDummyFood } from './helpers/createDummyFood'\nimport { createSearcher } from './helpers/createSearcher'\nimport { getSearchResults } from './helpers/getSearchResults'\nimport { mapFoodToDummyFood } from './helpers/mapNameToDummyFood'\n\nexport type AdderItem = 'ingredient' | 'log'\n\ntype props = {\n  profile: Profile\n  recipes: Recipe[]\n  foods: Food[]\n  type: AdderItem\n}\n\nexport const StandardAdder: React.FC<props> = ({\n  foods,\n  profile,\n  recipes,\n  type,\n}) => {\n  const [searchText, setSearchText] = useState('')\n  const [searchResults, setSearchResults] = useState([] as (Food | Recipe)[])\n  const [path, setPath] = useState([] as string[])\n  const [options, setOptions] = useState([] as string[])\n  const [dummyFood, setDummyFood] = useState(null as Food | Recipe | null)\n  const [selectedItem, setSelectedItem] = useState(null as Food | Recipe | null)\n\n  // The searching infrastructure\n  const items = [\n    ...foods,\n    ...recipes,\n    // Pasta is special because it is many unique names, like Pastina, mapped to white or wheat pasta\n    ...pastaNames.map((name) => createDummyFood(name, 'Grain', 'Pasta')),\n  ]\n  const searcher = createSearcher(items)\n\n  const clearEverything = () => {\n    setSearchText('')\n    setSearchResults([])\n    setOptions([])\n    setPath([])\n    setSelectedItem(null)\n  }\n\n  // Focus on the searchbar when the editor first loads\n\n  const searchbarInput = React.useRef<HTMLInputElement>(null)\n  React.useEffect(() => {\n    if (searchbarInput.current) {\n      searchbarInput.current?.focus()\n    }\n  }, [])\n\n  return (\n    <div className=\"w100\">\n      {/* The searchbar to search for the item */}\n\n      {!selectedItem && path.length === 0 && (\n        <input\n          type=\"text\"\n          id=\"StandardAdderSearchbar\"\n          value={searchText}\n          autoComplete={'off'}\n          autoCorrect={'off'}\n          autoCapitalize={'off'}\n          ref={searchbarInput}\n          placeholder={'Search for items...'}\n          css={css`\n            font-weight: 400;\n            height: 59px;\n            padding: 20px;\n            padding-left: 10px;\n            width: 100%;\n            border-radius: 0px;\n            border: 0px;\n            border-bottom: 1px solid #eee;\n            &:focus {\n              border-color: #eee;\n            }\n          `}\n          onChange={(e) => {\n            const value = e.target.value\n            setSearchText(value)\n            // Reset the results on an empty string\n            if (value === '') {\n              setSearchResults([])\n            } else {\n              const results = getSearchResults(value, searcher)\n\n              // If you search chicken, you will get all the leaves\n              // For example: [chicken breast without skin (cooked), etc.]\n              // This maps them all the single dummy food Chicken\n\n              const resultsWithoutLeaves = results.map((result) =>\n                mapFoodToDummyFood(result)\n              )\n\n              // Remove all the duplicate dummy foods (e.g. the dummy food chicken like 40 times)\n              // Handles the fact a recipe, custom food, and basic food can all be named the same thing\n\n              const uniqueResults = uniqueBy(\n                resultsWithoutLeaves,\n                (x) => x.name + x.type + x.profile\n              )\n\n              setSearchResults(uniqueResults.slice(0, 6))\n            }\n          }}\n        />\n      )}\n\n      {/* The results of that search: all foods and recipes and the first of each dummy food */}\n\n      {!selectedItem &&\n        searchResults.map((result, i) => {\n          return (\n            <SearchResult\n              index={i}\n              result={result}\n              onClick={() => {\n                if (result.isDummy) {\n                  const newPath = [...path, result.name]\n                  const options: string[] = Object.keys(\n                    get(dummyFoods, newPath)\n                  )\n                  setPath(newPath)\n                  setOptions(options)\n                  path.length === 0 && setDummyFood(result)\n                } else {\n                  setSelectedItem(result)\n                }\n                setSearchResults([])\n                setSearchText('')\n              }}\n              key={result.name + i}\n            />\n          )\n        })}\n\n      {/* Once a dummy food is selected, iterate through the tree of the dummy food */}\n\n      {!selectedItem && path.length >= 1 && dummyFood && (\n        <>\n          <div\n            css={css`\n              padding: 0px 20px;\n            `}\n          >\n            <Meta\n              selectedItem={dummyFood}\n              isDummy={true}\n              onBack={() => clearEverything()}\n              showBack={true}\n              path={path.map((p) => p.toLowerCase())}\n            />\n          </div>\n\n          {options.map((option) => {\n            return (\n              <button\n                className=\"fr w100\"\n                css={css`\n                  color: ${colors.text};\n                  font-size: 0.9rem;\n                  font-weight: 400;\n                  padding: 15px 20px;\n                `}\n                onClick={() => {\n                  const newPath = [...path, option]\n                  const options: string[] = get(dummyFoods, newPath)\n                  if (Array.isArray(options)) {\n                    const food = foods.find((food) => food.name === options[0])\n                    food && setSelectedItem(food)\n                  } else {\n                    setPath(newPath)\n                    setOptions(Object.keys(options))\n                  }\n                }}\n                key={option}\n              >\n                {option}\n              </button>\n            )\n          })}\n        </>\n      )}\n\n      {/* Once a final item is selected, a food, recipe, or leaf of a dummy food */}\n\n      {selectedItem && (\n        <SelectedItem\n          profile={profile}\n          type={type}\n          selectedItem={selectedItem}\n          setSelectedItem={setSelectedItem}\n          onBack={() => clearEverything()}\n        />\n      )}\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport { Food } from '../../models/food'\nimport { Profile } from '../../models/profile'\nimport { Recipe } from '../../models/recipe'\nimport { StandardAdder } from '../standard-adder/StandardAdder'\n\ntype props = { profile: Profile; foods: Food[]; recipes: Recipe[] }\nexport const IngredientModal: React.FC<props> = ({\n  foods,\n  profile,\n  recipes,\n}) => {\n  return (\n    <div\n      css={css`\n        margin: 0 auto;\n        width: 90%;\n      `}\n    >\n      <StandardAdder\n        profile={profile}\n        recipes={recipes}\n        foods={foods}\n        type=\"ingredient\"\n      />\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Unit } from '../../../constants/units'\nimport { defaultMeal } from '../../../models/log'\nimport { CommonItem } from '../types'\n\nconst defaultOnDelete = (id?: string) => {}\nconst defaultOnUpdate = (\n  id: string | null,\n  unit: Unit | null,\n  amount: number | null\n) => undefined\n\nexport const createDefaultItem = (\n  enablePlanning: boolean,\n  unit?: Unit\n): CommonItem => {\n  return {\n    alias: null,\n    amount: null,\n    barcode: null,\n    basicFood: null,\n    childRecipe: null,\n    consumed: !enablePlanning,\n    createdAt: null,\n    food: null,\n    id: '',\n    meal: defaultMeal,\n    name: '',\n    onDelete: defaultOnDelete,\n    onUpdate: defaultOnUpdate,\n    profile: null,\n    recipe: null,\n    src: '',\n    type: 'log',\n    unit: unit || 'GRAM',\n  }\n}\n","/* eslint-disable @next/next/no-img-element */\nimport { css } from '@emotion/react'\nimport { capitalize } from '../../../helpers/capitalize'\nimport { imageStyling, nameStyling } from '../../item/components/Meta'\nimport { Tags } from '../../item/components/Tags'\nimport { getNameAndTags } from '../../item/helpers/getNameAndTags'\nimport { CommonItem } from '../../item/types'\n\ntype props = {\n  item: CommonItem\n}\nexport const Meta: React.FC<props> = ({ item }) => {\n  const { alias, barcode, childRecipe, food, name, recipe, src } = item\n\n  const result = getNameAndTags(\n    recipe?.name ||\n      food?.name ||\n      childRecipe?.name ||\n      capitalize(barcode?.name || '') ||\n      name ||\n      '',\n    alias || ''\n  )\n\n  const meta = css`\n    font-size: 1rem !important;\n    margin-bottom: 0 !important;\n  `\n\n  return (\n    <div className={'fr w100 mb20'}>\n      {src && <img css={imageStyling} alt=\"Item\" src={src}></img>}\n      <div css={meta} className={`${nameStyling}`}>\n        {result.name}\n        <Tags tags={result.tags} />\n      </div>\n    </div>\n  )\n}\n","import { curry } from '@typed/curry'\nimport React from 'react'\nimport { Unit } from '../../../constants/units'\nimport { Food } from '../../../models/food'\nimport { Recipe } from '../../../models/recipe'\nimport { Select } from '../../select/Select'\nimport { getPrettyUnits } from './getPrettyUnits'\n\nexport const renderUnitComponent = (\n  id: string,\n  unit: Unit,\n  item: Food | Recipe | null | undefined,\n  updater: (id: string, unit: Unit) => void\n) => {\n  if (item) {\n    const prettyUnits = getPrettyUnits(item)\n    return (\n      <Select\n        focus={false}\n        currentOption={unit}\n        optionDictionary={prettyUnits}\n        onChange={curry(updater)(id)}\n      ></Select>\n    )\n  } else {\n    return <div />\n  }\n}\n","import { Ingredient } from '../../../models/ingredient'\nimport { CommonItem } from '../types'\n\nexport const convertItemToIngredient = (\n  item: CommonItem,\n  amount?: number | null\n): Ingredient => {\n  const ingredient = new Ingredient()\n\n  ingredient.type = 'ingredient'\n\n  if (item.food) {\n    ingredient.ingredientToFood = item.food\n  }\n  if (item.recipe) {\n    ingredient.ingredientToRecipe = item.recipe\n  }\n  if (item.childRecipe) {\n    ingredient.ingredientToChildRecipe = item.childRecipe\n  }\n\n  if (amount) {\n    ingredient.amount = amount\n  } else if (item.amount) {\n    ingredient.amount = item.amount\n  }\n\n  if (item.unit) {\n    ingredient.unit = item.unit\n  }\n\n  return ingredient\n}\n","import { Log } from '../../../models/log'\nimport { CommonItem } from '../types'\n\nexport const convertItemToLog = (\n  item: CommonItem,\n  amount?: number | null\n): Log => {\n  const log = new Log()\n\n  log.type = 'log'\n  log.logToFood = item.food\n  log.logToRecipe = item.recipe\n\n  if (amount) {\n    log.amount = amount\n  } else if (item.amount) {\n    log.amount = item.amount\n  }\n\n  if (item.unit) {\n    log.unit = item.unit\n  }\n\n  return log\n}\n","import { Unit } from '../../../constants/units'\n\nexport const convertFromGramsToCount = (\n  grams: number,\n  newUnit: Unit,\n  countToGrams: number,\n  servingPerContainer: number | null | undefined\n): number => {\n  const count = grams / countToGrams\n  const countToUse =\n    servingPerContainer && newUnit === 'CONTAINER'\n      ? count / servingPerContainer\n      : count\n  return countToUse\n}\n","import { Unit } from '../../../constants/units'\nimport { mapTbspToOtherVolumeUnit } from './mapTbspToOtherVolumeUnit'\n\nexport const convertFromGramsToVolume = (\n  unit: Unit,\n  grams: number,\n  tbspToGram: number\n): number => {\n  const tbsp = grams / tbspToGram\n  return mapTbspToOtherVolumeUnit(unit, tbsp)\n}\n","import { Unit } from '../../../constants/units'\n\nexport const convertFromGramsToWeight = (unit: Unit, grams: number): number => {\n  if (unit === 'LBS') {\n    return grams / 453\n  } else if (unit === 'OZ') {\n    return (grams / 453) * 16\n  } else {\n    return grams\n  }\n}\n","import { countUnits, volumeUnits, weightUnits } from '../../../constants/units'\nimport { Unit } from '../../../constants/units'\nimport { convertFromGramsToCount } from './convertFromGramsToCount'\nimport { convertFromGramsToVolume } from './convertFromGramsToVolume'\nimport { convertFromGramsToWeight } from './convertFromGramsToWeight'\n\nexport const convertFromGrams = (\n  grams: number,\n  unit: Unit,\n  countToGram: number | null | undefined,\n  tbspToGram: number | null | undefined,\n  servingPerContainer: number | null | undefined\n) => {\n  const isVolume = volumeUnits.includes(unit)\n  const isWeight = weightUnits.includes(unit)\n  const isCount = countUnits.includes(unit)\n\n  if (isVolume && tbspToGram) {\n    return convertFromGramsToVolume(unit, grams, tbspToGram)\n  } else if (isWeight) {\n    return convertFromGramsToWeight(unit, grams)\n  } else if (isCount && countToGram) {\n    return convertFromGramsToCount(\n      grams,\n      unit,\n      countToGram,\n      servingPerContainer\n    )\n    // The base case. Should never fire.\n  } else {\n    return grams\n  }\n}\n","import { volumeUnits } from '../../../constants/units'\nimport { Unit } from '../../../constants/units'\nimport { convertFromGrams } from './convertFromGrams'\nimport { convertToGrams } from './convertToGrams'\nimport { mapOtherVolumeUnitToTbsp } from './mapOtherVolumeUnitToTbsp'\nimport { mapTbspToOtherVolumeUnit } from './mapTbspToOtherVolumeUnit'\n\nexport const convertFromUnitToNewUnit = (\n  oldAmount: number,\n  oldUnit: Unit,\n  newUnit: Unit,\n  countToGram: number | null | undefined,\n  tbspToGram: number | null | undefined,\n  countToTbsp: number | null | undefined,\n  servingPerContainer: number | null | undefined\n) => {\n  // The edge cases\n  // In which we cannot convert from X to gram to X\n\n  const volumeToVolume =\n    volumeUnits.includes(oldUnit) && volumeUnits.includes(newUnit)\n  const countToContainer = oldUnit === 'COUNT' && newUnit === 'CONTAINER'\n  const containerToCount = oldUnit === 'CONTAINER' && newUnit === 'COUNT'\n  const countToVolume = oldUnit === 'COUNT' && volumeUnits.includes(newUnit)\n  const volumeToCount = volumeUnits.includes(oldUnit) && newUnit === 'COUNT'\n  const containerToVolume =\n    oldUnit === 'CONTAINER' && volumeUnits.includes(newUnit)\n  const volumeToContainer =\n    volumeUnits.includes(oldUnit) && newUnit === 'CONTAINER'\n\n  if (volumeToVolume) {\n    const tbsp = mapOtherVolumeUnitToTbsp(oldUnit, oldAmount)\n    return mapTbspToOtherVolumeUnit(newUnit, tbsp)\n  } else if (countToContainer && servingPerContainer) {\n    return oldAmount / servingPerContainer\n  } else if (containerToCount && servingPerContainer) {\n    return oldAmount * servingPerContainer\n  } else if (countToVolume && countToTbsp) {\n    const tbsp = oldAmount * countToTbsp\n    return mapTbspToOtherVolumeUnit(newUnit, tbsp)\n  } else if (volumeToCount && countToTbsp) {\n    const tbsp = mapOtherVolumeUnitToTbsp(oldUnit, oldAmount)\n    return tbsp / countToTbsp\n  } else if (containerToVolume && countToTbsp && servingPerContainer) {\n    const count = oldAmount * servingPerContainer\n    const tbsp = count * countToTbsp\n    return mapTbspToOtherVolumeUnit(newUnit, tbsp)\n  } else if (volumeToContainer && countToTbsp && servingPerContainer) {\n    const tbsp = mapOtherVolumeUnitToTbsp(oldUnit, oldAmount)\n    const count = tbsp / countToTbsp\n    return count / servingPerContainer\n  } else {\n    const grams = convertToGrams(\n      oldAmount,\n      oldUnit,\n      countToGram,\n      tbspToGram,\n      countToTbsp,\n      servingPerContainer\n    )\n\n    // The happy path\n    // In which we can convert from X to gram to X\n\n    return convertFromGrams(\n      grams,\n      newUnit,\n      countToGram,\n      tbspToGram,\n      servingPerContainer\n    )\n  }\n}\n","import { Unit } from '../../../constants/units'\nimport { Ingredient } from '../../../models/ingredient'\nimport { Log } from '../../../models/log'\nimport { convertFromUnitToNewUnit } from './convertFromUnitToNewUnit'\n\n/** Given an amount in grams, convert that amount to match the unit passed into the function.\n *\n * For example, convert 450g and the new unit of count, convert the amount to 2.\n */\nexport const getAmountFromNewUnit = (\n  item: Log | Ingredient,\n  oldAmount: number,\n  oldUnit: Unit,\n  newUnit: Unit\n): number => {\n  // Conversion factors\n  const countToGram =\n    item.type === 'log'\n      ? item.logToFood?.countToGram\n      : item?.ingredientToFood?.countToGram\n  const tbspToGram =\n    item.type === 'log'\n      ? item.logToFood?.tbspToGram\n      : item?.ingredientToFood?.tbspToGram\n  const countToTbsp =\n    item.type === 'log'\n      ? item.logToFood?.countToTbsp\n      : item?.ingredientToFood?.countToTbsp\n  const servingPerContainer =\n    item.type === 'log'\n      ? item.logToFood?.servingPerContainer\n      : item?.ingredientToFood?.servingPerContainer\n\n  const newAmount = convertFromUnitToNewUnit(\n    oldAmount,\n    oldUnit,\n    newUnit,\n    countToGram,\n    tbspToGram,\n    countToTbsp,\n    servingPerContainer\n  )\n\n  return newAmount\n}\n","import { Unit } from '../../../constants/units'\nimport { prep } from '../../../helpers/prepareFractionalInputForSubmission'\nimport { convertItemToIngredient } from '../../item/helpers/convertItemToIngredient'\nimport { convertItemToLog } from '../../item/helpers/convertItemToLog'\nimport { CommonItem } from '../../item/types'\nimport { getAmountFromNewUnit } from '../../macros/helpers/getAmountFromNewUnit'\n\nexport const updateUnit = (\n  item: CommonItem,\n  localAmount: string,\n  localUnit: Unit,\n  newUnit: Unit,\n  convertBetweenUnits: boolean\n) => {\n  const { amount, type } = item\n\n  // If the type is not log it must be ingredient\n  const element =\n    type === 'log'\n      ? convertItemToLog(item, amount)\n      : convertItemToIngredient(item, amount)\n\n  const newAmount = convertBetweenUnits\n    ? getAmountFromNewUnit(\n        element,\n        prep(localAmount) || element.amount,\n        localUnit,\n        newUnit\n      )\n    : prep(localAmount) || element.amount\n\n  return { newAmount: String(newAmount), newUnit: newUnit }\n}\n","import { Unit } from '../../../constants/units'\nimport { CommonItem } from '../../item/types'\nimport { renderUnitComponent } from '../../list/helpers/renderUnitComponent'\nimport { updateUnit } from '../helpers/updateUnit'\n\ntype props = {\n  item: CommonItem\n  localUnit: Unit\n  localAmount: string\n  setLocalAmount: (amount: string) => void\n  setLocalUnit: (unit: Unit) => void\n  convertBetweenUnits: boolean\n}\nexport const UnitInput: React.FC<props> = ({\n  convertBetweenUnits,\n  item,\n  localAmount,\n  localUnit,\n  setLocalAmount,\n  setLocalUnit,\n}) => {\n  const { childRecipe, food, id, recipe } = item\n  return renderUnitComponent(\n    id,\n    localUnit,\n    food || recipe || childRecipe,\n    (id: string, unit: Unit) => {\n      const { newAmount, newUnit } = updateUnit(\n        item,\n        localAmount,\n        localUnit,\n        unit,\n        convertBetweenUnits\n      )\n      setLocalAmount(newAmount)\n      setLocalUnit(newUnit)\n    }\n  )\n}\n","import { Unit } from '../../../constants/units'\nimport { handleError } from '../../../helpers/handleError'\nimport { prep } from '../../../helpers/prepareFractionalInputForSubmission'\nimport { Log, Meal } from '../../../models/log'\nimport { AllEvents } from '../../../store/store'\nimport { Dispatch } from '../../../store/types'\nimport { CommonItem, OnUpdateItem } from '../../item/types'\nimport { logOrIngredientUpdateError } from '../../list/Log/LogItem'\n\nexport const submitItem = (\n  item: CommonItem,\n  newAmount: string,\n  newUnit: Unit | null,\n  consumed: boolean | null,\n  newMeal: Meal | null,\n  dispatch: Dispatch<AllEvents>,\n  onUpdate: OnUpdateItem | null\n) => {\n  const amount = prep(newAmount)\n  const { id, type } = item\n  if (onUpdate) {\n    if (type === 'log') {\n      // If the ItemType === log, the return type of onUpdate is a Promise\n      // And we should execute code according to success or failure\n      type Result = Promise<string | Log>\n      const result = onUpdate(\n        id,\n        newUnit,\n        amount,\n        consumed,\n        newMeal,\n        dispatch\n      ) as Result\n      result\n        .then(() => {\n          dispatch('closeItemModal')\n        })\n        .catch((error) => {\n          if (logOrIngredientUpdateError.includes(error)) {\n            // Do nothing, the error is handled on the client\n          } else {\n            handleError(error, { showModal: false })\n          }\n        })\n    } else {\n      // For any other ItemType the event is synchronous\n      // Check CommonItem for the whole description\n      onUpdate(id, newUnit, amount, null, null, dispatch)\n      dispatch('closeItemModal')\n    }\n  }\n}\n","import React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport { Unit } from '../../constants/units'\nimport { round } from '../../helpers/round'\nimport { Profile } from '../../models/profile'\nimport { AllEvents } from '../../store/store'\nimport { Dispatch } from '../../store/types'\nimport { FractionInput } from '../fraction-input/FractionInput'\nimport { createDefaultItem } from '../item/helpers/createDefaultItem'\nimport { CommonItem } from '../item/types'\nimport { MealInput } from '../meal-input/MealInput'\nimport { Select } from '../select/Select'\nimport { Meta } from './components/Meta'\nimport { SubmitButton } from './components/SubmitButton'\nimport { UnitInput } from './components/UnitInput'\nimport { submitItem } from './helpers/submitItem'\n\ntype props = {\n  profile: Profile\n  item: CommonItem | undefined\n}\n\nexport const ItemModal: React.FC<props> = ({ item, profile }) => {\n  const { dispatch }: { dispatch: Dispatch<AllEvents> } = useStoreon()\n  const { convertBetweenUnits, enablePlanning } = profile\n  // Extract information from props\n  const itemToUse =\n    item === undefined ? createDefaultItem(enablePlanning) : item\n  const { amount, barcode, consumed, meal, onUpdate, unit } = itemToUse\n\n  // Create the local form state\n  const [localUnit, setLocalUnit] = React.useState(unit)\n  const [localMeal, setLocalMeal] = React.useState(meal)\n\n  const [localAmount, setLocalAmount] = React.useState(\n    amount ? String(round(amount, 2)) : ''\n  )\n  // Create the local refs\n  const amountRef = React.useRef<HTMLInputElement>(null)\n\n  React.useEffect(() => {\n    // Focus the amount input when the item modal is spawned\n    amountRef.current?.focus()\n  }, [amountRef])\n\n  return (\n    <form\n      className=\"fcc mw600 mt30\"\n      onSubmit={(event) => {\n        event.preventDefault()\n        submitItem(\n          itemToUse,\n          localAmount,\n          localUnit,\n          consumed,\n          localMeal,\n          dispatch,\n          onUpdate\n        )\n      }}\n    >\n      {/* Meta */}\n      <Meta item={itemToUse} />\n\n      {/* Amount input  */}\n      {typeof amount === 'number' && (\n        <FractionInput\n          inputRef={amountRef}\n          value={localAmount}\n          setValue={setLocalAmount}\n          placeholder={'Enter amount...'}\n        />\n      )}\n      {/* Unit input */}\n      {unit && localUnit && (\n        <div className=\"w100 mt10 mb10\">\n          {barcode ? (\n            <Select\n              focus={false}\n              currentOption={localUnit}\n              optionDictionary={[\n                { COUNT: 'SERVING', GRAM: 'GRAM' } as Record<Unit, string>,\n              ]}\n              onChange={(newUnit: Unit) => {\n                setLocalUnit(newUnit)\n              }}\n            />\n          ) : (\n            <UnitInput\n              item={itemToUse}\n              localAmount={localAmount}\n              localUnit={localUnit}\n              setLocalAmount={setLocalAmount}\n              setLocalUnit={setLocalUnit}\n              convertBetweenUnits={convertBetweenUnits}\n            />\n          )}\n        </div>\n      )}\n\n      {meal && localMeal && profile.enablePlanning && (\n        <MealInput meal={localMeal} setMeal={setLocalMeal} />\n      )}\n\n      {/* Submit button */}\n      {amount && unit && <SubmitButton submit={true} />}\n    </form>\n  )\n}\n","import React from 'react'\nimport { Food } from '../../../models/food'\nimport { List } from '../List/List'\n\ntype props = {\n  foods: Food[]\n}\n\nexport const FoodList: React.FC<props> = ({ foods }) => {\n  const customFoods = foods\n    .filter((food) => food.foodToProfile?.authId)\n    .sort((a, b) => a.name.localeCompare(b.name))\n  return (\n    <List\n      purpose=\"food-list\"\n      items={customFoods}\n      searchable={true}\n      paginate={true}\n      updateItem={null}\n      deleteItem={null}\n    />\n  )\n}\n","import React from 'react'\nimport { Recipe } from '../../../models/recipe'\nimport { List } from '../List/List'\n\ntype props = {\n  recipes: Recipe[]\n}\n\nexport const RecipeList: React.FC<props> = ({ recipes }) => {\n  const recipesToUse = recipes.sort((a, b) => a.name.localeCompare(b.name))\n  return (\n    <List\n      purpose=\"recipe-list\"\n      items={recipesToUse}\n      searchable={true}\n      paginate={true}\n      updateItem={null}\n      deleteItem={null}\n    />\n  )\n}\n","export default {\"src\":\"/_next/static/media/logout.b0633833.svg\",\"height\":683,\"width\":683,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/review.3008f83d.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/settings.c6fd6229.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\nimport React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport CustomFood from '../../assets/common/food.svg'\nimport Logout from '../../assets/common/logout.svg'\nimport Mortarboard from '../../assets/common/mortarboard.svg'\nimport CustomRecipe from '../../assets/common/recipe.svg'\nimport Feedback from '../../assets/common/review.svg'\nimport Settings from '../../assets/common/settings.svg'\nimport { logout } from '../../helpers/logout'\nimport { NavbarEvents, NavbarState } from '../../store/navbar/types'\nimport { Dispatch } from '../../store/types'\nimport { Image } from '../image/Image'\n\nexport const Menu: React.FC = () => {\n  const {\n    dispatch,\n    navbar,\n  }: {\n    dispatch: Dispatch<keyof NavbarEvents>\n    navbar: NavbarState\n  } = useStoreon('navbar')\n\n  const buttonToFocus = React.useRef<HTMLButtonElement>(null)\n\n  // Focus on the first button of the sidebar when spawned\n  React.useEffect(() => {\n    if (\n      buttonToFocus.current &&\n      navbar.menuVisibility === true &&\n      window.innerWidth > 1024\n    ) {\n      buttonToFocus.current?.focus()\n    }\n  }, [navbar.menuVisibility])\n\n  const sidebar = css`\n    margin: 10px auto;\n    width: 90%;\n  `\n\n  const section = css`\n    margin-top: 15px;\n    > div {\n      margin: 15px 0;\n      &:first-of-type {\n        margin-top: 5px;\n      }\n    }\n    > button,\n    > a.button {\n      font-size: 0.95rem;\n      justify-content: flex-start;\n      width: 100%;\n\n      img {\n        margin-left: 5px;\n        margin-right: 15px;\n      }\n    }\n  `\n\n  return (\n    <div id=\"Sidebar\" css={sidebar} className={`fcs`}>\n      <div css={section} className={`w100`}>\n        <div>Create</div>\n\n        <button\n          id=\"openFoodModal\"\n          ref={buttonToFocus}\n          onClick={() => {\n            dispatch('openFoodModal')\n          }}\n        >\n          <Image\n            width={35}\n            height={35}\n            alt=\"Apple with pencil\"\n            className=\"icon\"\n            src={CustomFood}\n          />\n          <div className=\"ml15\">Foods</div>\n        </button>\n\n        <button\n          id=\"openRecipeModal\"\n          onClick={() => {\n            dispatch('openRecipeModal')\n          }}\n        >\n          <Image\n            alt=\"Eggs and bacon with pencil\"\n            className=\"icon\"\n            width={35}\n            height={35}\n            src={CustomRecipe}\n          />\n          <div className=\"ml15\">Recipes</div>\n        </button>\n      </div>\n\n      <div css={section} className={`w100`}>\n        <div>Learn</div>\n        <button\n          onClick={() => {\n            window.open('https://cleanslate.sh/curriculum')\n          }}\n        >\n          <Image\n            width={35}\n            height={35}\n            alt=\"Graduation cap\"\n            className=\"icon\"\n            src={Mortarboard}\n          />\n          <div className=\"ml15\">Curriculum</div>\n        </button>\n      </div>\n\n      <div css={section} className={`w100`}>\n        <div>Other</div>\n\n        <button\n          id=\"openSettingsModal\"\n          onClick={() => {\n            dispatch('openSettingsModal')\n          }}\n        >\n          <Image\n            width={35}\n            height={35}\n            alt=\"Cog\"\n            className=\"icon\"\n            src={Settings}\n          />\n          <div className=\"ml15\">Settings</div>\n        </button>\n\n        <button\n          id=\"openInformationModal\"\n          onClick={() => {\n            dispatch(\n              'openInformationModal',\n              <div>\n                Got something to share? Perhaps some feedback or a bug? Awesome!\n                We collect and track all feedback on GitHub.com.\n                <br />\n                <br />\n                <a\n                  target=\"_blank\"\n                  href=\"https://github.com/paulzakin/cleanslate/issues/new/choose\"\n                  rel=\"noreferrer\"\n                >\n                  Go to GitHub.com\n                </a>{' '}\n                and create a free account. Then, create an Issue!\n              </div>\n            )\n          }}\n        >\n          <Image\n            width={35}\n            height={35}\n            alt=\"Letter\"\n            className=\"icon\"\n            src={Feedback}\n          />\n          <div className=\"ml15\">Feedback</div>\n        </button>\n\n        <button\n          id=\"logout\"\n          onClick={() => {\n            logout()\n          }}\n        >\n          <Image\n            width={35}\n            height={35}\n            alt=\"Door openings\"\n            className=\"icon\"\n            src={Logout}\n          />\n          <div className=\"ml15\">Logout</div>\n        </button>\n      </div>\n    </div>\n  )\n}\n","export default {\"src\":\"/_next/static/media/return-arrow.2048e808.svg\",\"height\":16,\"width\":16,\"blurWidth\":0,\"blurHeight\":0};","/** For a given animation name, like \"fadeOut\", return how long the animation duration should be in milliseconds\n * both as a string (e.g. 0.5s) and as a number in milliseconds (e.g. 500)\n */\nexport const getAnimationDuration = (\n  animationName?: string\n): [string, number] => {\n  // Disable the fadeIn and fadeOut animation on anything bigger than an iPad Pro\n  if (['fadeIn', 'fadeOut', 'fadeOutHard'].includes(animationName || '')) {\n    return ['0s', 0]\n  } else {\n    // If the animation name is included but not matched, assumed the duration is 0.5s\n    return ['0.5s', 500]\n  }\n}\n","export const sidebarPresent = () => window.innerWidth <= 1024\n","import { css } from '@emotion/react'\nimport { SerializedStyles } from '@emotion/react'\nimport FocusTrap from 'focus-trap-react'\nimport React from 'react'\nimport ReturnArrow from '../../assets/common/return-arrow.svg'\nimport { Modals } from '../../constants/modals'\nimport { getAnimationDuration } from '../../helpers/getAnimationDuration'\nimport { isMobile } from '../../helpers/isMobile'\nimport { colors } from '../../theme'\nimport { xlg } from '../../theme'\nimport { Image } from '../image/Image'\nimport { sidebarPresent } from './helpers/sidebarPresent'\n\ntype props = {\n  id?: string\n  styles?: SerializedStyles\n  dialogStyles?: SerializedStyles\n  children: React.ReactNode\n  visible: boolean\n  closeIcon?: boolean\n  inTransition?: string\n  outTransition?: string\n  shellOutTransition?: string\n  duration?: string\n  // This function is executed when the modal is closed\n  closeModal: () => void\n  name: Modals\n}\n\nexport const Modal: React.FC<props> = (props) => {\n  const {\n    children,\n    closeIcon,\n    closeModal,\n    dialogStyles,\n    duration,\n    inTransition,\n    name,\n    outTransition,\n    shellOutTransition,\n    styles,\n    visible,\n  } = props\n\n  // Ref\n  const modalRef = React.useRef<HTMLDivElement>(null)\n  const closeButton = React.useRef<HTMLButtonElement>(null)\n\n  // State\n  const [shouldRender, updateShouldRender] = React.useState(visible)\n\n  // Animation configuration\n  const IT = inTransition || (sidebarPresent() ? 'slideInLeft' : 'fadeIn')\n  const OUT = outTransition || (sidebarPresent() ? 'slideOutLeft' : 'fadeOut')\n  const d = duration || getAnimationDuration(visible ? IT : OUT)[0]\n\n  React.useEffect(() => {\n    visible && updateShouldRender(true)\n  }, [visible])\n\n  const modalStyling = css`\n    animation-duration: ${d};\n    background: linear-gradient(rgba(1, 1, 1, 0.5), rgba(1, 1, 1, 0.5));\n    min-height: 100%;\n    > div:first-of-type {\n      animation-duration: ${d};\n      background-color: white;\n      border-radius: 5px;\n      margin: 20px auto;\n      max-height: 80%;\n      max-width: 900px;\n      padding-bottom: 20px;\n      width: 95%;\n    }\n\n    @media (max-width: ${xlg}px) {\n      > div:first-of-type {\n        border-radius: 0;\n        height: auto;\n        margin: 0;\n        max-height: none;\n        max-width: 100%;\n        min-height: 100%;\n        padding-bottom: 20px;\n        padding-top: 10px;\n        width: 100%;\n      }\n    }\n  `\n\n  const closeButtonStyling = css`\n    background-color: white;\n    border-color: transparent;\n    border-radius: 5px 0 0 0;\n    color: white;\n    flex-shrink: 0;\n    left: 5px;\n    margin-right: auto;\n    margin-top: 15px;\n    padding: 0 10px;\n    position: relative;\n    width: 100%;\n\n    &:active,\n    &:hover,\n    &:focus {\n      background-color: white;\n    }\n\n    @media (min-width: ${xlg}px) {\n      &:active,\n      &:hover,\n      &:focus {\n        > img {\n          outline: 1px solid ${colors.mediumgrey};\n        }\n      }\n    }\n  `\n  const backgroundStyling = css`\n    left: 0;\n    min-height: 100%;\n    position: absolute;\n    top: 0;\n    width: 100vw;\n    z-index: -1;\n  `\n\n  const modalComponent = shouldRender ? (\n    <div\n      id={`modal-${name}`}\n      css={[modalStyling, styles]}\n      onAnimationEnd={() => !visible && updateShouldRender(false)}\n      className={`absolute w100 h100 fcc scroll z1 animate ${\n        visible ? '' : shellOutTransition || 'fadeOut'\n      }`}\n    >\n      <div\n        role=\"dialog\"\n        ref={modalRef}\n        css={dialogStyles}\n        className={`\n            animate scroll fcs\n            ${visible === true ? IT : OUT}\n          `}\n      >\n        {(closeIcon === undefined || closeIcon) && (\n          <button\n            aria-label=\"close\"\n            css={closeButtonStyling}\n            className={`fr ultra`}\n            ref={closeButton}\n            onClick={() => {\n              closeModal()\n            }}\n            type=\"button\"\n          >\n            <Image\n              height={30}\n              width={20}\n              alt=\"arrow point left\"\n              src={ReturnArrow}\n            />\n          </button>\n        )}\n        {children}\n      </div>\n      {/* This works because clicks do not propagate to the element below */}\n      {/* The height is dynamically set with JavaScript depending on the height of the modal */}\n      <div\n        onClick={() => {\n          closeModal()\n        }}\n        css={backgroundStyling}\n      ></div>\n    </div>\n  ) : (\n    <div />\n  )\n\n  // Activating the focus trap on mobile causes a whole bunch of problems!\n  if (isMobile()) {\n    return modalComponent\n  } else {\n    return shouldRender ? (\n      <FocusTrap>{modalComponent}</FocusTrap>\n    ) : (\n      modalComponent\n    )\n  }\n}\n","export default {\"src\":\"/_next/static/media/chrome-share.3516c7ff.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/safari-share.cbaba215.svg\",\"height\":169,\"width\":120,\"blurWidth\":0,\"blurHeight\":0};","export default {\"src\":\"/_next/static/media/logo-circle.7c4aefe6.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","import { css } from '@emotion/react'\nimport ChromeShare from '../../assets/common/chrome-share.svg'\nimport SafariShare from '../../assets/common/safari-share.svg'\nimport Logo from '../../assets/logo-circle.svg'\nimport { getDispatch } from '../../helpers/getDispatch'\nimport { isMobileSafari } from '../../helpers/isMobileSafari'\nimport { updateProfileOnCloud } from '../../helpers/profile/updateProfileOnCloud'\nimport { Profile } from '../../models/profile'\nimport { Image } from '../image/Image'\n\ntype props = { profile: Profile }\nexport const PWAPrompt: React.FC<props> = ({ profile }) => {\n  const dispatch = getDispatch()\n\n  return (\n    <div className=\"fcc\">\n      <Image width={100} height={100} src={Logo} alt=\"Logo\" />\n      <h2\n        css={css`\n          color: #111;\n          font-size: 1.6rem;\n          font-weight: 900;\n        `}\n        className=\"mt20\"\n      >\n        Clean Slate\n      </h2>\n      <p\n        css={css`\n          font-size: 1.1rem;\n          max-width: 400px;\n          text-align: center;\n        `}\n      >\n        Add this app to your homescreen for easy access and an app-like\n        experience.\n      </p>\n      <div\n        css={css`\n          font-size: 1.1rem;\n          width: 100%;\n        `}\n        className=\"frc mt10 mb20\"\n      >\n        Tap{' '}\n        {isMobileSafari() ? (\n          <div className=\"ml10 mr10\">\n            <Image\n              width={25}\n              height={25}\n              src={SafariShare}\n              alt=\"Safari share button\"\n            />\n          </div>\n        ) : (\n          <div className=\"ml10 mr10\">\n            <Image\n              width={25}\n              height={25}\n              src={ChromeShare}\n              alt=\"Chrome share button\"\n            />\n          </div>\n        )}{' '}\n        then {`\"`}Add to Homescreen{`\"`}\n      </div>\n      <div>\n        <button\n          className=\"purple bold mt10\"\n          onClick={() => {\n            const variables = {\n              id: profile.id,\n              set: {\n                hidePWAPrompt: true,\n              },\n            }\n            updateProfileOnCloud(variables, () => {\n              dispatch('closePWAPrompt')\n            })\n          }}\n        >\n          Hide this tip in the future\n        </button>\n      </div>\n    </div>\n  )\n}\n","import { QuickAddUnit } from '../../../constants/units'\nimport { addQuickLogToCloud } from '../../../helpers/log/addQuickLogToCloud'\nimport { DataEvents } from '../../../store/data/types'\nimport { EditorEvents } from '../../../store/editor/types'\nimport { NavbarEvents } from '../../../store/navbar/types'\nimport { Dispatch } from '../../../store/types'\n\nexport const addQuickAddLog = (\n  calories: number,\n  protein: number,\n  enablePlanning: boolean,\n  dispatch: Dispatch<keyof NavbarEvents | keyof DataEvents | keyof EditorEvents>\n) => {\n  const variables = {\n    objects: [] as {\n      amount: number\n      unit: QuickAddUnit\n    }[],\n  }\n  // Only add the protein log if they actually entered a value for protein!\n  if (protein > 0) {\n    variables.objects.push({\n      amount: protein,\n      unit: 'PROTEIN' as QuickAddUnit,\n    })\n  }\n\n  if (calories > 0) {\n    variables.objects.push({\n      amount: calories,\n      unit: 'CALORIE' as QuickAddUnit,\n    })\n  }\n  addQuickLogToCloud(variables, enablePlanning, () => {\n    dispatch('closeQuickAddModal')\n  })\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport toast from 'react-hot-toast'\nimport { useStoreon } from 'storeon/react'\nimport { Profile } from '../../models/profile'\nimport { DataEvents } from '../../store/data/types'\nimport { EditorEvents } from '../../store/editor/types'\nimport { NavbarEvents, NavbarState } from '../../store/navbar/types'\nimport { Dispatch } from '../../store/types'\nimport { colors } from '../../theme'\nimport { SubmitButton } from '../item-modal/components/SubmitButton'\nimport { addQuickAddLog } from '../standard-adder/helpers/addQuickAddLog'\n\ntype props = { profile: Profile }\nexport const QuickAdder: React.FC<props> = ({ profile }) => {\n  const { enablePlanning } = profile\n  const [calories, setCalories] = React.useState(null as number | string | null)\n  const [protein, setProtein] = React.useState(null as number | string | null)\n\n  const inputToFocus = React.useRef<HTMLInputElement>(null)\n\n  const {\n    dispatch,\n    navbar,\n  }: {\n    dispatch: Dispatch<\n      keyof NavbarEvents | keyof DataEvents | keyof EditorEvents\n    >\n    navbar: NavbarState\n  } = useStoreon('navbar')\n\n  // Focus on the calorie input when it is spawned\n  React.useEffect(() => {\n    // Clear the numbers when the components mounts and unmounts\n    setCalories(null)\n    setProtein(null)\n\n    if (inputToFocus.current && navbar.quickAddModalVisibility) {\n      inputToFocus.current?.focus()\n    }\n  }, [navbar.quickAddModalVisibility])\n\n  const form = css`\n    border-radius: 0;\n    margin: 0;\n  `\n  const input = css`\n    border: 0;\n    border-radius: 0;\n    height: 60px;\n    &:focus {\n      font-weight: 400;\n    }\n    &:first-of-type {\n      border-right: 1px solid ${colors.lightgrey};\n    }\n    &:nth-of-type(2) {\n      padding-left: 30px;\n    }\n  `\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault()\n        if (!calories && !protein) {\n          toast.error('You must include a value!')\n        } else {\n          addQuickAddLog(\n            Number(calories),\n            Number(protein),\n            enablePlanning,\n            dispatch\n          )\n        }\n      }}\n      css={form}\n      className={`frc w100`}\n    >\n      <input\n        autoCapitalize={'off'}\n        autoComplete={'off'}\n        autoCorrect={'off'}\n        css={input}\n        className={`w50`}\n        id=\"calories\"\n        inputMode=\"decimal\"\n        onChange={(event) => {\n          setCalories(event.target.value)\n        }}\n        placeholder=\"Calories\"\n        ref={inputToFocus}\n        step=\"any\"\n        type=\"number\"\n        value={calories || ''}\n      />\n      <input\n        autoCapitalize={'off'}\n        autoComplete={'off'}\n        autoCorrect={'off'}\n        css={input}\n        className={`w50`}\n        id=\"protein\"\n        inputMode=\"decimal\"\n        onChange={(event) => {\n          setProtein(event.target.value)\n        }}\n        placeholder=\"Protein\"\n        step=\"any\"\n        type=\"number\"\n        value={protein || ''}\n      />\n\n      <SubmitButton\n        onClick={() => {}}\n        submit={true}\n        css={css`\n          border-radius: 0;\n          height: 60px;\n          margin-top: 0;\n        `}\n      />\n    </form>\n  )\n}\n","import { QuickAddUnit } from '../../../../constants/units'\nimport { handleError } from '../../../../helpers/handleError'\nimport { addQuickLogToCloud } from '../../../../helpers/log/addQuickLogToCloud'\nimport { deleteLogsOnCloud } from '../../../../helpers/log/deleteLogsOnCloud'\nimport { Log } from '../../../../models/log'\n\nexport const updateUnitLogsOnCloud = async (\n  logs: Log[],\n  amount: number,\n  unit: QuickAddUnit,\n  enablePlanning: boolean,\n  onSuccess: () => void\n) => {\n  try {\n    const logsToDelete = logs\n      .filter((log) => log.unit === unit)\n      .map((log) => log.id)\n    await deleteLogsOnCloud(logsToDelete, () => {})\n    await addQuickLogToCloud(\n      { objects: [{ amount, unit }] },\n      enablePlanning,\n      () => {}\n    )\n    onSuccess()\n  } catch (error) {\n    handleError(error as Error)\n  }\n}\n","import React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport { QuickAddUnit } from '../../constants/units'\nimport { Log } from '../../models/log'\nimport { Profile } from '../../models/profile'\nimport { AllEvents } from '../../store/store'\nimport { Dispatch } from '../../store/types'\nimport { FractionInput } from '../fraction-input/FractionInput'\nimport { createDefaultItem } from '../item/helpers/createDefaultItem'\nimport { CommonItem } from '../item/types'\nimport { Meta } from '../item-modal/components/Meta'\nimport { SubmitButton } from '../item-modal/components/SubmitButton'\nimport { updateUnitLogsOnCloud } from '../list/Unit/helpers/updateUnitLogsOnCloud'\n\ntype props = { profile: Profile; logs: Log[]; item: CommonItem | undefined }\nexport const UnitModal: React.FC<props> = ({ item, logs, profile }) => {\n  const { dispatch }: { dispatch: Dispatch<AllEvents> } = useStoreon()\n  const { enablePlanning } = profile\n  const itemToUse =\n    item === undefined ? createDefaultItem(enablePlanning) : item\n  const [amount, updateAmount] = React.useState(itemToUse.amount || '')\n\n  // Create the local refs\n  const inputRef = React.useRef<HTMLInputElement>(null)\n  React.useEffect(() => {\n    // Focus the amount input when the unit modal is spawned\n    inputRef.current?.focus()\n  }, [inputRef])\n\n  return (\n    <form\n      className=\"fcc mw600 mt30\"\n      onSubmit={(event) => {\n        event.preventDefault()\n        updateUnitLogsOnCloud(\n          logs,\n          Number(amount),\n          item?.unit as QuickAddUnit,\n          profile.enablePlanning,\n          () => {\n            dispatch('closeUnitModal')\n          }\n        )\n      }}\n    >\n      <Meta item={itemToUse} />\n      <FractionInput\n        className=\"mb30\"\n        value={amount}\n        setValue={updateAmount}\n        inputRef={inputRef}\n      />\n      <SubmitButton submit={true} />\n    </form>\n  )\n}\n","import { isMobile } from '../../helpers/isMobile'\nimport { sidebarPresent } from '../modal/helpers/sidebarPresent'\n\nexport const getOrderedModals = (\n  modalsToRender: JSX.Element[],\n  modals: readonly any[],\n  activeModals: readonly any[]\n) => {\n  const match = (name: string) =>\n    modalsToRender.find((modal) => modal.props.name === name)\n\n  // Map the string, name (e.g. sharedNavbar.alertVisibility) to the JSX modal\n  // Thereby preserving the modal order\n  const inactiveModals = modals.filter((modal) => !activeModals.includes(modal))\n  const showInactive = isMobile() || sidebarPresent()\n  const orderedModals = [\n    ...activeModals.map(match),\n    // We only need to render the inactive modals on mobile to preserve the transitions...\n    ...(showInactive ? inactiveModals.map(match) : []),\n  ]\n  return orderedModals\n}\n","import { css } from '@emotion/react'\nimport { xlg } from '../../theme'\n\nexport const getErrorStyling = () => css`\n  > div:first-of-type {\n    background: transparent !important;\n  }\n`\n\n// Make it so only the most recently active modal is visible...\nexport const modalContainerStyling = css`\n  @media (min-width: ${xlg + 1}px) {\n    > div > div {\n      opacity: 0 !important;\n    }\n    > div:last-child > div {\n      opacity: 1 !important;\n    }\n  }\n`\n","/* eslint-disable react/jsx-key */\nimport { css } from '@emotion/react'\nimport React from 'react'\nimport { useStoreon } from 'storeon/react'\nimport { modals } from '../../constants/modals'\nimport { getDispatch } from '../../helpers/getDispatch'\nimport { Food } from '../../models/food'\nimport { Log } from '../../models/log'\nimport { Profile } from '../../models/profile'\nimport { Recipe } from '../../models/recipe'\nimport { NavbarState } from '../../store/navbar/types'\nimport { BarcodeModal } from '../barcode-modal/BarcodeModal'\nimport { Error } from '../error/Error'\nimport { BodyFatPercentageForm } from '../forms/BodyFatPercentageForm/BodyFatPercentageForm'\nimport { CustomFoodForm } from '../forms/CustomFoodForm/CustomFoodForm'\nimport { ExerciseForm } from '../forms/ExerciseForm/ExerciseForm'\nimport { RecipeForm } from '../forms/RecipeForm/RecipeForm'\nimport { TargetForm } from '../forms/TargetForm/TargetForm'\nimport { Help } from '../help/Help'\nimport { InformationModal } from '../information-modal/InformationModal'\nimport { IngredientModal } from '../ingredient-modal/IngredientModal'\nimport { ItemModal } from '../item-modal/ItemModal'\nimport { FoodList } from '../list/Food/FoodList'\nimport { RecipeList } from '../list/Recipe/RecipeList'\nimport { Menu } from '../menu/Menu'\nimport { Modal } from '../modal/Modal'\nimport { PWAPrompt } from '../pwa-prompt/PWAPrompt'\nimport { QuickAdder } from '../quick-adder/QuickAdder'\nimport { Settings } from '../settings/Settings'\nimport { StandardAdder } from '../standard-adder/StandardAdder'\nimport { UnitModal } from '../unit-modal/UnitModal'\nimport { getOrderedModals } from './getOrderedModal'\nimport { getErrorStyling, modalContainerStyling } from './styling'\n\ntype props = {\n  profile: Profile\n  foods: Food[]\n  recipes: Recipe[]\n  logs: Log[]\n}\n\nconst Modals: React.FC<props> = ({ foods, logs, profile, recipes }) => {\n  const {\n    navbar,\n  }: {\n    navbar: NavbarState\n  } = useStoreon('navbar')\n\n  const dispatch = getDispatch()\n\n  const {\n    activeModals,\n    addIngredientModalVisibility,\n    barcodeModalVisibility,\n    bodyFatPercentageModalVisibility,\n    errorVisibility,\n    exerciseModalVisibility,\n    foodFormModalVisibility,\n    foodModalVisibility,\n    foodToUpdate,\n    helpModalVisibility,\n    Information,\n    informationModalVisibility,\n    itemModalVisibility,\n    itemToUpdate,\n    menuVisibility,\n    modalVisibility,\n    pwaPromptVisibility,\n    quickAddModalVisibility,\n    recipeFormModalVisibility,\n    recipeModalVisibility,\n    recipeToUpdate,\n    settingsModalVisibility,\n    targetModalVisibility,\n    unitModalVisibility,\n  } = navbar\n\n  const editorStyling = css`\n    justify-content: flex-start !important;\n    > div:first-of-type {\n      border-radius: 0 !important;\n      margin: 0 !important;\n      max-width: 100% !important;\n      padding: 0 !important;\n      top: 0 !important;\n      width: 100% !important;\n      min-height: auto !important;\n    }\n  `\n\n  const allModals = [\n    <Modal\n      styles={editorStyling}\n      closeIcon={false}\n      closeModal={() => {\n        dispatch('closeModal')\n      }}\n      inTransition={'slideInDown'}\n      outTransition={'fadeOutHard'}\n      name=\"navbar.modalVisibility\"\n      visible={modalVisibility}\n    >\n      <StandardAdder\n        profile={profile}\n        recipes={recipes}\n        foods={foods}\n        type=\"log\"\n      />\n    </Modal>,\n\n    <Modal\n      styles={editorStyling}\n      closeIcon={false}\n      closeModal={() => {\n        dispatch('closeQuickAddModal')\n      }}\n      inTransition={'slideInDown'}\n      outTransition={'fadeOutHard'}\n      name=\"navbar.quickAddModalVisibility\"\n      visible={quickAddModalVisibility}\n    >\n      <QuickAdder profile={profile} />\n    </Modal>,\n\n    // Sidebar\n    <Modal\n      closeModal={() => {\n        dispatch('closeMenu')\n      }}\n      visible={menuVisibility}\n      name=\"navbar.menuVisibility\"\n    >\n      <Menu />\n    </Modal>,\n\n    // Exercise-form\n    <Modal\n      closeModal={() => {\n        dispatch('closeExerciseModal')\n      }}\n      name=\"navbar.exerciseModalVisibility\"\n      visible={exerciseModalVisibility}\n    >\n      <ExerciseForm profile={profile} />\n    </Modal>,\n\n    // Barcode Modal\n    <Modal\n      styles={css`\n        > div {\n          max-width: 450px !important;\n        }\n      `}\n      closeModal={() => {\n        dispatch('closeBarcodeModal')\n      }}\n      name=\"navbar.barcodeModalVisibility\"\n      visible={barcodeModalVisibility}\n    >\n      <BarcodeModal\n        profile={profile}\n        type={recipeModalVisibility ? 'ingredient' : 'log'}\n      />\n    </Modal>,\n\n    // target-form\n    <Modal\n      closeModal={() => {\n        dispatch('closeTargetModal')\n      }}\n      name=\"navbar.targetModalVisibility\"\n      visible={targetModalVisibility}\n    >\n      <TargetForm profile={profile} />\n    </Modal>,\n\n    // Settings modal\n    <Modal\n      closeModal={() => {\n        dispatch('closeSettingsModal')\n      }}\n      name=\"navbar.settingsModalVisibility\"\n      visible={settingsModalVisibility}\n    >\n      <Settings profile={profile} />\n    </Modal>,\n\n    // body-composition-form\n    <Modal\n      closeModal={() => {\n        dispatch('closeBodyFatPercentageModal')\n      }}\n      name=\"navbar.bodyFatPercentageModalVisibility\"\n      visible={bodyFatPercentageModalVisibility}\n    >\n      <BodyFatPercentageForm />\n    </Modal>,\n\n    // food-form\n    <Modal\n      closeModal={() => {\n        dispatch('closeFoodModal')\n      }}\n      name=\"navbar.foodModalVisibility\"\n      visible={foodModalVisibility}\n    >\n      <div className=\"w100 h100 fcs expand\">\n        <button\n          id=\"openFoodFormModal\"\n          type=\"button\"\n          onClick={() => {\n            dispatch('openFoodFormModal', null)\n          }}\n          className=\"purple bold mb25\"\n        >\n          Add custom food\n        </button>\n        <div className=\"w90 h100 fcs expand\">\n          <FoodList foods={foods} />\n        </div>\n      </div>\n    </Modal>,\n\n    // recipe-form\n    <Modal\n      closeModal={() => {\n        dispatch('closeRecipeModal')\n      }}\n      name=\"navbar.recipeModalVisibility\"\n      visible={recipeModalVisibility}\n    >\n      <div className=\"w100 h100 fcs expand\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            dispatch('openRecipeFormModal', null)\n          }}\n          className=\"purple bold mb25\"\n        >\n          Add recipe\n        </button>\n        <div className=\"w90 h100 fcs expand\">\n          <RecipeList recipes={recipes} />\n        </div>\n      </div>\n    </Modal>,\n\n    // custom-recipe-form\n    <Modal\n      closeModal={() => {\n        const message =\n          'You may have unsaved changes that will be lost. Is that OK?'\n        if (window.confirm(message)) {\n          dispatch('closeRecipeFormModal')\n        }\n      }}\n      name=\"navbar.recipeFormModalVisibility\"\n      visible={recipeFormModalVisibility}\n    >\n      <RecipeForm\n        profile={profile}\n        foods={foods}\n        recipe={\n          recipes.filter((recipe) => {\n            return recipe.id === recipeToUpdate\n          })[0]\n        }\n      />\n    </Modal>,\n\n    <Modal // add ingredient modal\n      closeIcon={true}\n      closeModal={() => {\n        dispatch('closeAddIngredientModal')\n      }}\n      name=\"navbar.addIngredientModalVisibility\"\n      visible={addIngredientModalVisibility}\n    >\n      <IngredientModal profile={profile} recipes={recipes} foods={foods} />\n    </Modal>,\n\n    // custom-food-form\n    <Modal\n      closeModal={() => {\n        const message =\n          'You may have unsaved changes that will be lost. Is that OK?'\n        if (window.confirm(message)) {\n          dispatch('closeFoodFormModal')\n        }\n      }}\n      name=\"navbar.foodFormModalVisibility\"\n      visible={foodFormModalVisibility}\n    >\n      <CustomFoodForm\n        food={\n          foods.filter((food) => {\n            return food.id === foodToUpdate\n          })[0]\n        }\n      />\n    </Modal>,\n    <Modal // item-modal\n      id={'item-modal'}\n      closeIcon={true}\n      closeModal={() => {\n        dispatch('closeItemModal')\n      }}\n      name=\"navbar.itemModalVisibility\"\n      visible={itemModalVisibility}\n    >\n      <ItemModal item={itemToUpdate} profile={profile} />\n    </Modal>,\n    <Modal // unit-modal\n      id={'unit-modal'}\n      closeIcon={true}\n      closeModal={() => {\n        dispatch('closeUnitModal')\n      }}\n      name=\"navbar.unitModalVisibility\"\n      visible={unitModalVisibility}\n    >\n      <UnitModal profile={profile} item={itemToUpdate} logs={logs} />\n    </Modal>,\n    <Modal\n      closeModal={() => {\n        dispatch('closeHelpModal')\n      }}\n      name=\"navbar.helpModalVisibility\"\n      visible={helpModalVisibility}\n    >\n      <Help />\n    </Modal>,\n    <Modal\n      closeModal={() => {\n        dispatch('closeInformationModal')\n      }}\n      visible={informationModalVisibility}\n      name=\"navbar.informationModalVisibility\"\n    >\n      <InformationModal Information={Information} />\n    </Modal>,\n    <Modal\n      closeModal={() => {\n        dispatch('closeError')\n      }}\n      closeIcon={false}\n      key=\"navbar.errorVisibility\"\n      name=\"navbar.errorVisibility\"\n      styles={getErrorStyling()}\n      visible={errorVisibility}\n    >\n      <Error />\n    </Modal>,\n    <Modal\n      key=\"navbar.pwaPromptVisibility\"\n      name=\"navbar.pwaPromptVisibility\"\n      visible={pwaPromptVisibility}\n      closeModal={() => {\n        dispatch('closePWAPrompt')\n      }}\n    >\n      <PWAPrompt profile={profile} />\n    </Modal>,\n  ]\n\n  const modalsToRender = getOrderedModals(allModals, modals, activeModals)\n  return (\n    <div css={[modalContainerStyling]} className=\"z2\">\n      {modalsToRender\n        .filter((modal) => modal?.props.name)\n        .map((modal) => (\n          <div key={modal?.props.name}>{modal}</div>\n        ))}\n    </div>\n  )\n}\n\nexport default Modals\n","import { css } from '@emotion/react'\nimport React from 'react'\nimport { round } from '../../helpers/round'\nimport { Log } from '../../models/log'\nimport { defaultTargets, Profile } from '../../models/profile'\nimport { colors } from '../../theme'\nimport { calculateMacros } from '../macros/helpers/calculateMacros'\n\ntype props = {\n  profile: Profile\n  logs: Log[]\n}\n\nconst numbers = css`\n  margin: 0 auto;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  width: 100%;\n`\n\nconst number = css`\n  flex: 1;\n  margin-left: 10px;\n  &:last-child {\n    margin-left: 0;\n  }\n  > div {\n    border-radius: 5px;\n    font-size: 0.95rem;\n    height: 32px;\n    margin-left: 10px;\n    min-width: 40px;\n\n    div {\n      color: ${colors.black};\n      padding: 0px 7.5px;\n    }\n  }\n`\n\nconst check = css`\n  color: white !important;\n  font-size: 1.3rem;\n  position: relative;\n  display: inline-block;\n  margin-top: -1.5px;\n`\n\nexport const Numbers: React.FC<props> = (props) => {\n  const { logs, profile } = props\n  const countDown = profile.countDown\n\n  const [caloriesConsumed, proteinConsumed, exerciseDone] = calculateMacros(\n    logs\n  ).map((v) => Math.round(v))\n\n  let [calorieTarget, proteinTarget] = defaultTargets\n\n  calorieTarget = profile.calorieTarget\n  proteinTarget = profile.proteinTarget\n\n  const calorieDifference = calorieTarget + exerciseDone - caloriesConsumed\n  const proteinDifference = proteinTarget - proteinConsumed\n\n  const loading = proteinTarget === defaultTargets[1]\n  const hideCalories = loading || profile.showCalories === false\n\n  const calorieFree = ''\n\n  return (\n    <div id=\"numbers\" css={numbers}>\n      <div className=\"fr\">\n        <div id=\"TopBarCalories\" css={number} className={`frc`}>\n          Calories\n          <div className={`green fcc`}>\n            {hideCalories ? (\n              calorieFree\n            ) : (\n              <div>\n                {countDown ? (\n                  round(calorieDifference, 0)\n                ) : (\n                  <>\n                    {caloriesConsumed}\n                    <span\n                      css={css`\n                        margin: 0px 2px;\n                      `}\n                    >\n                      /\n                    </span>\n                    {calorieTarget + exerciseDone}\n                  </>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div id=\"TopBarProtein\" css={number} className={`frc`}>\n          Protein\n          <div\n            className={`fcc ${\n              proteinDifference <= 0 && countDown ? 'success' : 'blue'\n            }`}\n          >\n            {hideCalories ? (\n              calorieFree\n            ) : (\n              <div>\n                {countDown && proteinDifference <= 0 && (\n                  <div css={check}>✓</div>\n                )}\n\n                {countDown &&\n                  proteinDifference > 0 &&\n                  round(proteinDifference, 0)}\n\n                {!countDown && (\n                  <>\n                    {proteinConsumed}\n                    <span\n                      css={css`\n                        margin: 0px 2px;\n                      `}\n                    >\n                      /\n                    </span>\n                    {proteinTarget}\n                  </>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport React from 'react'\n\ntype props = {\n  children: React.ReactNode\n  height: number\n  onClick: () => void\n}\n\nexport const TopBar: React.FC<props> = ({ children, height, onClick }) => {\n  const topBar = css`\n    background-color: white;\n    border-bottom: 1px solid #eee;\n    cursor: pointer;\n    height: ${height}px;\n  `\n  return (\n    <div css={topBar} onClick={() => onClick()} className={`fcc z2`}>\n      {children}\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport { executeKeyboardShortcuts } from '../../helpers/executeShortcuts'\nimport { subscribeToProfile } from '../../helpers/profile/subscribeToProfile'\nimport { useData } from '../../hooks/useData'\nimport { useLogoutOtherTab } from '../../hooks/useLogoutOtherTab'\nimport { usePWAPrompt } from '../../hooks/usePWAPrompt'\nimport { useShortcuts } from '../../hooks/useShortcuts'\nimport { useStartTime } from '../../hooks/useStartTime'\nimport { useSubscription } from '../../hooks/useSubscription'\nimport { useUser } from '../../hooks/useUser'\nimport { Body } from '../body/Body'\nimport { BottomBar } from '../bottom-bar/BottomBar'\nimport { BottomBarButtons } from '../bottom-bar-buttons/BottomBarButtons'\nimport { LogList } from '../list/Log/LogList'\nimport { UnitList } from '../list/Unit/UnitList'\nimport Modals from '../modals/Modals'\nimport { Numbers } from '../numbers/Numbers'\nimport { TopBar } from '../top-bar/TopBar'\n\nexport const App = () => {\n  const { dispatch, foods, logs, offline, profile, recipes } = useData()\n  const user = useUser()\n\n  useStartTime()\n  useShortcuts(executeKeyboardShortcuts)\n  useSubscription([subscribeToProfile], user, offline, profile)\n  usePWAPrompt(profile, dispatch)\n  useLogoutOtherTab()\n\n  const navbarHeight = 65\n  const footerHeight = 65\n\n  return (\n    <div\n      id=\"app\"\n      className=\"no-scroll\"\n      suppressHydrationWarning={true}\n      css={css`\n        #macros {\n          span {\n            display: ${profile.showCalories ? 'inline-block' : 'none'};\n          }\n        }\n      `}\n    >\n      <TopBar\n        height={navbarHeight}\n        onClick={() =>\n          profile.showCalories ? dispatch('openTargetModal') : undefined\n        }\n      >\n        <Numbers profile={profile} logs={logs} />\n      </TopBar>\n\n      <Body navbar={navbarHeight} footer={footerHeight} profile={profile}>\n        <UnitList logs={logs} />\n        <LogList profile={profile} logs={logs} foods={foods} />\n      </Body>\n\n      <BottomBar height={footerHeight}>\n        <BottomBarButtons profile={profile} />\n      </BottomBar>\n\n      <Modals profile={profile} foods={foods} recipes={recipes} logs={logs} />\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\n\nexport const LegalDisclaimer = () => {\n  const legalLink = process.env.NEXT_PUBLIC_LEGAL_LINK\n  return legalLink ? (\n    <p\n      css={css`\n        font-size: 0.7rem;\n        text-align: center;\n        padding-bottom: 10px;\n      `}\n    >\n      By logging in, you agree to our{' '}\n      <a target=\"_blank\" rel=\"noopener noreferer\" href={legalLink}>\n        Terms\n      </a>{' '}\n      &#38;{' '}\n      <a target=\"_blank\" rel=\"noopener noreferer\" href={legalLink}>\n        Privacy Policy\n      </a>\n    </p>\n  ) : (\n    <></>\n  )\n}\n","import 'firebase/compat/auth'\nimport { css } from '@emotion/react'\nimport {\n  FacebookAuthProvider,\n  getAuth,\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  OAuthProvider,\n  signInWithPopup,\n} from 'firebase/auth'\nimport { FaApple, FaFacebook, FaGithub, FaGoogle } from 'react-icons/fa'\nimport { firebaseApp } from '../../pages'\nimport { Explanation } from '../explanation/Explanation'\nimport { LegalDisclaimer } from './LegalDisclaimer'\n\nexport const loginButton = css`\n  border-radius: 5px;\n  color: white;\n  font-size: 0.95rem;\n  font-weight: 700;\n  margin: 5px 5px;\n  min-width: 225px;\n  padding: 15px 0;\n  text-decoration: none;\n\n  > span {\n    margin-right: 15px;\n  }\n`\n\nexport const FirebaseLoginButtons = () => {\n  return (\n    <div className=\"fcc w100\">\n      {/* Social login buttons */}\n      <div className=\"fcc w100\">\n        <div className=\"frc wrap\">\n          {process.env.NEXT_PUBLIC_LOGIN_WITH_GOOGLE === 'true' && (\n            <button\n              className=\"black m5 ml5 mr5\"\n              css={css`\n                background-color: #4285f4;\n                width: 210px;\n                &:hover,\n                &:focus {\n                  background-color: #2472f2;\n                }\n              `}\n              onClick={() => {\n                const auth = getAuth(firebaseApp)\n                signInWithPopup(auth, new GoogleAuthProvider()).then(() => {\n                  setTimeout(() => {\n                    window.location.reload()\n                  }, 100)\n                })\n              }}\n            >\n              <FaGoogle className=\"mr10\" size={18} />\n              Sign in with Google\n            </button>\n          )}\n          {process.env.NEXT_PUBLIC_LOGIN_WITH_APPLE === 'true' && (\n            <button\n              css={css`\n                width: 210px;\n              `}\n              className=\"black m5 ml5 mr5\"\n              onClick={() => {\n                const auth = getAuth(firebaseApp)\n                signInWithPopup(auth, new OAuthProvider('apple.com')).then(\n                  () => {\n                    setTimeout(() => {\n                      window.location.reload()\n                    }, 100)\n                  }\n                )\n              }}\n            >\n              <FaApple className=\"mr10\" size={18} />\n              Sign in with Apple\n            </button>\n          )}\n          {process.env.NEXT_PUBLIC_LOGIN_WITH_FACEBOOK === 'true' && (\n            <button\n              css={css`\n                width: 210px;\n              `}\n              className=\"facebook m5 ml5 mr5\"\n              onClick={() => {\n                const auth = getAuth(firebaseApp)\n                signInWithPopup(auth, new FacebookAuthProvider()).then(() => {\n                  setTimeout(() => {\n                    window.location.reload()\n                  }, 100)\n                })\n              }}\n            >\n              <FaFacebook className=\"mr10\" size={18} />\n              Sign in with Facebook\n            </button>\n          )}\n          {process.env.NEXT_PUBLIC_LOGIN_WITH_GITHUB === 'true' && (\n            <button\n              css={css`\n                width: 210px;\n              `}\n              className=\"black m5 ml5 mr5\"\n              onClick={() => {\n                const auth = getAuth(firebaseApp)\n                signInWithPopup(auth, new GithubAuthProvider()).then(() => {\n                  setTimeout(() => {\n                    window.location.reload()\n                  }, 100)\n                })\n              }}\n            >\n              <FaGithub className=\"mr10\" size={18} />\n              Sign in with GitHub\n            </button>\n          )}\n        </div>\n      </div>\n\n      <Explanation\n        css={css`\n          width: 90%;\n          font-size: 0.95rem;\n          margin-top: 30px;\n          margin-bottom: 20px;\n        `}\n        color=\"yellow\"\n      >\n        <div>\n          An account is made automatically on login. Clean Slate is free, so\n          enjoy! To learn more about the app,{' '}\n          <a href=\"https://cleanslate.sh/\" target=\"_blank\" rel=\"noreferrer\">\n            go here.\n          </a>\n        </div>\n      </Explanation>\n      <LegalDisclaimer />\n    </div>\n  )\n}\n","import { css } from '@emotion/react'\nimport { useState } from 'react'\nimport { toast } from 'react-hot-toast'\nimport { GET_PROFILE } from '../../graphql/profile'\nimport { tokenKey } from '../../helpers/constants'\nimport { getHasuraClient } from '../../helpers/getHasuraClient'\nimport { getJWT } from '../../helpers/getJWT'\nimport { getStore } from '../../helpers/getStore'\nimport { login } from '../../helpers/login'\nimport { Explanation } from '../explanation/Explanation'\nimport { LegalDisclaimer } from './LegalDisclaimer'\n\nexport const TokenLoginButtons = () => {\n  const [token, setToken] = useState('')\n\n  return (\n    <form\n      css={css`\n        width: 90%;\n      `}\n    >\n      <label>Token</label>\n      <input\n        id=\"token\"\n        value={token}\n        onChange={(e) => setToken(e.target.value)}\n        className=\"mt10\"\n        type=\"password\"\n        placeholder=\"XXX\"\n        required\n      />\n      <button\n        type=\"submit\"\n        id=\"login-button\"\n        className=\"black bold mt20\"\n        onClick={async (e) => {\n          e.preventDefault()\n          if (token) {\n            const JWT = await getJWT(token)\n            const client = await getHasuraClient(JWT)\n            const response = await client.request(GET_PROFILE, {\n              token,\n            })\n            if (response === undefined || response.profiles.length === 0) {\n              toast.error('No profile matches that token!')\n            } else {\n              localStorage.setItem(tokenKey, token)\n              login()\n              getStore().dispatch('updateUser', { token })\n            }\n          } else {\n            toast.error('You must enter your token!')\n          }\n        }}\n      >\n        Login\n      </button>\n      <Explanation\n        css={css`\n          width: 100%;\n          font-size: 0.95rem;\n          margin-top: 30px;\n          margin-bottom: 20px;\n        `}\n        color=\"yellow\"\n      >\n        <div>\n          To create an account, the admin must use the Hasura Console to make a\n          profile. The token is the authId of the profile. To learn more about\n          the app,{' '}\n          <a href=\"https://cleanslate.sh/\" target=\"_blank\" rel=\"noreferrer\">\n            go here.\n          </a>\n        </div>\n      </Explanation>\n      <LegalDisclaimer />\n    </form>\n  )\n}\n","import { css } from '@emotion/react'\nimport { firebaseEnabled } from '../../helpers/getFirebaseConfig'\nimport { isBrowser } from '../../helpers/isBrowser'\nimport { colors } from '../../theme'\nimport { FirebaseLoginButtons } from './FirebaseLoginButtons'\nimport { TokenLoginButtons } from './TokenLoginButtons'\n\nexport const LoginPanel = () => {\n  const panel = css`\n    background-color: ${colors.background};\n    height: 100%;\n\n    > div {\n      background-color: white !important;\n      border-radius: 25px;\n      box-shadow: rgb(0 0 0 / 10%) 0 36px 42px;\n      position: relative;\n      max-width: 500px;\n      width: 90%;\n      min-height: 375px;\n    }\n  `\n\n  return (\n    <div css={panel} className={`w100 fcc center scroll`}>\n      <div className=\"fcc\">\n        <h1 style={{ fontSize: '1.8rem' }} className=\"mt50 mb20 tcenter\">\n          Clean Slate ❤️\n        </h1>\n        {isBrowser() && firebaseEnabled && <FirebaseLoginButtons />}\n        {isBrowser() && !firebaseEnabled && <TokenLoginButtons />}\n      </div>\n    </div>\n  )\n}\n","import { LoginPanel } from './LoginPanel'\n\nexport const Login = () => {\n  return (\n    <div suppressHydrationWarning={true} className=\"h100\">\n      <LoginPanel />\n    </div>\n  )\n}\n","export const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import firebase from 'firebase/compat/app'\nimport { store } from '../store/store'\nimport { handleError } from './handleError'\nimport { login } from './login'\nimport { sleep } from './sleep'\n\nexport const validateToken = async (userAuth: firebase.User, attempts = 0) => {\n  if (attempts >= 10) {\n    handleError('Error: validateToken')\n    return null\n  }\n  const tokenResult = await userAuth.getIdTokenResult()\n  const hasuraClaim = tokenResult.claims['https://hasura.io/jwt/claims']\n  if (!hasuraClaim) {\n    await userAuth.getIdToken(true)\n    await sleep(200)\n    validateToken(userAuth, attempts + 1)\n  } else {\n    login()\n    store.dispatch('updateUser', userAuth)\n  }\n}\n","import firebase from 'firebase/compat/app'\nimport React from 'react'\nimport { firebaseEnabled } from '../helpers/getFirebaseConfig'\nimport { getStore } from '../helpers/getStore'\nimport { getToken } from '../helpers/getToken'\nimport { validateToken } from '../helpers/validateToken'\n\nexport const useAuthentication = (offline: boolean) => {\n  React.useEffect(() => {\n    if (!offline && firebaseEnabled) {\n      // The happy path that occurs on production\n      firebase.auth().onAuthStateChanged(async (userAuth) => {\n        if (userAuth) {\n          await validateToken(userAuth)\n        }\n      })\n    } else {\n      if (getToken()) {\n        getStore().dispatch('updateUser', { token: getToken() })\n      }\n    }\n  }, [offline])\n}\n","import React from 'react'\nimport { store } from '../store/store'\n\nexport const useOffline = () => {\n  React.useEffect(() => {\n    window.addEventListener('offline', () => {\n      store.dispatch('isOffline', true)\n    })\n    window.addEventListener('online', () => {\n      store.dispatch('isOffline', false)\n    })\n  }, [])\n}\n","import { useStoreon } from 'storeon/react'\nimport { NavbarState } from '../store/navbar/types'\n\nexport const useOfflineStatus = () => {\n  const { navbar }: { navbar: NavbarState } = useStoreon('navbar')\n  return navbar.offline\n}\n","import 'firebase/compat/auth'\nimport firebase from 'firebase/compat/app'\nimport { useEffect, useState } from 'react'\nimport { App } from '../components/app/App'\nimport { Login } from '../components/login/Login'\nimport { getFirebaseConfig } from '../helpers/getFirebaseConfig'\nimport { getLoginStatus } from '../helpers/getLoginStatus'\nimport { isLoadedUser } from '../helpers/isLoadedUser'\nimport { useAuthentication } from '../hooks/useAuthentication'\nimport { useOffline } from '../hooks/useOffline'\nimport { useOfflineStatus } from '../hooks/useOfflineStatus'\nimport { useUser } from '../hooks/useUser'\n\n// Only create Firebase if it has yet to be initialized\nexport const firebaseApp = !firebase.apps.length\n  ? firebase.initializeApp(getFirebaseConfig())\n  : firebase.app()\n\nconst Index = () => {\n  const user = useUser()\n  const offline = useOfflineStatus()\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  useOffline()\n  useAuthentication(offline)\n\n  return (\n    <>\n      {mounted ? (\n        isLoadedUser(user) || getLoginStatus() ? (\n          <App />\n        ) : (\n          <Login />\n        )\n      ) : (\n        <div />\n      )}\n    </>\n  )\n}\n\nexport default Index\n"],"names":["window","__NEXT_P","push","__webpack_require__","createKeyboardShortcutDirectory","dispatch","getStore","b","e","f","h","l","m","q","r","getActiveModals","get","navbar","activeModals","modalsAreActive","length","executeKeyboardShortcuts","key","event","keyboardShortcutDirectory","action","closeAllModals","createDateRange","midnight","dayjs","startOf","today","tomorrow","add","login","localStorage","setItem","loginKey","getToken","getItem","tokenKey","getUser","firebaseEnabled","token","user","firebase","auth","currentUser","error","handleError","createProfileMutation","authId","timezone","mutation","gql","response","getHasuraClient","request","createProfile","Intl","DateTimeFormat","resolvedOptions","timeZone","logout","uid","provider","providerData","subscribeToProfile","client","query","stringifyQuery","SUBSCRIBE_TO_DATA","variables","subscribe","next","newData","result","data","store","profiles","missingBasicFoods","addBasicFoodsToProfile","then","location","reload","extractData","basicFoods","profile","logs","recipes","customFoods","foods","useData","useStoreon","offline","useLogoutOtherTab","useEffect","isLoggedIn","newValue","addEventListener","removeEventListener","isIpad","navigator","userAgent","includes","document","isMobile","UA","isMobileDevice","toMatch","some","isBrowser","match","toMatchItem","isPWA","displayMode","matchMedia","matches","standalone","referrer","usePWAPrompt","React","showPrompt","isProduction","hidePWAPrompt","setTimeout","useShortcuts","shortcuts","getDomain","hostname","isToday","setLastReset","Cookies","set","toString","domain","expires","useStartTime","interval","setInterval","lastReset","undefined","profileKey","ms","clearInterval","getLoginStatus","status","Boolean","createWebsocketClient","SubscriptionClient","getConfig","resourceServerUriWs","connectionParams","getJWT","headers","authorization","concat","catch","reconnect","getWebsocketClient","currentClient","currentWebsocketClient","isLoadedUser","useSubscription","subscribers","isOnline","isOffline","forEach","subscriber","useUser","profileIsLoaded","calorieTarget","defaultTargets","Spinner","color","height","width","param","style","css","spinner","emotion_react_jsx_runtime_browser_esm","BX","div","className","tZ","Body","children","footer","dataReady","body","colors","purple","BottomBar","lightgrey","id","barcode","exercise","fast","magnify","HiddenInput","inputMode","type","input","tabIndex","autoCapitalize","autoComplete","autoCorrect","BottomBarButtons","buttons","white","button","onClick","img","alt","src","showCalories","Exercise","enablePlanning","Rocket","Barcode","Search","defaultMeal","MealEnum","Breakfast","Lunch","Dinner","Snack","Log","constructor","basicFood","uuid","food","recipe","updatedAt","Date","createdAt","logToFood","logToRecipe","logToProfile","sortByCreatedAt","items","sort","itemA","itemB","Number","barcode_without_scanner","deleteLogOnCloud","onSuccess","DELETE_LOG","delete_logs_by_pk","updateLogOnCloud","UPDATE_LOG","update_logs_by_pk","trash","DeleteButton","onDelete","data-id","Image","Trash","capitalize","string","charAt","toUpperCase","slice","toLowerCase","Food","basicFoodId","name","group","category","isDummy","customCategories","dairyCategories","fatsAndSugarsCategories","fruitCategories","grainCategories","otherCategories","proteinCategories","vegetableCategories","categories","categoryA","categoryB","localeCompare","mapCategoryToGroup","addCategoryToDummyFood","Error","addGroupToDummyFood","createDummyFood","dairy","Mayonnaise","Light","Milk","Skim","Whole","Yogurt","Greek","Plain","Object","keys","pastaNames","dummyFoods","Bean","Adzuki","Cooked","Dry","Black","Cannellini","Chickpeas","Fava","Kidney","Lima","Mung","Pinto","Soy","White","Beef","Fatty","Raw","Ribeye","Lean","Bread","French","Italian","Naan","Pita","Rye","Sourdough","Butter","Almond","Cashew","Cocoa","Normal","Cheese","American","Asiago","Blue","Brie","Camembert","Cheddar","Chihuahua","Colby","Cotija","Cream","Edam","Emmentaler","Epoisses","Feta","Fontina","Goat","Gorgonzola","Gouda","Gruyere","Havarti","Jarlsberg","Manchego","Mexican","Monterey","Mozzarella","Muenster","Neufchatel","Parmesan","Pecorino","Provolone","Ricotta","Roquefort","Stilton","Swiss","Chicken","Breast","Drumstick","Tenderloin","Thigh","Wing","Dough","Choux","Filo","Flaky","Pizza","Puff","Shortcrust","Apple","Apricots","Banana","Blueberries","Cherries","Cranberries","Currants","Figs","Kiwi","Mango","Nectarines","Oranges","Peaches","Pears","Persimmons","Pluots","Prunes","Raisins","Strawberries","Basil","Oregano","Parsley","Rosemary","Tarragon","Flour","Arrowroot","Chickpea","Coconut","Hazelnut","Oat","Peanut","Lamb","Pork","Turkey","Jerky","Leg","Loin","Shoulder","Lentils","Lettuce","Boston","Iceberg","Romaine","Noodles","Egg","Glass","Rice","Soba","Somen","Udon","Flax","Hemp","Liver","Pasta","Pea","Green","Split","Pepper","Chili","Jalapeno","Poblano","Serrano","Belly","Chops","Casein","Whey","Ribs","Brown","Wild","Tortilla","Corn","Vinegar","Balsamic","Amaranth","Barley","Buckwheat","Bulger","Couscous","Farro","Freekeh","Hominy","Millet","Oats","Polenta","Quinoa","Sorghum","Spelt","Teff","Wine","Red","Shaoxing","Sherry","map","getAllDummyFoodLeaves","leaves","recurse","path","value","entries","Array","isArray","isDummyFood","subset","removeParens","s","replace","getDummyFoodPath","paths","traverse","reduce","acc","x","stem","p","leaf","split","getDummyFoodTree","root","tree","getThreshold","getNameAndTags","alias","dynamicName","indexOf","truncate","tags","threshold","nameToUse","join","forbiddenTags","tagsToRender","Set","filter","t","nameToRender","calmini","density","proteinmini","Macros","log","showTitles","caloriesConsumed","proteinConsumed","calculateMacros","Math","round","v","densities","calculateFoodOrRecipeDensities","amount","caloricDensity","proteinDensity","combinedDensity","isNaN","macros","CalMini","span","ProteinMini","showDensities","strong","a","href","target","rel","br","Density","renderMacros","item","childRecipe","unit","spawnItemEditModal","Amount","ConsumeButton","nameStyling","onChange","pk_columns","consumed","checked","Tags","tag","makeUnitPretty","countName","defaultCount","containerName","defaultContainer","UnitInput","prettyUnit","pluralize","imageStyling","withoutImage","custom","Meta","isRecipe","isCustomFood","isCustomLog","foodToProfile","truncateLength","quickAddUnits","TRUNCATE_LENGTH","green","blue","pencil","spawnInstanceEditModal","UpdateButton","clickable","Pencil","Item","props","itemStyles","consumedStyling","logOrIngredientUpdateError","LogItem","meal","selectFoodImage","getImagePath","onUpdate","Promise","resolve","reject","toast","message","BarcodeWithoutScanner","calculator","edit","foodbowl","mortarboard","sunrise","Shell","shell","section","sectionHeader","md","explanationHeader","Sunrise","black","Calculator","Explanation","Runner","u","Edit","CustomFood","CustomRecipe","Mortarboard","LogList","units","logsToUse","groupedLogs","groupBy","consumptionByGroup","mapMealToColor","pink","yellow","i","logsByMeal","renderUnit","zipObject","L1","L2","index","Divider","styles","divider","background","getTotals","CALORIE","unitLogs","accumulator","EXERCISE","PROTEIN","getUnitLogs","calorieLogs","proteinLogs","exerciseLogs","getCombinedLogs","totals","calorie","protein","getCount","deleteLogsOnCloud","idsToDelete","DELETE_LOGS","ids","delete_logs","returning","o","formatUnitAsTitle","fastexercise","selectUnitImage","Calorie","Protein","UnitItem","logsToDelete","UnitList","ordering","logA","logB","getDispatch","isMobileSafari","ua","iOS","webkit","isNumeric","number","CODE_TYPE","RAW","BTN_TXT","START","STOP","CANVAS_SIZE","HEIGHT","WIDTH","sw","sh","sx","sy","fps","Scan","componentDidMount","canvasElement","getElementById","canvas","getContext","render","state","resultOpen","renderQrCodeResult","onScan","neverScanned","onTouchStart","initializeAudio","onBtnClickHandler","startStyle","scanning","componentWillUnmount","stopScan","initWorker","qrworker","Worker","worker","onmessage","ev","terminate","res","milliseconds","codeType","setState","rawCode","startScan","fpsTimestamp","btnText","transformToggle","mediaDevices","getUserMedia","audio","video","facingMode","srcObject","stream","setAttribute","play","requestAnimationFrame","tick","alert","err","AudioContext","webkitAudioContext","audioContext","fixAudioContext","buffer","createBuffer","source","createBufferSource","connect","destination","start","noteOn","boxShadow","pause","getVideoTracks","track","stop","readyState","HAVE_ENOUGH_DATA","fpsOn","time","drawImage","bw","monochromize","crosshair","drawCrosshair","drawFPS","decodeQR","recognizeQRcode","imgd","getImageData","pix","gray","putImageData","fillStyle","shape","Path2D","fill","oldTime","scanRate","imageData","postMessage","font","fillText","preventDefault","textAlign","backgroundColor","createElement","onplaying","videoWidth","videoHeight","openModal","decode","propTypes","PropTypes","defaultProps","check","SubmitButton","submit","Check","ButtonPanel","showSubmit","FractionInput","inputRef","placeholder","setValue","ref","required","step","getPrettyUnits","volume","countToTbsp","tbspToGram","volumeUnits","volumeDict","weight","caloriesPerGram","countToGram","weightUnits","weightDict","count","caloriesPerCount","proteinPerCount","countDict","COUNT","container","servingPerContainer","containerDict","MealInput","setMeal","Tabs","selected","tabs","image","title","onSelect","tab","Select","currentOption","focus","optionDictionary","optionInput","current","active","darkblue","optionSet","option","InputFields","selectedItem","setAmount","setUnit","amountInput","newUnit","addFoodToCloud","CREATE_FOOD","object","insert_foods_one","Ingredient","addIngredient","ingredient","ingredientToChildRecipe","ingredientToFood","ingredientToProfile","Profile","addLogToCloud","CREATE_LOG","insert_logs_one","addLog","isBasicFood","submitEditor","searchResult","customFoodToCreate","preferredVolumeUnit","preferredWeightUnit","success","BarcodeModal","setBarcode","useState","createCustomFood","setCreateCustomFood","ran","setRan","fetchData","debounce","axios","code","status_verbose","product","nutriments","product_name","proteins_100g","proteins_serving","serving_quantity","serving_size","calories_per_gram","calories_per_serving","protein_per_gram","protein_per_serving","parser","UAParser","browser","version","String","oldSafari","compareVersions","oldChrome","oldFirefox","proteinPerGram","HY","label","htmlFor","calculateBFUsingNavyMethod","sex","waist","neck","hip","log10","JSON","stringify","BodyFatPercentageForm","feet","updateFeet","inches","updateInches","updateSex","setWaist","setNeck","setHip","bodyFatPercentage","setBodyFatPercentage","form","onSubmit","BF","updateFoodOnCloud","UPDATE_FOOD","convertToNumber","Infinity","prep","mapTbspToOtherVolumeUnit","tbsp","getAdjustedVolumeAmount","volumeUnit","num","convertToImperialFromGrams","amountInGrams","getAdjustedWeightAmount","weightUnit","imperial","getAmount","UnitSelector","newAmount","updateNewAmount","selectedUnit","updatedSelectedUnit","isContainer","select","CustomFoodForm","updateName","updateCaloriesPerCount","updateProteinPerCount","updateServingPerContainer","setCountToGram","setCountToTbsp","setVolumeUnit","setWeightUnit","convertVolume","updateConvertVolume","convertWeight","updateConvertWeight","convertedCountToGram","convertFromWeightToGrams","convertedCountToTbsp","mapOtherVolumeUnitToTbsp","close","countToGramZeroedOut","countToTbspZeroedOut","servingPerContainerZeroedOut","addQuickLogToCloud","CREATE_LOGS","insert_logs","otherMet","Baseball","Basketball","Boxing","Cricket","Dance","Football","Golf","Hiking","Lacrosse","Racquetball","Rugby","Skateboarding","Skiing","Soccer","Softball","Squash","Volleyball","Wrestling","swimmingMET","Backstroke","Breaststroke","Butterfly","Freestyle","liftingMET","Machines","calculateCaloriesFromMETs","minutes","MET","getCyclingMET","mph","getRowingMET","exactMET","watts","getRunningMET","getWalkingMET","incline","speed","vo2","horizontalComponent","getMETsFromInput","exerciseGroup","otherActivity","swimmingActivity","liftingActivity","ExerciseForm","metricSystem","updateWeight","setMinutes","watt","setWatts","setMph","setIncline","calories","setCalories","setExerciseGroup","setOtherActivity","setSwimmingActivity","setLiftingActivity","groupButtonStyling","otherButtons","groupButton","g","caloriesBurned","objects","splitIntoPages","array","pageSize","remainder","leftArrow","rightArrow","Paginator","activePage","handleClick","paginator","noHover","deleteFoodOnCloud","DELETE_FOOD","FoodItem","IngredientItem","deleteIngredient","updatedIngredient","deleteRecipeOnCloud","DELETE_RECIPE","RecipeItem","recipeToProfile","updateItem","deleteItem","purpose","updateIngredient","getNumberOfItems","containerRef","firstItem","containerHeight","getBoundingClientRect","itemHeight","ceil","List","forcedNumberOfItems","paginate","renderItem","searchable","updateActivePage","searchText","setSearchText","searchResults","setSearchResults","numbersOfItems","setNumberOfItems","referenceItemLength","updateReferenceItemLength","searcher","createSearcher","itemContainer","getNumberOfItemsFromPage","numberOfItems","adjustNumberOfItems","itemsToUse","disabled","text","getSearchResults","IngredientList","ingredients","ingredientsToUse","ingredientToRecipe","nameA","nameB","upsertItem","updatedItem","existingIngredient","find","Recipe","createRecipeLog","newRecipe","newLog","addRecipeToCloud","CREATE_RECIPE","updateRecipeOnCloud","UPDATE_RECIPE","addIngredients","formData","formattedIngredients","deepmerge","formatIngredient","recipeId","merge","formatDataForMutation","submitRecipe","remoteIngredients","closeModal","formattedData","ingredientsToInsert","remoteIds","ingredients_to_delete","ingredients_to_insert","produce","draft","RecipeForm","editor","updateCountName","setIngredients","updateIngredients","updatedIngredients","addIngredientStyling","curry","updateProfileOnCloud","UPDATE_PROFILE","calculateBMRUsingKatchMcardle","bodyfatPercentage","calculateBMI","calculateBodyFatPercentageUsingCUN_BAE","sexString","age","BMI","calculateIdealBodyWeightInKg","male","female","calculateTargets","metric","liftWeights","goal","ageToUse","weightToUse","heightToUse","idealBodyWeightInKg","estimatedBodyFatPercentage","leanBodyMassInKg","basalMetabolicRate","totalDailyEnergyExpenditure","proteinTarget","CalculateTargetForm","setMetricSystem","setLiftWeights","updateGoal","updateAge","lg","fat","maintain","muscle","Switch","other","TargetForm","updateCalorieTarget","updateProteinTarget","explanation","trashcan","deleteProfile","ok","confirm","DELETE_PROFILE","getAuth","firebaseApp","delete","DeleteAccount","subheader","Trashcan","Information","setShowCalories","setShowDensities","setHidePWAPrompt","countDown","setCountDown","setEnablePlanning","enableMetricSystem","setEnableMetricSystem","userLoaded","info","email","itemLabelStyling","process","env","NEXT_PUBLIC_VERSION","documentation","Settings","h1","Help","keyShortcuts","shortcutContainer","h3","Escape","shortcut","InformationModal","ul","li","back","backButton","onBack","showBack","onKeyDown","Back","SearchResult","dummyFood","imageStyles","nameStyles","getDefaultUnit","unitSet","SelectedItem","setSelectedItem","submitReady","amountAsNumber","mapFoodToDummyFood","dummyFoodName","StandardAdder","setPath","options","setOptions","setDummyFood","clearEverything","searchbarInput","results","resultsWithoutLeaves","uniqueResults","uniqueBy","newPath","IngredientModal","defaultOnDelete","defaultOnUpdate","createDefaultItem","meta","renderUnitComponent","updater","prettyUnits","convertItemToIngredient","convertItemToLog","convertFromGramsToCount","grams","countToGrams","convertFromGramsToVolume","convertFromGramsToWeight","convertFromGrams","isVolume","isWeight","isCount","countUnits","convertFromUnitToNewUnit","oldAmount","oldUnit","volumeToVolume","countToContainer","containerToCount","countToVolume","volumeToCount","containerToVolume","volumeToContainer","convertToGrams","getAmountFromNewUnit","updateUnit","localAmount","localUnit","convertBetweenUnits","element","setLocalAmount","setLocalUnit","submitItem","newMeal","showModal","ItemModal","itemToUse","localMeal","setLocalMeal","amountRef","GRAM","FoodList","RecipeList","recipesToUse","common_logout","review","settings","Menu","buttonToFocus","menuVisibility","innerWidth","sidebar","open","Feedback","Logout","return_arrow","getAnimationDuration","animationName","sidebarPresent","Modal","closeIcon","dialogStyles","duration","inTransition","outTransition","shellOutTransition","visible","modalRef","closeButton","shouldRender","updateShouldRender","IT","OUT","d","modalStyling","xlg","closeButtonStyling","mediumgrey","backgroundStyling","modalComponent","onAnimationEnd","role","aria-label","ReturnArrow","FocusTrap","chrome_share","safari_share","logo_circle","PWAPrompt","Logo","h2","SafariShare","ChromeShare","addQuickAddLog","QuickAdder","setProtein","inputToFocus","quickAddModalVisibility","updateUnitLogsOnCloud","UnitModal","updateAmount","getOrderedModals","modalsToRender","modals","modal","inactiveModals","showInactive","orderedModals","getErrorStyling","modalContainerStyling","modals_Modals","addIngredientModalVisibility","barcodeModalVisibility","bodyFatPercentageModalVisibility","errorVisibility","exerciseModalVisibility","foodFormModalVisibility","foodModalVisibility","foodToUpdate","helpModalVisibility","informationModalVisibility","itemModalVisibility","itemToUpdate","modalVisibility","pwaPromptVisibility","recipeFormModalVisibility","recipeModalVisibility","recipeToUpdate","settingsModalVisibility","targetModalVisibility","unitModalVisibility","editorStyling","allModals","numbers","Numbers","exerciseDone","calorieDifference","proteinDifference","loading","hideCalories","TopBar","topBar","App","suppressHydrationWarning","Modals","LegalDisclaimer","legalLink","NEXT_PUBLIC_LEGAL_LINK","FirebaseLoginButtons","NEXT_PUBLIC_LOGIN_WITH_GOOGLE","signInWithPopup","GoogleAuthProvider","FaGoogle","size","NEXT_PUBLIC_LOGIN_WITH_APPLE","OAuthProvider","FaApple","NEXT_PUBLIC_LOGIN_WITH_FACEBOOK","FacebookAuthProvider","FaFacebook","NEXT_PUBLIC_LOGIN_WITH_GITHUB","GithubAuthProvider","FaGithub","TokenLoginButtons","setToken","JWT","GET_PROFILE","LoginPanel","panel","fontSize","Login","sleep","validateToken","userAuth","attempts","tokenResult","getIdTokenResult","hasuraClaim","claims","getIdToken","useAuthentication","onAuthStateChanged","useOffline","useOfflineStatus","apps","app","initializeApp","getFirebaseConfig","pages","mounted","setMounted"],"sourceRoot":""}