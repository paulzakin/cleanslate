{"version":3,"file":"static/chunks/pages/_app-2e2a08bc146b34f6.js","mappings":"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","sources":["webpack://_N_E/../node_modules/.pnpm/@emotion+sheet@1.2.2/node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Utility.js","webpack://_N_E/../node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Tokenizer.js","webpack://_N_E/../node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Enum.js","webpack://_N_E/../node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Serializer.js","webpack://_N_E/../node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Middleware.js","webpack://_N_E/../node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Parser.js","webpack://_N_E/../node_modules/.pnpm/@emotion+cache@11.11.0/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+react@11.11.1_@types+react@18.2.33_react@18.2.0/node_modules/@emotion/react/dist/emotion-react.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+utils@1.2.1/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+react@11.11.1_@types+react@18.2.33_react@18.2.0/node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+react@11.11.1_@types+react@18.2.33_react@18.2.0/node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+hash@0.9.1/node_modules/@emotion/hash/dist/emotion-hash.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+unitless@0.8.1/node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+memoize@0.8.1/node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+serialize@1.1.2/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/@emotion+use-insertion-effect-with-fallbacks@1.0.1_react@18.2.0/node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js","webpack://_N_E/../node_modules/.pnpm/tslib@2.6.2/node_modules/tslib/tslib.es6.mjs","webpack://_N_E/../node_modules/.pnpm/@firebase+auth@1.3.2_@firebase+app@0.9.22/node_modules/@firebase/auth/dist/esm2017/index-94e5f531.js","webpack://_N_E/../node_modules/.pnpm/@firebase+util@1.9.3/node_modules/@firebase/util/dist/index.esm2017.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/integration.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/sdk.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/api.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/error.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/envelope.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/baseclient.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/clientreport.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/eventbuilder.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/helpers.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/userfeedback.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/client.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/severity.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/url.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/aggregate-errors.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/stack-parsers.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/promisebuffer.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/ratelimit.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/transports/base.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/transports/utils.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/transports/fetch.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/transports/xhr.js","webpack://_N_E/../node_modules/.pnpm/@sentry+browser@7.76.0/node_modules/@sentry/browser/esm/sdk.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/constants.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/eventProcessors.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/exports.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/hub.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/scope.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/session.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/utils/prepareEvent.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/version.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/browser.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/dsn.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/env.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/envelope.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/vendor/supportsHistory.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/instrument.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/is.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/logger.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/misc.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/node.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/memo.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/normalize.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/object.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/stacktrace.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/string.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/supports.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/syncpromise.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/time.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/worldwide.js","webpack://_N_E/../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js","webpack://_N_E/../node_modules/.pnpm/buffer@5.7.1/node_modules/buffer/index.js","webpack://_N_E/../node_modules/.pnpm/clone-deep@4.0.1/node_modules/clone-deep/index.js","webpack://_N_E/../node_modules/.pnpm/hoist-non-react-statics@3.3.2/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://_N_E/../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js","webpack://_N_E/../node_modules/.pnpm/is-plain-object@2.0.4/node_modules/is-plain-object/index.js","webpack://_N_E/../node_modules/.pnpm/isobject@3.0.1/node_modules/isobject/index.js","webpack://_N_E/../node_modules/.pnpm/kind-of@6.0.3/node_modules/kind-of/index.js","webpack://_N_E/?c5b6","webpack://_N_E/./assets/common/error.svg","webpack://_N_E/./helpers/mapError.ts","webpack://_N_E/./components/error/Error.tsx","webpack://_N_E/./components/explanation/Explanation.tsx","webpack://_N_E/./components/image/Image.tsx","webpack://_N_E/./constants/modals.ts","webpack://_N_E/./graphql/food.ts","webpack://_N_E/./graphql/log.ts","webpack://_N_E/./graphql/profile.ts","webpack://_N_E/./graphql/recipe.ts","webpack://_N_E/./helpers/Food/getBasicFoods.ts","webpack://_N_E/./helpers/clearCache.ts","webpack://_N_E/./helpers/clearLoginState.ts","webpack://_N_E/./helpers/closeAllModals.ts","webpack://_N_E/./helpers/getApiUrl.ts","webpack://_N_E/./helpers/config.ts","webpack://_N_E/./helpers/constants.ts","webpack://_N_E/./helpers/getFirebaseConfig.ts","webpack://_N_E/./helpers/axios.ts","webpack://_N_E/./helpers/stopRequestIfOffline.ts","webpack://_N_E/./helpers/getHasuraClient.ts","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/base64url.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/util/errors.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/random.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/iv.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/check_iv_length.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/check_cek_length.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/decrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/zlib.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/bogus.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/aeskw.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/ecdhes.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/check_p2s.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/pbes2kw.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/subtle_rsaes.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/rsaes.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/cek.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/asn1.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/key/import.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/encrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/aesgcmkw.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/decrypt_key_management.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/validate_crit.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwe/flattened/decrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwe/compact/decrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwe/general/decrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/key_to_jwk.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/key/export.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/encrypt_key_management.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwe/flattened/encrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwe/general/encrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/verify.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jws/compact/verify.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jws/general/verify.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/secs.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwt/verify.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwt/decrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwe/compact/encrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/check_key_length.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/crypto_key.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/invalid_key_input.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/is_key_like.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/sign.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/is_disjoint.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/check_key_type.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jws/flattened/sign.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jws/compact/sign.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jws/general/sign.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/epoch.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/lib/is_object.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwt/produce.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwt/sign.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwt/encrypt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwk/thumbprint.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwk/embedded.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwks/local.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/fetch_jwks.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwks/remote.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/jwt/unsecured.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/util/base64url.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/util/decode_protected_header.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/util/decode_jwt.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/runtime/generate.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/key/generate_key_pair.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/key/generate_secret.js","webpack://_N_E/../node_modules/.pnpm/jose@4.15.4/node_modules/jose/dist/browser/index.js","webpack://_N_E/./helpers/getJWT.ts","webpack://_N_E/./helpers/getStore.ts","webpack://_N_E/./helpers/gql.ts","webpack://_N_E/./helpers/handleError.ts","webpack://_N_E/./helpers/isBrowser.ts","webpack://_N_E/./helpers/isOffline.ts","webpack://_N_E/./helpers/isProduction.ts","webpack://_N_E/./helpers/logout.ts","webpack://_N_E/./helpers/profile/addBasicFoodsToProfile.ts","webpack://_N_E/../node_modules/.pnpm/@sentry+react@7.76.0_react@18.2.0/node_modules/@sentry/react/esm/sdk.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/baggage.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/tracing.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/span.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/transaction.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/idletransaction.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/utils.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/errors.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/utils/hasTracingEnabled.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/sampling.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/tracing/hubextensions.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/types.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/instrument.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/request.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/router.js","webpack://_N_E/../node_modules/.pnpm/@sentry-internal+tracing@7.76.0/node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js","webpack://_N_E/../node_modules/.pnpm/@sentry+core@7.76.0/node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js","webpack://_N_E/../node_modules/.pnpm/@sentry+utils@7.76.0/node_modules/@sentry/utils/esm/isBrowser.js","webpack://_N_E/../node_modules/.pnpm/@sentry+replay@7.76.0/node_modules/@sentry/replay/esm/index.js","webpack://_N_E/./helpers/startSentry.ts","webpack://_N_E/./graphql/ingredient.ts","webpack://_N_E/./helpers/getFragments.ts","webpack://_N_E/./helpers/stringifyQuery.ts","webpack://_N_E/./helpers/uuid.ts","webpack://_N_E/./models/profile.ts","webpack://_N_E/../node_modules/.pnpm/@sentry+react@7.76.0_react@18.2.0/node_modules/@sentry/react/esm/errorboundary.js","webpack://_N_E/../node_modules/.pnpm/react-div-100vh@0.7.0_react@18.2.0/node_modules/react-div-100vh/dist/esm/index.js","webpack://_N_E/./components/error/ErrorBoundary.tsx","webpack://_N_E/./hooks/useErrors.ts","webpack://_N_E/./pages/_app.tsx","webpack://_N_E/../node_modules/.pnpm/storeon@3.1.5_react@18.2.0/node_modules/storeon/index.js","webpack://_N_E/./helpers/getCachedData.ts","webpack://_N_E/./store/data/createInitialSlice.ts","webpack://_N_E/./store/data/module.ts","webpack://_N_E/./store/editor/createInitialSlice.ts","webpack://_N_E/./store/editor/module.ts","webpack://_N_E/./helpers/updateModal.ts","webpack://_N_E/./store/navbar/createInitialSlice.ts","webpack://_N_E/./store/navbar/module.ts","webpack://_N_E/./store/store.ts","webpack://_N_E/./theme.ts","webpack://_N_E/./theme.scss","webpack://_N_E/../node_modules/.pnpm/next@13.5.6_@babel+core@7.23.2_react-dom@18.2.0_react@18.2.0_sass@1.69.5/node_modules/next/head.js","webpack://_N_E/../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js","webpack://_N_E/../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.production.min.js","webpack://_N_E/../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js","webpack://_N_E/../node_modules/.pnpm/shallow-clone@3.0.1/node_modules/shallow-clone/index.js","webpack://_N_E/../node_modules/.pnpm/uuid-random@1.3.2/node_modules/uuid-random/index.js","webpack://_N_E/ignored|/Users/paulzakin/Code/personal/cleanslate/node_modules/.pnpm/uuid-random@1.3.2/node_modules/uuid-random|crypto","webpack://_N_E/../node_modules/.pnpm/@firebase+app-compat@0.2.22/node_modules/@firebase/app-compat/dist/esm/index.esm2017.js","webpack://_N_E/../node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/wrap-idb-value.js","webpack://_N_E/../node_modules/.pnpm/idb@7.1.1/node_modules/idb/build/index.js","webpack://_N_E/../node_modules/.pnpm/@firebase+app@0.9.22/node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://_N_E/../node_modules/.pnpm/@firebase+component@0.6.4/node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://_N_E/../node_modules/.pnpm/@firebase+logger@0.4.0/node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://_N_E/../node_modules/.pnpm/@swc+helpers@0.5.2/node_modules/@swc/helpers/esm/_tagged_template_literal.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/bind.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/utils.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/AxiosError.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/null.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/toFormData.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/buildURL.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/InterceptorManager.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/defaults/transitional.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/platform/browser/index.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/formDataToJSON.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/defaults/index.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/parseHeaders.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/AxiosHeaders.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/transformData.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/cancel/isCancel.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/cancel/CanceledError.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/settle.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/cookies.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/combineURLs.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/buildFullPath.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/parseProtocol.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/speedometer.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/adapters/xhr.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/adapters/adapters.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/dispatchRequest.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/mergeConfig.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/env/data.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/validator.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/core/Axios.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/cancel/CancelToken.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/spread.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/isAxiosError.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://_N_E/../node_modules/.pnpm/axios@1.6.0/node_modules/axios/lib/axios.js","webpack://_N_E/../node_modules/.pnpm/firebase@10.5.2/node_modules/firebase/compat/app/dist/esm/index.esm.js","webpack://_N_E/../node_modules/.pnpm/@firebase+auth@1.3.2_@firebase+app@0.9.22/node_modules/@firebase/auth/dist/esm2017/internal.js","webpack://_N_E/../node_modules/.pnpm/@firebase+auth-compat@0.4.8_@firebase+app-compat@0.2.22_@firebase+app-types@0.9.0_@firebase+app@0.9.22/node_modules/@firebase/auth-compat/dist/index.esm2017.js","webpack://_N_E/../node_modules/.pnpm/firebase@10.5.2/node_modules/firebase/compat/auth/dist/esm/index.esm.js","webpack://_N_E/../node_modules/.pnpm/immer@10.0.3/node_modules/immer/dist/immer.mjs","webpack://_N_E/../node_modules/.pnpm/goober@2.1.13_csstype@3.1.2/node_modules/goober/dist/goober.modern.js","webpack://_N_E/../node_modules/.pnpm/react-hot-toast@2.4.1_csstype@3.1.2_react-dom@18.2.0_react@18.2.0/node_modules/react-hot-toast/dist/index.mjs","webpack://_N_E/../node_modules/.pnpm/storeon@3.1.5_react@18.2.0/node_modules/storeon/react/index.prod.js","webpack://_N_E/<anon>"],"sourcesContent":["/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\nexport var LAYER = '@layer'\n","import {IMPORT, LAYER, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, stringify, COMMENT, rulesheet, middleware, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = !!element.parent; // in nested rules comments become children of the \"auto-inserted\" rule and that's always the `element.parent`\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? element.parent.children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport { createCache as default };\n","import { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isBrowser$1 } from './emotion-element-c39617d8.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-c39617d8.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.11.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./dist/emotion-react.cjs.mjs\",\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t},\n\t\t\t\"default\": \"./macro.js\"\n\t\t}\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.*\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.11.0\",\n\t\t\"@emotion/cache\": \"^11.11.0\",\n\t\t\"@emotion/serialize\": \"^1.1.2\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n\t\t\"@emotion/utils\": \"^1.2.1\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.1\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.11.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.3\",\n\t\t\"@emotion/server\": \"11.11.0\",\n\t\t\"@emotion/styled\": \"11.11.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t\t\t},\n\t\t\t\t\t\"default\": \"./macro.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n\n  if (!isBrowser$1) {\n    var _ref;\n\n    var serializedNames = serialized.name;\n    var serializedStyles = serialized.styles;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      serializedStyles += next.styles;\n      next = next.next;\n    }\n\n    var shouldCache = cache.compat === true;\n    var rules = cache.insert(\"\", {\n      name: serializedNames,\n      styles: serializedStyles\n    }, cache.sheet, shouldCache);\n\n    if (shouldCache) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref.nonce = cache.sheet.nonce, _ref));\n  } // yes, i know these hooks are used conditionally\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n\n  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';\n\n  if (isBrowser && !isTestEnv) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import * as React from 'react';\nimport { useContext, forwardRef } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar isBrowser = \"object\" !== 'undefined';\nvar hasOwnProperty = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nif (process.env.NODE_ENV !== 'production') {\n  EmotionCacheContext.displayName = 'EmotionCacheContext';\n}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nif (!isBrowser) {\n  withEmotionCache = function withEmotionCache(func) {\n    return function (props) {\n      var cache = useContext(EmotionCacheContext);\n\n      if (cache === null) {\n        // yes, we're potentially creating this on every render\n        // it doesn't actually matter though since it's only on the server\n        // so there will only every be a single render\n        // that could change in the future because of suspense and etc. but for now,\n        // this works and i don't want to optimise for a future thing that we aren't sure about\n        cache = createCache({\n          key: 'css'\n        });\n        return /*#__PURE__*/React.createElement(EmotionCacheContext.Provider, {\n          value: cache\n        }, func(props, cache));\n      } else {\n        return func(props, cache);\n      }\n    };\n  };\n}\n\nvar ThemeContext = /* #__PURE__ */React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'EmotionThemeContext';\n}\n\nvar useTheme = function useTheme() {\n  return React.useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = React.useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = React.useContext(ThemeContext);\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/React.forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like 'Object.createEmotionProps' or\n  // 'Loader.prototype.render'\n  var parts = functionName.split('.');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn't already been computed\n\n  if (process.env.NODE_ENV !== 'production' && !!props.css && (typeof props.css !== 'object' || typeof props.css.name !== 'string' || props.css.name.indexOf('-') === -1)) {\n    var label = getLabelFromStackTrace(new Error().stack);\n    if (label) newProps[labelPropName] = label;\n  }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nvar Emotion$1 = Emotion;\n\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwnProperty as h, isBrowser as i, useTheme as u, withEmotionCache as w };\n","import * as ReactJSXRuntime from 'react/jsx-runtime';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps } from '../../dist/emotion-element-c39617d8.browser.esm.js';\nimport 'react';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\n\nvar Fragment = ReactJSXRuntime.Fragment;\nfunction jsx(type, props, key) {\n  if (!hasOwnProperty.call(props, 'css')) {\n    return ReactJSXRuntime.jsx(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsx(Emotion, createEmotionProps(type, props), key);\n}\nfunction jsxs(type, props, key) {\n  if (!hasOwnProperty.call(props, 'css')) {\n    return ReactJSXRuntime.jsxs(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsxs(Emotion, createEmotionProps(type, props), key);\n}\n\nexport { Fragment, jsx, jsxs };\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport { murmur2 as default };\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport { unitlessKeys as default };\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","import * as React from 'react';\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || React.useLayoutEffect;\n\nexport { useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback };\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { ErrorFactory, isBrowserExtension, isMobileCordova, isReactNative, FirebaseError, querystring, getModularInstance, base64Decode, getUA, isIE, createSubscribe, deepEqual, querystringDecode, extractQuerystring, isEmpty, getExperimentalSetting, getDefaultEmulatorHost } from '@firebase/util';\nimport { SDK_VERSION, _getProvider, _registerComponent, registerVersion, getApp } from '@firebase/app';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { __rest } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enum of factors that may be used for multifactor authentication.\r\n *\r\n * @public\r\n */\r\nconst FactorId = {\r\n    /** Phone as second factor */\r\n    PHONE: 'phone',\r\n    TOTP: 'totp'\r\n};\r\n/**\r\n * Enumeration of supported providers.\r\n *\r\n * @public\r\n */\r\nconst ProviderId = {\r\n    /** Facebook provider ID */\r\n    FACEBOOK: 'facebook.com',\r\n    /** GitHub provider ID */\r\n    GITHUB: 'github.com',\r\n    /** Google provider ID */\r\n    GOOGLE: 'google.com',\r\n    /** Password provider */\r\n    PASSWORD: 'password',\r\n    /** Phone provider */\r\n    PHONE: 'phone',\r\n    /** Twitter provider ID */\r\n    TWITTER: 'twitter.com'\r\n};\r\n/**\r\n * Enumeration of supported sign-in methods.\r\n *\r\n * @public\r\n */\r\nconst SignInMethod = {\r\n    /** Email link sign in method */\r\n    EMAIL_LINK: 'emailLink',\r\n    /** Email/password sign in method */\r\n    EMAIL_PASSWORD: 'password',\r\n    /** Facebook sign in method */\r\n    FACEBOOK: 'facebook.com',\r\n    /** GitHub sign in method */\r\n    GITHUB: 'github.com',\r\n    /** Google sign in method */\r\n    GOOGLE: 'google.com',\r\n    /** Phone sign in method */\r\n    PHONE: 'phone',\r\n    /** Twitter sign in method */\r\n    TWITTER: 'twitter.com'\r\n};\r\n/**\r\n * Enumeration of supported operation types.\r\n *\r\n * @public\r\n */\r\nconst OperationType = {\r\n    /** Operation involving linking an additional provider to an already signed-in user. */\r\n    LINK: 'link',\r\n    /** Operation involving using a provider to reauthenticate an already signed-in user. */\r\n    REAUTHENTICATE: 'reauthenticate',\r\n    /** Operation involving signing in a user. */\r\n    SIGN_IN: 'signIn'\r\n};\r\n/**\r\n * An enumeration of the possible email action types.\r\n *\r\n * @public\r\n */\r\nconst ActionCodeOperation = {\r\n    /** The email link sign-in action. */\r\n    EMAIL_SIGNIN: 'EMAIL_SIGNIN',\r\n    /** The password reset action. */\r\n    PASSWORD_RESET: 'PASSWORD_RESET',\r\n    /** The email revocation action. */\r\n    RECOVER_EMAIL: 'RECOVER_EMAIL',\r\n    /** The revert second factor addition email action. */\r\n    REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\r\n    /** The revert second factor addition email action. */\r\n    VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\r\n    /** The email verification action. */\r\n    VERIFY_EMAIL: 'VERIFY_EMAIL'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _debugErrorMap() {\r\n    return {\r\n        [\"admin-restricted-operation\" /* AuthErrorCode.ADMIN_ONLY_OPERATION */]: 'This operation is restricted to administrators only.',\r\n        [\"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */]: '',\r\n        [\"app-not-authorized\" /* AuthErrorCode.APP_NOT_AUTHORIZED */]: \"This app, identified by the domain where it's hosted, is not \" +\r\n            'authorized to use Firebase Authentication with the provided API key. ' +\r\n            'Review your key configuration in the Google API console.',\r\n        [\"app-not-installed\" /* AuthErrorCode.APP_NOT_INSTALLED */]: 'The requested mobile application corresponding to the identifier (' +\r\n            'Android package name or iOS bundle ID) provided is not installed on ' +\r\n            'this device.',\r\n        [\"captcha-check-failed\" /* AuthErrorCode.CAPTCHA_CHECK_FAILED */]: 'The reCAPTCHA response token provided is either invalid, expired, ' +\r\n            'already used or the domain associated with it does not match the list ' +\r\n            'of whitelisted domains.',\r\n        [\"code-expired\" /* AuthErrorCode.CODE_EXPIRED */]: 'The SMS code has expired. Please re-send the verification code to try ' +\r\n            'again.',\r\n        [\"cordova-not-ready\" /* AuthErrorCode.CORDOVA_NOT_READY */]: 'Cordova framework is not ready.',\r\n        [\"cors-unsupported\" /* AuthErrorCode.CORS_UNSUPPORTED */]: 'This browser is not supported.',\r\n        [\"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */]: 'This credential is already associated with a different user account.',\r\n        [\"custom-token-mismatch\" /* AuthErrorCode.CREDENTIAL_MISMATCH */]: 'The custom token corresponds to a different audience.',\r\n        [\"requires-recent-login\" /* AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: 'This operation is sensitive and requires recent authentication. Log in ' +\r\n            'again before retrying this request.',\r\n        [\"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\r\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\r\n            'starting any other Firebase SDK.',\r\n        [\"dynamic-link-not-activated\" /* AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED */]: 'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\r\n            'conditions.',\r\n        [\"email-change-needs-verification\" /* AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION */]: 'Multi-factor users must always have a verified email.',\r\n        [\"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */]: 'The email address is already in use by another account.',\r\n        [\"emulator-config-failed\" /* AuthErrorCode.EMULATOR_CONFIG_FAILED */]: 'Auth instance has already been used to make a network call. Auth can ' +\r\n            'no longer be configured to use the emulator. Try calling ' +\r\n            '\"connectAuthEmulator()\" sooner.',\r\n        [\"expired-action-code\" /* AuthErrorCode.EXPIRED_OOB_CODE */]: 'The action code has expired.',\r\n        [\"cancelled-popup-request\" /* AuthErrorCode.EXPIRED_POPUP_REQUEST */]: 'This operation has been cancelled due to another conflicting popup being opened.',\r\n        [\"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */]: 'An internal AuthError has occurred.',\r\n        [\"invalid-app-credential\" /* AuthErrorCode.INVALID_APP_CREDENTIAL */]: 'The phone verification request contains an invalid application verifier.' +\r\n            ' The reCAPTCHA token response is either invalid or expired.',\r\n        [\"invalid-app-id\" /* AuthErrorCode.INVALID_APP_ID */]: 'The mobile app identifier is not registed for the current project.',\r\n        [\"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */]: \"This user's credential isn't valid for this project. This can happen \" +\r\n            \"if the user's token has been tampered with, or if the user isn't for \" +\r\n            'the project associated with this API key.',\r\n        [\"invalid-auth-event\" /* AuthErrorCode.INVALID_AUTH_EVENT */]: 'An internal AuthError has occurred.',\r\n        [\"invalid-verification-code\" /* AuthErrorCode.INVALID_CODE */]: 'The SMS verification code used to create the phone auth credential is ' +\r\n            'invalid. Please resend the verification code sms and be sure to use the ' +\r\n            'verification code provided by the user.',\r\n        [\"invalid-continue-uri\" /* AuthErrorCode.INVALID_CONTINUE_URI */]: 'The continue URL provided in the request is invalid.',\r\n        [\"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */]: 'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\r\n            'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\r\n            'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\r\n            'cordova-plugin-customurlscheme.',\r\n        [\"invalid-custom-token\" /* AuthErrorCode.INVALID_CUSTOM_TOKEN */]: 'The custom token format is incorrect. Please check the documentation.',\r\n        [\"invalid-dynamic-link-domain\" /* AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN */]: 'The provided dynamic link domain is not configured or authorized for the current project.',\r\n        [\"invalid-email\" /* AuthErrorCode.INVALID_EMAIL */]: 'The email address is badly formatted.',\r\n        [\"invalid-emulator-scheme\" /* AuthErrorCode.INVALID_EMULATOR_SCHEME */]: 'Emulator URL must start with a valid scheme (http:// or https://).',\r\n        [\"invalid-api-key\" /* AuthErrorCode.INVALID_API_KEY */]: 'Your API key is invalid, please check you have copied it correctly.',\r\n        [\"invalid-cert-hash\" /* AuthErrorCode.INVALID_CERT_HASH */]: 'The SHA-1 certificate hash provided is invalid.',\r\n        [\"invalid-credential\" /* AuthErrorCode.INVALID_IDP_RESPONSE */]: 'The supplied auth credential is malformed or has expired.',\r\n        [\"invalid-message-payload\" /* AuthErrorCode.INVALID_MESSAGE_PAYLOAD */]: 'The email template corresponding to this action contains invalid characters in its message. ' +\r\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\r\n        [\"invalid-multi-factor-session\" /* AuthErrorCode.INVALID_MFA_SESSION */]: 'The request does not contain a valid proof of first factor successful sign-in.',\r\n        [\"invalid-oauth-provider\" /* AuthErrorCode.INVALID_OAUTH_PROVIDER */]: 'EmailAuthProvider is not supported for this operation. This operation ' +\r\n            'only supports OAuth providers.',\r\n        [\"invalid-oauth-client-id\" /* AuthErrorCode.INVALID_OAUTH_CLIENT_ID */]: 'The OAuth client ID provided is either invalid or does not match the ' +\r\n            'specified API key.',\r\n        [\"unauthorized-domain\" /* AuthErrorCode.INVALID_ORIGIN */]: 'This domain is not authorized for OAuth operations for your Firebase ' +\r\n            'project. Edit the list of authorized domains from the Firebase console.',\r\n        [\"invalid-action-code\" /* AuthErrorCode.INVALID_OOB_CODE */]: 'The action code is invalid. This can happen if the code is malformed, ' +\r\n            'expired, or has already been used.',\r\n        [\"wrong-password\" /* AuthErrorCode.INVALID_PASSWORD */]: 'The password is invalid or the user does not have a password.',\r\n        [\"invalid-persistence-type\" /* AuthErrorCode.INVALID_PERSISTENCE */]: 'The specified persistence type is invalid. It can only be local, session or none.',\r\n        [\"invalid-phone-number\" /* AuthErrorCode.INVALID_PHONE_NUMBER */]: 'The format of the phone number provided is incorrect. Please enter the ' +\r\n            'phone number in a format that can be parsed into E.164 format. E.164 ' +\r\n            'phone numbers are written in the format [+][country code][subscriber ' +\r\n            'number including area code].',\r\n        [\"invalid-provider-id\" /* AuthErrorCode.INVALID_PROVIDER_ID */]: 'The specified provider ID is invalid.',\r\n        [\"invalid-recipient-email\" /* AuthErrorCode.INVALID_RECIPIENT_EMAIL */]: 'The email corresponding to this action failed to send as the provided ' +\r\n            'recipient email address is invalid.',\r\n        [\"invalid-sender\" /* AuthErrorCode.INVALID_SENDER */]: 'The email template corresponding to this action contains an invalid sender email or name. ' +\r\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\r\n        [\"invalid-verification-id\" /* AuthErrorCode.INVALID_SESSION_INFO */]: 'The verification ID used to create the phone auth credential is invalid.',\r\n        [\"invalid-tenant-id\" /* AuthErrorCode.INVALID_TENANT_ID */]: \"The Auth instance's tenant ID is invalid.\",\r\n        [\"login-blocked\" /* AuthErrorCode.LOGIN_BLOCKED */]: 'Login blocked by user-provided method: {$originalMessage}',\r\n        [\"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */]: 'An Android Package Name must be provided if the Android App is required to be installed.',\r\n        [\"auth-domain-config-required\" /* AuthErrorCode.MISSING_AUTH_DOMAIN */]: 'Be sure to include authDomain when calling firebase.initializeApp(), ' +\r\n            'by following the instructions in the Firebase console.',\r\n        [\"missing-app-credential\" /* AuthErrorCode.MISSING_APP_CREDENTIAL */]: 'The phone verification request is missing an application verifier ' +\r\n            'assertion. A reCAPTCHA response token needs to be provided.',\r\n        [\"missing-verification-code\" /* AuthErrorCode.MISSING_CODE */]: 'The phone auth credential was created with an empty SMS verification code.',\r\n        [\"missing-continue-uri\" /* AuthErrorCode.MISSING_CONTINUE_URI */]: 'A continue URL must be provided in the request.',\r\n        [\"missing-iframe-start\" /* AuthErrorCode.MISSING_IFRAME_START */]: 'An internal AuthError has occurred.',\r\n        [\"missing-ios-bundle-id\" /* AuthErrorCode.MISSING_IOS_BUNDLE_ID */]: 'An iOS Bundle ID must be provided if an App Store ID is provided.',\r\n        [\"missing-or-invalid-nonce\" /* AuthErrorCode.MISSING_OR_INVALID_NONCE */]: 'The request does not contain a valid nonce. This can occur if the ' +\r\n            'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\r\n            'in the ID token payload.',\r\n        [\"missing-password\" /* AuthErrorCode.MISSING_PASSWORD */]: 'A non-empty password must be provided',\r\n        [\"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */]: 'No second factor identifier is provided.',\r\n        [\"missing-multi-factor-session\" /* AuthErrorCode.MISSING_MFA_SESSION */]: 'The request is missing proof of first factor successful sign-in.',\r\n        [\"missing-phone-number\" /* AuthErrorCode.MISSING_PHONE_NUMBER */]: 'To send verification codes, provide a phone number for the recipient.',\r\n        [\"missing-verification-id\" /* AuthErrorCode.MISSING_SESSION_INFO */]: 'The phone auth credential was created with an empty verification ID.',\r\n        [\"app-deleted\" /* AuthErrorCode.MODULE_DESTROYED */]: 'This instance of FirebaseApp has been deleted.',\r\n        [\"multi-factor-info-not-found\" /* AuthErrorCode.MFA_INFO_NOT_FOUND */]: 'The user does not have a second factor matching the identifier provided.',\r\n        [\"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */]: 'Proof of ownership of a second factor is required to complete sign-in.',\r\n        [\"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */]: 'An account already exists with the same email address but different ' +\r\n            'sign-in credentials. Sign in using a provider associated with this ' +\r\n            'email address.',\r\n        [\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */]: 'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\r\n        [\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */]: 'An internal AuthError has occurred.',\r\n        [\"no-such-provider\" /* AuthErrorCode.NO_SUCH_PROVIDER */]: 'User was not linked to an account with the given provider.',\r\n        [\"null-user\" /* AuthErrorCode.NULL_USER */]: 'A null user object was provided as the argument for an operation which ' +\r\n            'requires a non-null user object.',\r\n        [\"operation-not-allowed\" /* AuthErrorCode.OPERATION_NOT_ALLOWED */]: 'The given sign-in provider is disabled for this Firebase project. ' +\r\n            'Enable it in the Firebase console, under the sign-in method tab of the ' +\r\n            'Auth section.',\r\n        [\"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */]: 'This operation is not supported in the environment this application is ' +\r\n            'running on. \"location.protocol\" must be http, https or chrome-extension' +\r\n            ' and web storage must be enabled.',\r\n        [\"popup-blocked\" /* AuthErrorCode.POPUP_BLOCKED */]: 'Unable to establish a connection with the popup. It may have been blocked by the browser.',\r\n        [\"popup-closed-by-user\" /* AuthErrorCode.POPUP_CLOSED_BY_USER */]: 'The popup has been closed by the user before finalizing the operation.',\r\n        [\"provider-already-linked\" /* AuthErrorCode.PROVIDER_ALREADY_LINKED */]: 'User can only be linked to one identity for the given provider.',\r\n        [\"quota-exceeded\" /* AuthErrorCode.QUOTA_EXCEEDED */]: \"The project's quota for this operation has been exceeded.\",\r\n        [\"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */]: 'The redirect operation has been cancelled by the user before finalizing.',\r\n        [\"redirect-operation-pending\" /* AuthErrorCode.REDIRECT_OPERATION_PENDING */]: 'A redirect sign-in operation is already pending.',\r\n        [\"rejected-credential\" /* AuthErrorCode.REJECTED_CREDENTIAL */]: 'The request contains malformed or mismatching credentials.',\r\n        [\"second-factor-already-in-use\" /* AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED */]: 'The second factor is already enrolled on this account.',\r\n        [\"maximum-second-factor-count-exceeded\" /* AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED */]: 'The maximum allowed number of second factors on a user has been exceeded.',\r\n        [\"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */]: \"The provided tenant ID does not match the Auth instance's tenant ID\",\r\n        [\"timeout\" /* AuthErrorCode.TIMEOUT */]: 'The operation has timed out.',\r\n        [\"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */]: \"The user's credential is no longer valid. The user must sign in again.\",\r\n        [\"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */]: 'We have blocked all requests from this device due to unusual activity. ' +\r\n            'Try again later.',\r\n        [\"unauthorized-continue-uri\" /* AuthErrorCode.UNAUTHORIZED_DOMAIN */]: 'The domain of the continue URL is not whitelisted.  Please whitelist ' +\r\n            'the domain in the Firebase console.',\r\n        [\"unsupported-first-factor\" /* AuthErrorCode.UNSUPPORTED_FIRST_FACTOR */]: 'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\r\n        [\"unsupported-persistence-type\" /* AuthErrorCode.UNSUPPORTED_PERSISTENCE */]: 'The current environment does not support the specified persistence type.',\r\n        [\"unsupported-tenant-operation\" /* AuthErrorCode.UNSUPPORTED_TENANT_OPERATION */]: 'This operation is not supported in a multi-tenant context.',\r\n        [\"unverified-email\" /* AuthErrorCode.UNVERIFIED_EMAIL */]: 'The operation requires a verified email.',\r\n        [\"user-cancelled\" /* AuthErrorCode.USER_CANCELLED */]: 'The user did not grant your application the permissions it requested.',\r\n        [\"user-not-found\" /* AuthErrorCode.USER_DELETED */]: 'There is no user record corresponding to this identifier. The user may ' +\r\n            'have been deleted.',\r\n        [\"user-disabled\" /* AuthErrorCode.USER_DISABLED */]: 'The user account has been disabled by an administrator.',\r\n        [\"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */]: 'The supplied credentials do not correspond to the previously signed in user.',\r\n        [\"user-signed-out\" /* AuthErrorCode.USER_SIGNED_OUT */]: '',\r\n        [\"weak-password\" /* AuthErrorCode.WEAK_PASSWORD */]: 'The password must be 6 characters long or more.',\r\n        [\"web-storage-unsupported\" /* AuthErrorCode.WEB_STORAGE_UNSUPPORTED */]: 'This browser is not supported or 3rd party cookies and data may be disabled.',\r\n        [\"already-initialized\" /* AuthErrorCode.ALREADY_INITIALIZED */]: 'initializeAuth() has already been called with ' +\r\n            'different options. To avoid this error, call initializeAuth() with the ' +\r\n            'same options as when it was originally called, or call getAuth() to return the' +\r\n            ' already initialized instance.',\r\n        [\"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */]: 'The reCAPTCHA token is missing when sending request to the backend.',\r\n        [\"invalid-recaptcha-token\" /* AuthErrorCode.INVALID_RECAPTCHA_TOKEN */]: 'The reCAPTCHA token is invalid when sending request to the backend.',\r\n        [\"invalid-recaptcha-action\" /* AuthErrorCode.INVALID_RECAPTCHA_ACTION */]: 'The reCAPTCHA action is invalid when sending request to the backend.',\r\n        [\"recaptcha-not-enabled\" /* AuthErrorCode.RECAPTCHA_NOT_ENABLED */]: 'reCAPTCHA Enterprise integration is not enabled for this project.',\r\n        [\"missing-client-type\" /* AuthErrorCode.MISSING_CLIENT_TYPE */]: 'The reCAPTCHA client type is missing when sending request to the backend.',\r\n        [\"missing-recaptcha-version\" /* AuthErrorCode.MISSING_RECAPTCHA_VERSION */]: 'The reCAPTCHA version is missing when sending request to the backend.',\r\n        [\"invalid-req-type\" /* AuthErrorCode.INVALID_REQ_TYPE */]: 'Invalid request parameters.',\r\n        [\"invalid-recaptcha-version\" /* AuthErrorCode.INVALID_RECAPTCHA_VERSION */]: 'The reCAPTCHA version is invalid when sending request to the backend.',\r\n        [\"unsupported-password-policy-schema-version\" /* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */]: 'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.',\r\n        [\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */]: 'The password does not meet the requirements.'\r\n    };\r\n}\r\nfunction _prodErrorMap() {\r\n    // We will include this one message in the prod error map since by the very\r\n    // nature of this error, developers will never be able to see the message\r\n    // using the debugErrorMap (which is installed during auth initialization).\r\n    return {\r\n        [\"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\r\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\r\n            'starting any other Firebase SDK.'\r\n    };\r\n}\r\n/**\r\n * A verbose error map with detailed descriptions for most error codes.\r\n *\r\n * See discussion at {@link AuthErrorMap}\r\n *\r\n * @public\r\n */\r\nconst debugErrorMap = _debugErrorMap;\r\n/**\r\n * A minimal error map with all verbose error messages stripped.\r\n *\r\n * See discussion at {@link AuthErrorMap}\r\n *\r\n * @public\r\n */\r\nconst prodErrorMap = _prodErrorMap;\r\nconst _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory('auth', 'Firebase', _prodErrorMap());\r\n/**\r\n * A map of potential `Auth` error codes, for easier comparison with errors\r\n * thrown by the SDK.\r\n *\r\n * @remarks\r\n * Note that you can't tree-shake individual keys\r\n * in the map, so by using the map you might substantially increase your\r\n * bundle size.\r\n *\r\n * @public\r\n */\r\nconst AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\r\n    ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\r\n    ARGUMENT_ERROR: 'auth/argument-error',\r\n    APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\r\n    APP_NOT_INSTALLED: 'auth/app-not-installed',\r\n    CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\r\n    CODE_EXPIRED: 'auth/code-expired',\r\n    CORDOVA_NOT_READY: 'auth/cordova-not-ready',\r\n    CORS_UNSUPPORTED: 'auth/cors-unsupported',\r\n    CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\r\n    CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\r\n    CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\r\n    DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\r\n    DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\r\n    EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\r\n    EMAIL_EXISTS: 'auth/email-already-in-use',\r\n    EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\r\n    EXPIRED_OOB_CODE: 'auth/expired-action-code',\r\n    EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\r\n    INTERNAL_ERROR: 'auth/internal-error',\r\n    INVALID_API_KEY: 'auth/invalid-api-key',\r\n    INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\r\n    INVALID_APP_ID: 'auth/invalid-app-id',\r\n    INVALID_AUTH: 'auth/invalid-user-token',\r\n    INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\r\n    INVALID_CERT_HASH: 'auth/invalid-cert-hash',\r\n    INVALID_CODE: 'auth/invalid-verification-code',\r\n    INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\r\n    INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\r\n    INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\r\n    INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\r\n    INVALID_EMAIL: 'auth/invalid-email',\r\n    INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\r\n    INVALID_IDP_RESPONSE: 'auth/invalid-credential',\r\n    INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\r\n    INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\r\n    INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\r\n    INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\r\n    INVALID_OOB_CODE: 'auth/invalid-action-code',\r\n    INVALID_ORIGIN: 'auth/unauthorized-domain',\r\n    INVALID_PASSWORD: 'auth/wrong-password',\r\n    INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\r\n    INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\r\n    INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\r\n    INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\r\n    INVALID_SENDER: 'auth/invalid-sender',\r\n    INVALID_SESSION_INFO: 'auth/invalid-verification-id',\r\n    INVALID_TENANT_ID: 'auth/invalid-tenant-id',\r\n    MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\r\n    MFA_REQUIRED: 'auth/multi-factor-auth-required',\r\n    MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\r\n    MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\r\n    MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\r\n    MISSING_CODE: 'auth/missing-verification-code',\r\n    MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\r\n    MISSING_IFRAME_START: 'auth/missing-iframe-start',\r\n    MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\r\n    MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\r\n    MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\r\n    MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\r\n    MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\r\n    MISSING_SESSION_INFO: 'auth/missing-verification-id',\r\n    MODULE_DESTROYED: 'auth/app-deleted',\r\n    NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\r\n    NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\r\n    NULL_USER: 'auth/null-user',\r\n    NO_AUTH_EVENT: 'auth/no-auth-event',\r\n    NO_SUCH_PROVIDER: 'auth/no-such-provider',\r\n    OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\r\n    OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\r\n    POPUP_BLOCKED: 'auth/popup-blocked',\r\n    POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\r\n    PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\r\n    QUOTA_EXCEEDED: 'auth/quota-exceeded',\r\n    REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\r\n    REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\r\n    REJECTED_CREDENTIAL: 'auth/rejected-credential',\r\n    SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\r\n    SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\r\n    TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\r\n    TIMEOUT: 'auth/timeout',\r\n    TOKEN_EXPIRED: 'auth/user-token-expired',\r\n    TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\r\n    UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\r\n    UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\r\n    UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\r\n    UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\r\n    UNVERIFIED_EMAIL: 'auth/unverified-email',\r\n    USER_CANCELLED: 'auth/user-cancelled',\r\n    USER_DELETED: 'auth/user-not-found',\r\n    USER_DISABLED: 'auth/user-disabled',\r\n    USER_MISMATCH: 'auth/user-mismatch',\r\n    USER_SIGNED_OUT: 'auth/user-signed-out',\r\n    WEAK_PASSWORD: 'auth/weak-password',\r\n    WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\r\n    ALREADY_INITIALIZED: 'auth/already-initialized',\r\n    RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\r\n    MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\r\n    INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\r\n    INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\r\n    MISSING_CLIENT_TYPE: 'auth/missing-client-type',\r\n    MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\r\n    INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\r\n    INVALID_REQ_TYPE: 'auth/invalid-req-type'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/auth');\r\nfunction _logWarn(msg, ...args) {\r\n    if (logClient.logLevel <= LogLevel.WARN) {\r\n        logClient.warn(`Auth (${SDK_VERSION}): ${msg}`, ...args);\r\n    }\r\n}\r\nfunction _logError(msg, ...args) {\r\n    if (logClient.logLevel <= LogLevel.ERROR) {\r\n        logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _fail(authOrCode, ...rest) {\r\n    throw createErrorInternal(authOrCode, ...rest);\r\n}\r\nfunction _createError(authOrCode, ...rest) {\r\n    return createErrorInternal(authOrCode, ...rest);\r\n}\r\nfunction _errorWithCustomMessage(auth, code, message) {\r\n    const errorMap = Object.assign(Object.assign({}, prodErrorMap()), { [code]: message });\r\n    const factory = new ErrorFactory('auth', 'Firebase', errorMap);\r\n    return factory.create(code, {\r\n        appName: auth.name\r\n    });\r\n}\r\nfunction _assertInstanceOf(auth, object, instance) {\r\n    const constructorInstance = instance;\r\n    if (!(object instanceof constructorInstance)) {\r\n        if (constructorInstance.name !== object.constructor.name) {\r\n            _fail(auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        }\r\n        throw _errorWithCustomMessage(auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */, `Type of ${object.constructor.name} does not match expected instance.` +\r\n            `Did you pass a reference from a different Auth SDK?`);\r\n    }\r\n}\r\nfunction createErrorInternal(authOrCode, ...rest) {\r\n    if (typeof authOrCode !== 'string') {\r\n        const code = rest[0];\r\n        const fullParams = [...rest.slice(1)];\r\n        if (fullParams[0]) {\r\n            fullParams[0].appName = authOrCode.name;\r\n        }\r\n        return authOrCode._errorFactory.create(code, ...fullParams);\r\n    }\r\n    return _DEFAULT_AUTH_ERROR_FACTORY.create(authOrCode, ...rest);\r\n}\r\nfunction _assert(assertion, authOrCode, ...rest) {\r\n    if (!assertion) {\r\n        throw createErrorInternal(authOrCode, ...rest);\r\n    }\r\n}\r\n/**\r\n * Unconditionally fails, throwing an internal error with the given message.\r\n *\r\n * @param failure type of failure encountered\r\n * @throws Error\r\n */\r\nfunction debugFail(failure) {\r\n    // Log the failure in addition to throw an exception, just in case the\r\n    // exception is swallowed.\r\n    const message = `INTERNAL ASSERTION FAILED: ` + failure;\r\n    _logError(message);\r\n    // NOTE: We don't use FirebaseError here because these are internal failures\r\n    // that cannot be handled by the user. (Also it would create a circular\r\n    // dependency between the error and assert modules which doesn't work.)\r\n    throw new Error(message);\r\n}\r\n/**\r\n * Fails if the given assertion condition is false, throwing an Error with the\r\n * given message if it did.\r\n *\r\n * @param assertion\r\n * @param message\r\n */\r\nfunction debugAssert(assertion, message) {\r\n    if (!assertion) {\r\n        debugFail(message);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _getCurrentUrl() {\r\n    var _a;\r\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.href)) || '';\r\n}\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.protocol)) || null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Determine whether the browser is working online\r\n */\r\nfunction _isOnline() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        navigator &&\r\n        'onLine' in navigator &&\r\n        typeof navigator.onLine === 'boolean' &&\r\n        // Apply only for traditional web apps and Chrome extensions.\r\n        // This is especially true for Cordova apps which have unreliable\r\n        // navigator.onLine behavior unless cordova-plugin-network-information is\r\n        // installed which overwrites the native navigator.onLine value and\r\n        // defines navigator.connection.\r\n        (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)) {\r\n        return navigator.onLine;\r\n    }\r\n    // If we can't determine the state, assume it is online.\r\n    return true;\r\n}\r\nfunction _getUserLanguage() {\r\n    if (typeof navigator === 'undefined') {\r\n        return null;\r\n    }\r\n    const navigatorLanguage = navigator;\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language ||\r\n        // Couldn't determine language.\r\n        null);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A structure to help pick between a range of long and short delay durations\r\n * depending on the current environment. In general, the long delay is used for\r\n * mobile environments whereas short delays are used for desktop environments.\r\n */\r\nclass Delay {\r\n    constructor(shortDelay, longDelay) {\r\n        this.shortDelay = shortDelay;\r\n        this.longDelay = longDelay;\r\n        // Internal error when improperly initialized.\r\n        debugAssert(longDelay > shortDelay, 'Short delay should be less than long delay!');\r\n        this.isMobile = isMobileCordova() || isReactNative();\r\n    }\r\n    get() {\r\n        if (!_isOnline()) {\r\n            // Pick the shorter timeout.\r\n            return Math.min(5000 /* DelayMin.OFFLINE */, this.shortDelay);\r\n        }\r\n        // If running in a mobile environment, return the long delay, otherwise\r\n        // return the short delay.\r\n        // This could be improved in the future to dynamically change based on other\r\n        // variables instead of just reading the current environment.\r\n        return this.isMobile ? this.longDelay : this.shortDelay;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _emulatorUrl(config, path) {\r\n    debugAssert(config.emulator, 'Emulator should always be set here');\r\n    const { url } = config.emulator;\r\n    if (!path) {\r\n        return url;\r\n    }\r\n    return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FetchProvider {\r\n    static initialize(fetchImpl, headersImpl, responseImpl) {\r\n        this.fetchImpl = fetchImpl;\r\n        if (headersImpl) {\r\n            this.headersImpl = headersImpl;\r\n        }\r\n        if (responseImpl) {\r\n            this.responseImpl = responseImpl;\r\n        }\r\n    }\r\n    static fetch() {\r\n        if (this.fetchImpl) {\r\n            return this.fetchImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'fetch' in self) {\r\n            return self.fetch;\r\n        }\r\n        if (typeof globalThis !== 'undefined' && globalThis.fetch) {\r\n            return globalThis.fetch;\r\n        }\r\n        if (typeof fetch !== 'undefined') {\r\n            return fetch;\r\n        }\r\n        debugFail('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n    static headers() {\r\n        if (this.headersImpl) {\r\n            return this.headersImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'Headers' in self) {\r\n            return self.Headers;\r\n        }\r\n        if (typeof globalThis !== 'undefined' && globalThis.Headers) {\r\n            return globalThis.Headers;\r\n        }\r\n        if (typeof Headers !== 'undefined') {\r\n            return Headers;\r\n        }\r\n        debugFail('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n    static response() {\r\n        if (this.responseImpl) {\r\n            return this.responseImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'Response' in self) {\r\n            return self.Response;\r\n        }\r\n        if (typeof globalThis !== 'undefined' && globalThis.Response) {\r\n            return globalThis.Response;\r\n        }\r\n        if (typeof Response !== 'undefined') {\r\n            return Response;\r\n        }\r\n        debugFail('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Map from errors returned by the server to errors to developer visible errors\r\n */\r\nconst SERVER_ERROR_MAP = {\r\n    // Custom token errors.\r\n    [\"CREDENTIAL_MISMATCH\" /* ServerError.CREDENTIAL_MISMATCH */]: \"custom-token-mismatch\" /* AuthErrorCode.CREDENTIAL_MISMATCH */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_CUSTOM_TOKEN\" /* ServerError.MISSING_CUSTOM_TOKEN */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\r\n    // Create Auth URI errors.\r\n    [\"INVALID_IDENTIFIER\" /* ServerError.INVALID_IDENTIFIER */]: \"invalid-email\" /* AuthErrorCode.INVALID_EMAIL */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_CONTINUE_URI\" /* ServerError.MISSING_CONTINUE_URI */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\r\n    // Sign in with email and password errors (some apply to sign up too).\r\n    [\"INVALID_PASSWORD\" /* ServerError.INVALID_PASSWORD */]: \"wrong-password\" /* AuthErrorCode.INVALID_PASSWORD */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_PASSWORD\" /* ServerError.MISSING_PASSWORD */]: \"missing-password\" /* AuthErrorCode.MISSING_PASSWORD */,\r\n    // Sign up with email and password errors.\r\n    [\"EMAIL_EXISTS\" /* ServerError.EMAIL_EXISTS */]: \"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */,\r\n    [\"PASSWORD_LOGIN_DISABLED\" /* ServerError.PASSWORD_LOGIN_DISABLED */]: \"operation-not-allowed\" /* AuthErrorCode.OPERATION_NOT_ALLOWED */,\r\n    // Verify assertion for sign in with credential errors:\r\n    [\"INVALID_IDP_RESPONSE\" /* ServerError.INVALID_IDP_RESPONSE */]: \"invalid-credential\" /* AuthErrorCode.INVALID_IDP_RESPONSE */,\r\n    [\"INVALID_PENDING_TOKEN\" /* ServerError.INVALID_PENDING_TOKEN */]: \"invalid-credential\" /* AuthErrorCode.INVALID_IDP_RESPONSE */,\r\n    [\"FEDERATED_USER_ID_ALREADY_LINKED\" /* ServerError.FEDERATED_USER_ID_ALREADY_LINKED */]: \"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_REQ_TYPE\" /* ServerError.MISSING_REQ_TYPE */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\r\n    // Send Password reset email errors:\r\n    [\"EMAIL_NOT_FOUND\" /* ServerError.EMAIL_NOT_FOUND */]: \"user-not-found\" /* AuthErrorCode.USER_DELETED */,\r\n    [\"RESET_PASSWORD_EXCEED_LIMIT\" /* ServerError.RESET_PASSWORD_EXCEED_LIMIT */]: \"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */,\r\n    [\"EXPIRED_OOB_CODE\" /* ServerError.EXPIRED_OOB_CODE */]: \"expired-action-code\" /* AuthErrorCode.EXPIRED_OOB_CODE */,\r\n    [\"INVALID_OOB_CODE\" /* ServerError.INVALID_OOB_CODE */]: \"invalid-action-code\" /* AuthErrorCode.INVALID_OOB_CODE */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_OOB_CODE\" /* ServerError.MISSING_OOB_CODE */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\r\n    // Operations that require ID token in request:\r\n    [\"CREDENTIAL_TOO_OLD_LOGIN_AGAIN\" /* ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: \"requires-recent-login\" /* AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */,\r\n    [\"INVALID_ID_TOKEN\" /* ServerError.INVALID_ID_TOKEN */]: \"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */,\r\n    [\"TOKEN_EXPIRED\" /* ServerError.TOKEN_EXPIRED */]: \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */,\r\n    [\"USER_NOT_FOUND\" /* ServerError.USER_NOT_FOUND */]: \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */,\r\n    // Other errors.\r\n    [\"TOO_MANY_ATTEMPTS_TRY_LATER\" /* ServerError.TOO_MANY_ATTEMPTS_TRY_LATER */]: \"too-many-requests\" /* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */,\r\n    [\"PASSWORD_DOES_NOT_MEET_REQUIREMENTS\" /* ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */]: \"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */,\r\n    // Phone Auth related errors.\r\n    [\"INVALID_CODE\" /* ServerError.INVALID_CODE */]: \"invalid-verification-code\" /* AuthErrorCode.INVALID_CODE */,\r\n    [\"INVALID_SESSION_INFO\" /* ServerError.INVALID_SESSION_INFO */]: \"invalid-verification-id\" /* AuthErrorCode.INVALID_SESSION_INFO */,\r\n    [\"INVALID_TEMPORARY_PROOF\" /* ServerError.INVALID_TEMPORARY_PROOF */]: \"invalid-credential\" /* AuthErrorCode.INVALID_IDP_RESPONSE */,\r\n    [\"MISSING_SESSION_INFO\" /* ServerError.MISSING_SESSION_INFO */]: \"missing-verification-id\" /* AuthErrorCode.MISSING_SESSION_INFO */,\r\n    [\"SESSION_EXPIRED\" /* ServerError.SESSION_EXPIRED */]: \"code-expired\" /* AuthErrorCode.CODE_EXPIRED */,\r\n    // Other action code errors when additional settings passed.\r\n    // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\r\n    // This is OK as this error will be caught by client side validation.\r\n    [\"MISSING_ANDROID_PACKAGE_NAME\" /* ServerError.MISSING_ANDROID_PACKAGE_NAME */]: \"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */,\r\n    [\"UNAUTHORIZED_DOMAIN\" /* ServerError.UNAUTHORIZED_DOMAIN */]: \"unauthorized-continue-uri\" /* AuthErrorCode.UNAUTHORIZED_DOMAIN */,\r\n    // getProjectConfig errors when clientId is passed.\r\n    [\"INVALID_OAUTH_CLIENT_ID\" /* ServerError.INVALID_OAUTH_CLIENT_ID */]: \"invalid-oauth-client-id\" /* AuthErrorCode.INVALID_OAUTH_CLIENT_ID */,\r\n    // User actions (sign-up or deletion) disabled errors.\r\n    [\"ADMIN_ONLY_OPERATION\" /* ServerError.ADMIN_ONLY_OPERATION */]: \"admin-restricted-operation\" /* AuthErrorCode.ADMIN_ONLY_OPERATION */,\r\n    // Multi factor related errors.\r\n    [\"INVALID_MFA_PENDING_CREDENTIAL\" /* ServerError.INVALID_MFA_PENDING_CREDENTIAL */]: \"invalid-multi-factor-session\" /* AuthErrorCode.INVALID_MFA_SESSION */,\r\n    [\"MFA_ENROLLMENT_NOT_FOUND\" /* ServerError.MFA_ENROLLMENT_NOT_FOUND */]: \"multi-factor-info-not-found\" /* AuthErrorCode.MFA_INFO_NOT_FOUND */,\r\n    [\"MISSING_MFA_ENROLLMENT_ID\" /* ServerError.MISSING_MFA_ENROLLMENT_ID */]: \"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */,\r\n    [\"MISSING_MFA_PENDING_CREDENTIAL\" /* ServerError.MISSING_MFA_PENDING_CREDENTIAL */]: \"missing-multi-factor-session\" /* AuthErrorCode.MISSING_MFA_SESSION */,\r\n    [\"SECOND_FACTOR_EXISTS\" /* ServerError.SECOND_FACTOR_EXISTS */]: \"second-factor-already-in-use\" /* AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED */,\r\n    [\"SECOND_FACTOR_LIMIT_EXCEEDED\" /* ServerError.SECOND_FACTOR_LIMIT_EXCEEDED */]: \"maximum-second-factor-count-exceeded\" /* AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED */,\r\n    // Blocking functions related errors.\r\n    [\"BLOCKING_FUNCTION_ERROR_RESPONSE\" /* ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE */]: \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */,\r\n    // Recaptcha related errors.\r\n    [\"RECAPTCHA_NOT_ENABLED\" /* ServerError.RECAPTCHA_NOT_ENABLED */]: \"recaptcha-not-enabled\" /* AuthErrorCode.RECAPTCHA_NOT_ENABLED */,\r\n    [\"MISSING_RECAPTCHA_TOKEN\" /* ServerError.MISSING_RECAPTCHA_TOKEN */]: \"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */,\r\n    [\"INVALID_RECAPTCHA_TOKEN\" /* ServerError.INVALID_RECAPTCHA_TOKEN */]: \"invalid-recaptcha-token\" /* AuthErrorCode.INVALID_RECAPTCHA_TOKEN */,\r\n    [\"INVALID_RECAPTCHA_ACTION\" /* ServerError.INVALID_RECAPTCHA_ACTION */]: \"invalid-recaptcha-action\" /* AuthErrorCode.INVALID_RECAPTCHA_ACTION */,\r\n    [\"MISSING_CLIENT_TYPE\" /* ServerError.MISSING_CLIENT_TYPE */]: \"missing-client-type\" /* AuthErrorCode.MISSING_CLIENT_TYPE */,\r\n    [\"MISSING_RECAPTCHA_VERSION\" /* ServerError.MISSING_RECAPTCHA_VERSION */]: \"missing-recaptcha-version\" /* AuthErrorCode.MISSING_RECAPTCHA_VERSION */,\r\n    [\"INVALID_RECAPTCHA_VERSION\" /* ServerError.INVALID_RECAPTCHA_VERSION */]: \"invalid-recaptcha-version\" /* AuthErrorCode.INVALID_RECAPTCHA_VERSION */,\r\n    [\"INVALID_REQ_TYPE\" /* ServerError.INVALID_REQ_TYPE */]: \"invalid-req-type\" /* AuthErrorCode.INVALID_REQ_TYPE */\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_API_TIMEOUT_MS = new Delay(30000, 60000);\r\nfunction _addTidIfNecessary(auth, request) {\r\n    if (auth.tenantId && !request.tenantId) {\r\n        return Object.assign(Object.assign({}, request), { tenantId: auth.tenantId });\r\n    }\r\n    return request;\r\n}\r\nasync function _performApiRequest(auth, method, path, request, customErrorMap = {}) {\r\n    return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\r\n        let body = {};\r\n        let params = {};\r\n        if (request) {\r\n            if (method === \"GET\" /* HttpMethod.GET */) {\r\n                params = request;\r\n            }\r\n            else {\r\n                body = {\r\n                    body: JSON.stringify(request)\r\n                };\r\n            }\r\n        }\r\n        const query = querystring(Object.assign({ key: auth.config.apiKey }, params)).slice(1);\r\n        const headers = await auth._getAdditionalHeaders();\r\n        headers[\"Content-Type\" /* HttpHeader.CONTENT_TYPE */] = 'application/json';\r\n        if (auth.languageCode) {\r\n            headers[\"X-Firebase-Locale\" /* HttpHeader.X_FIREBASE_LOCALE */] = auth.languageCode;\r\n        }\r\n        return FetchProvider.fetch()(_getFinalTarget(auth, auth.config.apiHost, path, query), Object.assign({ method,\r\n            headers, referrerPolicy: 'no-referrer' }, body));\r\n    });\r\n}\r\nasync function _performFetchWithErrorHandling(auth, customErrorMap, fetchFn) {\r\n    auth._canInitEmulator = false;\r\n    const errorMap = Object.assign(Object.assign({}, SERVER_ERROR_MAP), customErrorMap);\r\n    try {\r\n        const networkTimeout = new NetworkTimeout(auth);\r\n        const response = await Promise.race([\r\n            fetchFn(),\r\n            networkTimeout.promise\r\n        ]);\r\n        // If we've reached this point, the fetch succeeded and the networkTimeout\r\n        // didn't throw; clear the network timeout delay so that Node won't hang\r\n        networkTimeout.clearNetworkTimeout();\r\n        const json = await response.json();\r\n        if ('needConfirmation' in json) {\r\n            throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */, json);\r\n        }\r\n        if (response.ok && !('errorMessage' in json)) {\r\n            return json;\r\n        }\r\n        else {\r\n            const errorMessage = response.ok ? json.errorMessage : json.error.message;\r\n            const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\r\n            if (serverErrorCode === \"FEDERATED_USER_ID_ALREADY_LINKED\" /* ServerError.FEDERATED_USER_ID_ALREADY_LINKED */) {\r\n                throw _makeTaggedError(auth, \"credential-already-in-use\" /* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */, json);\r\n            }\r\n            else if (serverErrorCode === \"EMAIL_EXISTS\" /* ServerError.EMAIL_EXISTS */) {\r\n                throw _makeTaggedError(auth, \"email-already-in-use\" /* AuthErrorCode.EMAIL_EXISTS */, json);\r\n            }\r\n            else if (serverErrorCode === \"USER_DISABLED\" /* ServerError.USER_DISABLED */) {\r\n                throw _makeTaggedError(auth, \"user-disabled\" /* AuthErrorCode.USER_DISABLED */, json);\r\n            }\r\n            const authError = errorMap[serverErrorCode] ||\r\n                serverErrorCode\r\n                    .toLowerCase()\r\n                    .replace(/[_\\s]+/g, '-');\r\n            if (serverErrorMessage) {\r\n                throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\r\n            }\r\n            else {\r\n                _fail(auth, authError);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            throw e;\r\n        }\r\n        // Changing this to a different error code will log user out when there is a network error\r\n        // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\r\n        // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\r\n        _fail(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */, { 'message': String(e) });\r\n    }\r\n}\r\nasync function _performSignInRequest(auth, method, path, request, customErrorMap = {}) {\r\n    const serverResponse = (await _performApiRequest(auth, method, path, request, customErrorMap));\r\n    if ('mfaPendingCredential' in serverResponse) {\r\n        _fail(auth, \"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */, {\r\n            _serverResponse: serverResponse\r\n        });\r\n    }\r\n    return serverResponse;\r\n}\r\nfunction _getFinalTarget(auth, host, path, query) {\r\n    const base = `${host}${path}?${query}`;\r\n    if (!auth.config.emulator) {\r\n        return `${auth.config.apiScheme}://${base}`;\r\n    }\r\n    return _emulatorUrl(auth.config, base);\r\n}\r\nfunction _parseEnforcementState(enforcementStateStr) {\r\n    switch (enforcementStateStr) {\r\n        case 'ENFORCE':\r\n            return \"ENFORCE\" /* EnforcementState.ENFORCE */;\r\n        case 'AUDIT':\r\n            return \"AUDIT\" /* EnforcementState.AUDIT */;\r\n        case 'OFF':\r\n            return \"OFF\" /* EnforcementState.OFF */;\r\n        default:\r\n            return \"ENFORCEMENT_STATE_UNSPECIFIED\" /* EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED */;\r\n    }\r\n}\r\nclass NetworkTimeout {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        // Node timers and browser timers are fundamentally incompatible, but we\r\n        // don't care about the value here\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.timer = null;\r\n        this.promise = new Promise((_, reject) => {\r\n            this.timer = setTimeout(() => {\r\n                return reject(_createError(this.auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\r\n            }, DEFAULT_API_TIMEOUT_MS.get());\r\n        });\r\n    }\r\n    clearNetworkTimeout() {\r\n        clearTimeout(this.timer);\r\n    }\r\n}\r\nfunction _makeTaggedError(auth, code, response) {\r\n    const errorParams = {\r\n        appName: auth.name\r\n    };\r\n    if (response.email) {\r\n        errorParams.email = response.email;\r\n    }\r\n    if (response.phoneNumber) {\r\n        errorParams.phoneNumber = response.phoneNumber;\r\n    }\r\n    const error = _createError(auth, code, errorParams);\r\n    // We know customData is defined on error because errorParams is defined\r\n    error.customData._tokenResponse = response;\r\n    return error;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isV2(grecaptcha) {\r\n    return (grecaptcha !== undefined &&\r\n        grecaptcha.getResponse !== undefined);\r\n}\r\nfunction isEnterprise(grecaptcha) {\r\n    return (grecaptcha !== undefined &&\r\n        grecaptcha.enterprise !== undefined);\r\n}\r\nclass RecaptchaConfig {\r\n    constructor(response) {\r\n        /**\r\n         * The reCAPTCHA site key.\r\n         */\r\n        this.siteKey = '';\r\n        /**\r\n         * The list of providers and their enablement status for reCAPTCHA Enterprise.\r\n         */\r\n        this.recaptchaEnforcementState = [];\r\n        if (response.recaptchaKey === undefined) {\r\n            throw new Error('recaptchaKey undefined');\r\n        }\r\n        // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\r\n        this.siteKey = response.recaptchaKey.split('/')[3];\r\n        this.recaptchaEnforcementState = response.recaptchaEnforcementState;\r\n    }\r\n    /**\r\n     * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\r\n     *\r\n     * @param providerStr - The provider whose enforcement state is to be returned.\r\n     * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\r\n     */\r\n    getProviderEnforcementState(providerStr) {\r\n        if (!this.recaptchaEnforcementState ||\r\n            this.recaptchaEnforcementState.length === 0) {\r\n            return null;\r\n        }\r\n        for (const recaptchaEnforcementState of this.recaptchaEnforcementState) {\r\n            if (recaptchaEnforcementState.provider &&\r\n                recaptchaEnforcementState.provider === providerStr) {\r\n                return _parseEnforcementState(recaptchaEnforcementState.enforcementState);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\r\n     *\r\n     * @param providerStr - The provider whose enablement state is to be returned.\r\n     * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\r\n     */\r\n    isProviderEnabled(providerStr) {\r\n        return (this.getProviderEnforcementState(providerStr) ===\r\n            \"ENFORCE\" /* EnforcementState.ENFORCE */ ||\r\n            this.getProviderEnforcementState(providerStr) === \"AUDIT\" /* EnforcementState.AUDIT */);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function getRecaptchaParams(auth) {\r\n    return ((await _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v1/recaptchaParams\" /* Endpoint.GET_RECAPTCHA_PARAM */)).recaptchaSiteKey || '');\r\n}\r\nasync function getRecaptchaConfig(auth, request) {\r\n    return _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/recaptchaConfig\" /* Endpoint.GET_RECAPTCHA_CONFIG */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteAccount(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:delete\" /* Endpoint.DELETE_ACCOUNT */, request);\r\n}\r\nasync function deleteLinkedAccounts(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request);\r\n}\r\nasync function getAccountInfo(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:lookup\" /* Endpoint.GET_ACCOUNT_INFO */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction utcTimestampToDateString(utcTimestamp) {\r\n    if (!utcTimestamp) {\r\n        return undefined;\r\n    }\r\n    try {\r\n        // Convert to date object.\r\n        const date = new Date(Number(utcTimestamp));\r\n        // Test date is valid.\r\n        if (!isNaN(date.getTime())) {\r\n            // Convert to UTC date string.\r\n            return date.toUTCString();\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Do nothing. undefined will be returned.\r\n    }\r\n    return undefined;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\r\n *\r\n * @remarks\r\n * Returns the current token if it has not expired or if it will not expire in the next five\r\n * minutes. Otherwise, this will refresh the token and return a new one.\r\n *\r\n * @param user - The user.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nfunction getIdToken(user, forceRefresh = false) {\r\n    return getModularInstance(user).getIdToken(forceRefresh);\r\n}\r\n/**\r\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\r\n *\r\n * @remarks\r\n * Returns the current token if it has not expired or if it will not expire in the next five\r\n * minutes. Otherwise, this will refresh the token and return a new one.\r\n *\r\n * @param user - The user.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getIdTokenResult(user, forceRefresh = false) {\r\n    const userInternal = getModularInstance(user);\r\n    const token = await userInternal.getIdToken(forceRefresh);\r\n    const claims = _parseToken(token);\r\n    _assert(claims && claims.exp && claims.auth_time && claims.iat, userInternal.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    const firebase = typeof claims.firebase === 'object' ? claims.firebase : undefined;\r\n    const signInProvider = firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_provider'];\r\n    return {\r\n        claims,\r\n        token,\r\n        authTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.auth_time)),\r\n        issuedAtTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.iat)),\r\n        expirationTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.exp)),\r\n        signInProvider: signInProvider || null,\r\n        signInSecondFactor: (firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_second_factor']) || null\r\n    };\r\n}\r\nfunction secondsStringToMilliseconds(seconds) {\r\n    return Number(seconds) * 1000;\r\n}\r\nfunction _parseToken(token) {\r\n    const [algorithm, payload, signature] = token.split('.');\r\n    if (algorithm === undefined ||\r\n        payload === undefined ||\r\n        signature === undefined) {\r\n        _logError('JWT malformed, contained fewer than 3 sections');\r\n        return null;\r\n    }\r\n    try {\r\n        const decoded = base64Decode(payload);\r\n        if (!decoded) {\r\n            _logError('Failed to decode base64 JWT payload');\r\n            return null;\r\n        }\r\n        return JSON.parse(decoded);\r\n    }\r\n    catch (e) {\r\n        _logError('Caught error parsing JWT payload as JSON', e === null || e === void 0 ? void 0 : e.toString());\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\r\n */\r\nfunction _tokenExpiresIn(token) {\r\n    const parsedToken = _parseToken(token);\r\n    _assert(parsedToken, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    _assert(typeof parsedToken.exp !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    _assert(typeof parsedToken.iat !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    return Number(parsedToken.exp) - Number(parsedToken.iat);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _logoutIfInvalidated(user, promise, bypassAuthState = false) {\r\n    if (bypassAuthState) {\r\n        return promise;\r\n    }\r\n    try {\r\n        return await promise;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError && isUserInvalidated(e)) {\r\n            if (user.auth.currentUser === user) {\r\n                await user.auth.signOut();\r\n            }\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isUserInvalidated({ code }) {\r\n    return (code === `auth/${\"user-disabled\" /* AuthErrorCode.USER_DISABLED */}` ||\r\n        code === `auth/${\"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */}`);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ProactiveRefresh {\r\n    constructor(user) {\r\n        this.user = user;\r\n        this.isRunning = false;\r\n        // Node timers and browser timers return fundamentally different types.\r\n        // We don't actually care what the value is but TS won't accept unknown and\r\n        // we can't cast properly in both environments.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.timerId = null;\r\n        this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\r\n    }\r\n    _start() {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = true;\r\n        this.schedule();\r\n    }\r\n    _stop() {\r\n        if (!this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = false;\r\n        if (this.timerId !== null) {\r\n            clearTimeout(this.timerId);\r\n        }\r\n    }\r\n    getInterval(wasError) {\r\n        var _a;\r\n        if (wasError) {\r\n            const interval = this.errorBackoff;\r\n            this.errorBackoff = Math.min(this.errorBackoff * 2, 960000 /* Duration.RETRY_BACKOFF_MAX */);\r\n            return interval;\r\n        }\r\n        else {\r\n            // Reset the error backoff\r\n            this.errorBackoff = 30000 /* Duration.RETRY_BACKOFF_MIN */;\r\n            const expTime = (_a = this.user.stsTokenManager.expirationTime) !== null && _a !== void 0 ? _a : 0;\r\n            const interval = expTime - Date.now() - 300000 /* Duration.OFFSET */;\r\n            return Math.max(0, interval);\r\n        }\r\n    }\r\n    schedule(wasError = false) {\r\n        if (!this.isRunning) {\r\n            // Just in case...\r\n            return;\r\n        }\r\n        const interval = this.getInterval(wasError);\r\n        this.timerId = setTimeout(async () => {\r\n            await this.iteration();\r\n        }, interval);\r\n    }\r\n    async iteration() {\r\n        try {\r\n            await this.user.getIdToken(true);\r\n        }\r\n        catch (e) {\r\n            // Only retry on network errors\r\n            if ((e === null || e === void 0 ? void 0 : e.code) ===\r\n                `auth/${\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */}`) {\r\n                this.schedule(/* wasError */ true);\r\n            }\r\n            return;\r\n        }\r\n        this.schedule();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UserMetadata {\r\n    constructor(createdAt, lastLoginAt) {\r\n        this.createdAt = createdAt;\r\n        this.lastLoginAt = lastLoginAt;\r\n        this._initializeTime();\r\n    }\r\n    _initializeTime() {\r\n        this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\r\n        this.creationTime = utcTimestampToDateString(this.createdAt);\r\n    }\r\n    _copy(metadata) {\r\n        this.createdAt = metadata.createdAt;\r\n        this.lastLoginAt = metadata.lastLoginAt;\r\n        this._initializeTime();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            createdAt: this.createdAt,\r\n            lastLoginAt: this.lastLoginAt\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _reloadWithoutSaving(user) {\r\n    var _a;\r\n    const auth = user.auth;\r\n    const idToken = await user.getIdToken();\r\n    const response = await _logoutIfInvalidated(user, getAccountInfo(auth, { idToken }));\r\n    _assert(response === null || response === void 0 ? void 0 : response.users.length, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    const coreAccount = response.users[0];\r\n    user._notifyReloadListener(coreAccount);\r\n    const newProviderData = ((_a = coreAccount.providerUserInfo) === null || _a === void 0 ? void 0 : _a.length)\r\n        ? extractProviderData(coreAccount.providerUserInfo)\r\n        : [];\r\n    const providerData = mergeProviderData(user.providerData, newProviderData);\r\n    // Preserves the non-nonymous status of the stored user, even if no more\r\n    // credentials (federated or email/password) are linked to the user. If\r\n    // the user was previously anonymous, then use provider data to update.\r\n    // On the other hand, if it was not anonymous before, it should never be\r\n    // considered anonymous now.\r\n    const oldIsAnonymous = user.isAnonymous;\r\n    const newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\r\n    const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\r\n    const updates = {\r\n        uid: coreAccount.localId,\r\n        displayName: coreAccount.displayName || null,\r\n        photoURL: coreAccount.photoUrl || null,\r\n        email: coreAccount.email || null,\r\n        emailVerified: coreAccount.emailVerified || false,\r\n        phoneNumber: coreAccount.phoneNumber || null,\r\n        tenantId: coreAccount.tenantId || null,\r\n        providerData,\r\n        metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\r\n        isAnonymous\r\n    };\r\n    Object.assign(user, updates);\r\n}\r\n/**\r\n * Reloads user account data, if signed in.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nasync function reload(user) {\r\n    const userInternal = getModularInstance(user);\r\n    await _reloadWithoutSaving(userInternal);\r\n    // Even though the current user hasn't changed, update\r\n    // current user will trigger a persistence update w/ the\r\n    // new info.\r\n    await userInternal.auth._persistUserIfCurrent(userInternal);\r\n    userInternal.auth._notifyListenersIfCurrent(userInternal);\r\n}\r\nfunction mergeProviderData(original, newData) {\r\n    const deduped = original.filter(o => !newData.some(n => n.providerId === o.providerId));\r\n    return [...deduped, ...newData];\r\n}\r\nfunction extractProviderData(providers) {\r\n    return providers.map((_a) => {\r\n        var { providerId } = _a, provider = __rest(_a, [\"providerId\"]);\r\n        return {\r\n            providerId,\r\n            uid: provider.rawId || '',\r\n            displayName: provider.displayName || null,\r\n            email: provider.email || null,\r\n            phoneNumber: provider.phoneNumber || null,\r\n            photoURL: provider.photoUrl || null\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function requestStsToken(auth, refreshToken) {\r\n    const response = await _performFetchWithErrorHandling(auth, {}, async () => {\r\n        const body = querystring({\r\n            'grant_type': 'refresh_token',\r\n            'refresh_token': refreshToken\r\n        }).slice(1);\r\n        const { tokenApiHost, apiKey } = auth.config;\r\n        const url = _getFinalTarget(auth, tokenApiHost, \"/v1/token\" /* Endpoint.TOKEN */, `key=${apiKey}`);\r\n        const headers = await auth._getAdditionalHeaders();\r\n        headers[\"Content-Type\" /* HttpHeader.CONTENT_TYPE */] = 'application/x-www-form-urlencoded';\r\n        return FetchProvider.fetch()(url, {\r\n            method: \"POST\" /* HttpMethod.POST */,\r\n            headers,\r\n            body\r\n        });\r\n    });\r\n    // The response comes back in snake_case. Convert to camel:\r\n    return {\r\n        accessToken: response.access_token,\r\n        expiresIn: response.expires_in,\r\n        refreshToken: response.refresh_token\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\r\n * it references AuthInternal which has a circular dependency with UserInternal.\r\n *\r\n * @internal\r\n */\r\nclass StsTokenManager {\r\n    constructor() {\r\n        this.refreshToken = null;\r\n        this.accessToken = null;\r\n        this.expirationTime = null;\r\n    }\r\n    get isExpired() {\r\n        return (!this.expirationTime ||\r\n            Date.now() > this.expirationTime - 30000 /* Buffer.TOKEN_REFRESH */);\r\n    }\r\n    updateFromServerResponse(response) {\r\n        _assert(response.idToken, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        _assert(typeof response.idToken !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        _assert(typeof response.refreshToken !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        const expiresIn = 'expiresIn' in response && typeof response.expiresIn !== 'undefined'\r\n            ? Number(response.expiresIn)\r\n            : _tokenExpiresIn(response.idToken);\r\n        this.updateTokensAndExpiration(response.idToken, response.refreshToken, expiresIn);\r\n    }\r\n    async getToken(auth, forceRefresh = false) {\r\n        _assert(!this.accessToken || this.refreshToken, auth, \"user-token-expired\" /* AuthErrorCode.TOKEN_EXPIRED */);\r\n        if (!forceRefresh && this.accessToken && !this.isExpired) {\r\n            return this.accessToken;\r\n        }\r\n        if (this.refreshToken) {\r\n            await this.refresh(auth, this.refreshToken);\r\n            return this.accessToken;\r\n        }\r\n        return null;\r\n    }\r\n    clearRefreshToken() {\r\n        this.refreshToken = null;\r\n    }\r\n    async refresh(auth, oldToken) {\r\n        const { accessToken, refreshToken, expiresIn } = await requestStsToken(auth, oldToken);\r\n        this.updateTokensAndExpiration(accessToken, refreshToken, Number(expiresIn));\r\n    }\r\n    updateTokensAndExpiration(accessToken, refreshToken, expiresInSec) {\r\n        this.refreshToken = refreshToken || null;\r\n        this.accessToken = accessToken || null;\r\n        this.expirationTime = Date.now() + expiresInSec * 1000;\r\n    }\r\n    static fromJSON(appName, object) {\r\n        const { refreshToken, accessToken, expirationTime } = object;\r\n        const manager = new StsTokenManager();\r\n        if (refreshToken) {\r\n            _assert(typeof refreshToken === 'string', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.refreshToken = refreshToken;\r\n        }\r\n        if (accessToken) {\r\n            _assert(typeof accessToken === 'string', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.accessToken = accessToken;\r\n        }\r\n        if (expirationTime) {\r\n            _assert(typeof expirationTime === 'number', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.expirationTime = expirationTime;\r\n        }\r\n        return manager;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            refreshToken: this.refreshToken,\r\n            accessToken: this.accessToken,\r\n            expirationTime: this.expirationTime\r\n        };\r\n    }\r\n    _assign(stsTokenManager) {\r\n        this.accessToken = stsTokenManager.accessToken;\r\n        this.refreshToken = stsTokenManager.refreshToken;\r\n        this.expirationTime = stsTokenManager.expirationTime;\r\n    }\r\n    _clone() {\r\n        return Object.assign(new StsTokenManager(), this.toJSON());\r\n    }\r\n    _performRefresh() {\r\n        return debugFail('not implemented');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction assertStringOrUndefined(assertion, appName) {\r\n    _assert(typeof assertion === 'string' || typeof assertion === 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */, { appName });\r\n}\r\nclass UserImpl {\r\n    constructor(_a) {\r\n        var { uid, auth, stsTokenManager } = _a, opt = __rest(_a, [\"uid\", \"auth\", \"stsTokenManager\"]);\r\n        // For the user object, provider is always Firebase.\r\n        this.providerId = \"firebase\" /* ProviderId.FIREBASE */;\r\n        this.proactiveRefresh = new ProactiveRefresh(this);\r\n        this.reloadUserInfo = null;\r\n        this.reloadListener = null;\r\n        this.uid = uid;\r\n        this.auth = auth;\r\n        this.stsTokenManager = stsTokenManager;\r\n        this.accessToken = stsTokenManager.accessToken;\r\n        this.displayName = opt.displayName || null;\r\n        this.email = opt.email || null;\r\n        this.emailVerified = opt.emailVerified || false;\r\n        this.phoneNumber = opt.phoneNumber || null;\r\n        this.photoURL = opt.photoURL || null;\r\n        this.isAnonymous = opt.isAnonymous || false;\r\n        this.tenantId = opt.tenantId || null;\r\n        this.providerData = opt.providerData ? [...opt.providerData] : [];\r\n        this.metadata = new UserMetadata(opt.createdAt || undefined, opt.lastLoginAt || undefined);\r\n    }\r\n    async getIdToken(forceRefresh) {\r\n        const accessToken = await _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh));\r\n        _assert(accessToken, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        if (this.accessToken !== accessToken) {\r\n            this.accessToken = accessToken;\r\n            await this.auth._persistUserIfCurrent(this);\r\n            this.auth._notifyListenersIfCurrent(this);\r\n        }\r\n        return accessToken;\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return getIdTokenResult(this, forceRefresh);\r\n    }\r\n    reload() {\r\n        return reload(this);\r\n    }\r\n    _assign(user) {\r\n        if (this === user) {\r\n            return;\r\n        }\r\n        _assert(this.uid === user.uid, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        this.displayName = user.displayName;\r\n        this.photoURL = user.photoURL;\r\n        this.email = user.email;\r\n        this.emailVerified = user.emailVerified;\r\n        this.phoneNumber = user.phoneNumber;\r\n        this.isAnonymous = user.isAnonymous;\r\n        this.tenantId = user.tenantId;\r\n        this.providerData = user.providerData.map(userInfo => (Object.assign({}, userInfo)));\r\n        this.metadata._copy(user.metadata);\r\n        this.stsTokenManager._assign(user.stsTokenManager);\r\n    }\r\n    _clone(auth) {\r\n        const newUser = new UserImpl(Object.assign(Object.assign({}, this), { auth, stsTokenManager: this.stsTokenManager._clone() }));\r\n        newUser.metadata._copy(this.metadata);\r\n        return newUser;\r\n    }\r\n    _onReload(callback) {\r\n        // There should only ever be one listener, and that is a single instance of MultiFactorUser\r\n        _assert(!this.reloadListener, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        this.reloadListener = callback;\r\n        if (this.reloadUserInfo) {\r\n            this._notifyReloadListener(this.reloadUserInfo);\r\n            this.reloadUserInfo = null;\r\n        }\r\n    }\r\n    _notifyReloadListener(userInfo) {\r\n        if (this.reloadListener) {\r\n            this.reloadListener(userInfo);\r\n        }\r\n        else {\r\n            // If no listener is subscribed yet, save the result so it's available when they do subscribe\r\n            this.reloadUserInfo = userInfo;\r\n        }\r\n    }\r\n    _startProactiveRefresh() {\r\n        this.proactiveRefresh._start();\r\n    }\r\n    _stopProactiveRefresh() {\r\n        this.proactiveRefresh._stop();\r\n    }\r\n    async _updateTokensIfNecessary(response, reload = false) {\r\n        let tokensRefreshed = false;\r\n        if (response.idToken &&\r\n            response.idToken !== this.stsTokenManager.accessToken) {\r\n            this.stsTokenManager.updateFromServerResponse(response);\r\n            tokensRefreshed = true;\r\n        }\r\n        if (reload) {\r\n            await _reloadWithoutSaving(this);\r\n        }\r\n        await this.auth._persistUserIfCurrent(this);\r\n        if (tokensRefreshed) {\r\n            this.auth._notifyListenersIfCurrent(this);\r\n        }\r\n    }\r\n    async delete() {\r\n        const idToken = await this.getIdToken();\r\n        await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\r\n        this.stsTokenManager.clearRefreshToken();\r\n        // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\r\n        //       cancels pending actions...\r\n        return this.auth.signOut();\r\n    }\r\n    toJSON() {\r\n        return Object.assign(Object.assign({ uid: this.uid, email: this.email || undefined, emailVerified: this.emailVerified, displayName: this.displayName || undefined, isAnonymous: this.isAnonymous, photoURL: this.photoURL || undefined, phoneNumber: this.phoneNumber || undefined, tenantId: this.tenantId || undefined, providerData: this.providerData.map(userInfo => (Object.assign({}, userInfo))), stsTokenManager: this.stsTokenManager.toJSON(), \r\n            // Redirect event ID must be maintained in case there is a pending\r\n            // redirect event.\r\n            _redirectEventId: this._redirectEventId }, this.metadata.toJSON()), { \r\n            // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\r\n            apiKey: this.auth.config.apiKey, appName: this.auth.name });\r\n    }\r\n    get refreshToken() {\r\n        return this.stsTokenManager.refreshToken || '';\r\n    }\r\n    static _fromJSON(auth, object) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        const displayName = (_a = object.displayName) !== null && _a !== void 0 ? _a : undefined;\r\n        const email = (_b = object.email) !== null && _b !== void 0 ? _b : undefined;\r\n        const phoneNumber = (_c = object.phoneNumber) !== null && _c !== void 0 ? _c : undefined;\r\n        const photoURL = (_d = object.photoURL) !== null && _d !== void 0 ? _d : undefined;\r\n        const tenantId = (_e = object.tenantId) !== null && _e !== void 0 ? _e : undefined;\r\n        const _redirectEventId = (_f = object._redirectEventId) !== null && _f !== void 0 ? _f : undefined;\r\n        const createdAt = (_g = object.createdAt) !== null && _g !== void 0 ? _g : undefined;\r\n        const lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== void 0 ? _h : undefined;\r\n        const { uid, emailVerified, isAnonymous, providerData, stsTokenManager: plainObjectTokenManager } = object;\r\n        _assert(uid && plainObjectTokenManager, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        const stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);\r\n        _assert(typeof uid === 'string', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        assertStringOrUndefined(displayName, auth.name);\r\n        assertStringOrUndefined(email, auth.name);\r\n        _assert(typeof emailVerified === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        _assert(typeof isAnonymous === 'boolean', auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        assertStringOrUndefined(phoneNumber, auth.name);\r\n        assertStringOrUndefined(photoURL, auth.name);\r\n        assertStringOrUndefined(tenantId, auth.name);\r\n        assertStringOrUndefined(_redirectEventId, auth.name);\r\n        assertStringOrUndefined(createdAt, auth.name);\r\n        assertStringOrUndefined(lastLoginAt, auth.name);\r\n        const user = new UserImpl({\r\n            uid,\r\n            auth,\r\n            email,\r\n            emailVerified,\r\n            displayName,\r\n            isAnonymous,\r\n            photoURL,\r\n            phoneNumber,\r\n            tenantId,\r\n            stsTokenManager,\r\n            createdAt,\r\n            lastLoginAt\r\n        });\r\n        if (providerData && Array.isArray(providerData)) {\r\n            user.providerData = providerData.map(userInfo => (Object.assign({}, userInfo)));\r\n        }\r\n        if (_redirectEventId) {\r\n            user._redirectEventId = _redirectEventId;\r\n        }\r\n        return user;\r\n    }\r\n    /**\r\n     * Initialize a User from an idToken server response\r\n     * @param auth\r\n     * @param idTokenResponse\r\n     */\r\n    static async _fromIdTokenResponse(auth, idTokenResponse, isAnonymous = false) {\r\n        const stsTokenManager = new StsTokenManager();\r\n        stsTokenManager.updateFromServerResponse(idTokenResponse);\r\n        // Initialize the Firebase Auth user.\r\n        const user = new UserImpl({\r\n            uid: idTokenResponse.localId,\r\n            auth,\r\n            stsTokenManager,\r\n            isAnonymous\r\n        });\r\n        // Updates the user info and data and resolves with a user instance.\r\n        await _reloadWithoutSaving(user);\r\n        return user;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst instanceCache = new Map();\r\nfunction _getInstance(cls) {\r\n    debugAssert(cls instanceof Function, 'Expected a class definition');\r\n    let instance = instanceCache.get(cls);\r\n    if (instance) {\r\n        debugAssert(instance instanceof cls, 'Instance stored in cache mismatched with class');\r\n        return instance;\r\n    }\r\n    instance = new cls();\r\n    instanceCache.set(cls, instance);\r\n    return instance;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass InMemoryPersistence {\r\n    constructor() {\r\n        this.type = \"NONE\" /* PersistenceType.NONE */;\r\n        this.storage = {};\r\n    }\r\n    async _isAvailable() {\r\n        return true;\r\n    }\r\n    async _set(key, value) {\r\n        this.storage[key] = value;\r\n    }\r\n    async _get(key) {\r\n        const value = this.storage[key];\r\n        return value === undefined ? null : value;\r\n    }\r\n    async _remove(key) {\r\n        delete this.storage[key];\r\n    }\r\n    _addListener(_key, _listener) {\r\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\r\n        return;\r\n    }\r\n    _removeListener(_key, _listener) {\r\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\r\n        return;\r\n    }\r\n}\r\nInMemoryPersistence.type = 'NONE';\r\n/**\r\n * An implementation of {@link Persistence} of type 'NONE'.\r\n *\r\n * @public\r\n */\r\nconst inMemoryPersistence = InMemoryPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _persistenceKeyName(key, apiKey, appName) {\r\n    return `${\"firebase\" /* Namespace.PERSISTENCE */}:${key}:${apiKey}:${appName}`;\r\n}\r\nclass PersistenceUserManager {\r\n    constructor(persistence, auth, userKey) {\r\n        this.persistence = persistence;\r\n        this.auth = auth;\r\n        this.userKey = userKey;\r\n        const { config, name } = this.auth;\r\n        this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\r\n        this.fullPersistenceKey = _persistenceKeyName(\"persistence\" /* KeyName.PERSISTENCE_USER */, config.apiKey, name);\r\n        this.boundEventHandler = auth._onStorageEvent.bind(auth);\r\n        this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\r\n    }\r\n    setCurrentUser(user) {\r\n        return this.persistence._set(this.fullUserKey, user.toJSON());\r\n    }\r\n    async getCurrentUser() {\r\n        const blob = await this.persistence._get(this.fullUserKey);\r\n        return blob ? UserImpl._fromJSON(this.auth, blob) : null;\r\n    }\r\n    removeCurrentUser() {\r\n        return this.persistence._remove(this.fullUserKey);\r\n    }\r\n    savePersistenceForRedirect() {\r\n        return this.persistence._set(this.fullPersistenceKey, this.persistence.type);\r\n    }\r\n    async setPersistence(newPersistence) {\r\n        if (this.persistence === newPersistence) {\r\n            return;\r\n        }\r\n        const currentUser = await this.getCurrentUser();\r\n        await this.removeCurrentUser();\r\n        this.persistence = newPersistence;\r\n        if (currentUser) {\r\n            return this.setCurrentUser(currentUser);\r\n        }\r\n    }\r\n    delete() {\r\n        this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\r\n    }\r\n    static async create(auth, persistenceHierarchy, userKey = \"authUser\" /* KeyName.AUTH_USER */) {\r\n        if (!persistenceHierarchy.length) {\r\n            return new PersistenceUserManager(_getInstance(inMemoryPersistence), auth, userKey);\r\n        }\r\n        // Eliminate any persistences that are not available\r\n        const availablePersistences = (await Promise.all(persistenceHierarchy.map(async (persistence) => {\r\n            if (await persistence._isAvailable()) {\r\n                return persistence;\r\n            }\r\n            return undefined;\r\n        }))).filter(persistence => persistence);\r\n        // Fall back to the first persistence listed, or in memory if none available\r\n        let selectedPersistence = availablePersistences[0] ||\r\n            _getInstance(inMemoryPersistence);\r\n        const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\r\n        // Pull out the existing user, setting the chosen persistence to that\r\n        // persistence if the user exists.\r\n        let userToMigrate = null;\r\n        // Note, here we check for a user in _all_ persistences, not just the\r\n        // ones deemed available. If we can migrate a user out of a broken\r\n        // persistence, we will (but only if that persistence supports migration).\r\n        for (const persistence of persistenceHierarchy) {\r\n            try {\r\n                const blob = await persistence._get(key);\r\n                if (blob) {\r\n                    const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\r\n                    if (persistence !== selectedPersistence) {\r\n                        userToMigrate = user;\r\n                    }\r\n                    selectedPersistence = persistence;\r\n                    break;\r\n                }\r\n            }\r\n            catch (_a) { }\r\n        }\r\n        // If we find the user in a persistence that does support migration, use\r\n        // that migration path (of only persistences that support migration)\r\n        const migrationHierarchy = availablePersistences.filter(p => p._shouldAllowMigration);\r\n        // If the persistence does _not_ allow migration, just finish off here\r\n        if (!selectedPersistence._shouldAllowMigration ||\r\n            !migrationHierarchy.length) {\r\n            return new PersistenceUserManager(selectedPersistence, auth, userKey);\r\n        }\r\n        selectedPersistence = migrationHierarchy[0];\r\n        if (userToMigrate) {\r\n            // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\r\n            // we'll just let it bubble to surface the error.\r\n            await selectedPersistence._set(key, userToMigrate.toJSON());\r\n        }\r\n        // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\r\n        // such as users getting stuck with a previous account after signing out and refreshing the tab.\r\n        await Promise.all(persistenceHierarchy.map(async (persistence) => {\r\n            if (persistence !== selectedPersistence) {\r\n                try {\r\n                    await persistence._remove(key);\r\n                }\r\n                catch (_a) { }\r\n            }\r\n        }));\r\n        return new PersistenceUserManager(selectedPersistence, auth, userKey);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Determine the browser for the purposes of reporting usage to the API\r\n */\r\nfunction _getBrowserName(userAgent) {\r\n    const ua = userAgent.toLowerCase();\r\n    if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\r\n        return \"Opera\" /* BrowserName.OPERA */;\r\n    }\r\n    else if (_isIEMobile(ua)) {\r\n        // Windows phone IEMobile browser.\r\n        return \"IEMobile\" /* BrowserName.IEMOBILE */;\r\n    }\r\n    else if (ua.includes('msie') || ua.includes('trident/')) {\r\n        return \"IE\" /* BrowserName.IE */;\r\n    }\r\n    else if (ua.includes('edge/')) {\r\n        return \"Edge\" /* BrowserName.EDGE */;\r\n    }\r\n    else if (_isFirefox(ua)) {\r\n        return \"Firefox\" /* BrowserName.FIREFOX */;\r\n    }\r\n    else if (ua.includes('silk/')) {\r\n        return \"Silk\" /* BrowserName.SILK */;\r\n    }\r\n    else if (_isBlackBerry(ua)) {\r\n        // Blackberry browser.\r\n        return \"Blackberry\" /* BrowserName.BLACKBERRY */;\r\n    }\r\n    else if (_isWebOS(ua)) {\r\n        // WebOS default browser.\r\n        return \"Webos\" /* BrowserName.WEBOS */;\r\n    }\r\n    else if (_isSafari(ua)) {\r\n        return \"Safari\" /* BrowserName.SAFARI */;\r\n    }\r\n    else if ((ua.includes('chrome/') || _isChromeIOS(ua)) &&\r\n        !ua.includes('edge/')) {\r\n        return \"Chrome\" /* BrowserName.CHROME */;\r\n    }\r\n    else if (_isAndroid(ua)) {\r\n        // Android stock browser.\r\n        return \"Android\" /* BrowserName.ANDROID */;\r\n    }\r\n    else {\r\n        // Most modern browsers have name/version at end of user agent string.\r\n        const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\r\n        const matches = userAgent.match(re);\r\n        if ((matches === null || matches === void 0 ? void 0 : matches.length) === 2) {\r\n            return matches[1];\r\n        }\r\n    }\r\n    return \"Other\" /* BrowserName.OTHER */;\r\n}\r\nfunction _isFirefox(ua = getUA()) {\r\n    return /firefox\\//i.test(ua);\r\n}\r\nfunction _isSafari(userAgent = getUA()) {\r\n    const ua = userAgent.toLowerCase();\r\n    return (ua.includes('safari/') &&\r\n        !ua.includes('chrome/') &&\r\n        !ua.includes('crios/') &&\r\n        !ua.includes('android'));\r\n}\r\nfunction _isChromeIOS(ua = getUA()) {\r\n    return /crios\\//i.test(ua);\r\n}\r\nfunction _isIEMobile(ua = getUA()) {\r\n    return /iemobile/i.test(ua);\r\n}\r\nfunction _isAndroid(ua = getUA()) {\r\n    return /android/i.test(ua);\r\n}\r\nfunction _isBlackBerry(ua = getUA()) {\r\n    return /blackberry/i.test(ua);\r\n}\r\nfunction _isWebOS(ua = getUA()) {\r\n    return /webos/i.test(ua);\r\n}\r\nfunction _isIOS(ua = getUA()) {\r\n    return (/iphone|ipad|ipod/i.test(ua) ||\r\n        (/macintosh/i.test(ua) && /mobile/i.test(ua)));\r\n}\r\nfunction _isIOS7Or8(ua = getUA()) {\r\n    return (/(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\r\n        /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua));\r\n}\r\nfunction _isIOSStandalone(ua = getUA()) {\r\n    var _a;\r\n    return _isIOS(ua) && !!((_a = window.navigator) === null || _a === void 0 ? void 0 : _a.standalone);\r\n}\r\nfunction _isIE10() {\r\n    return isIE() && document.documentMode === 10;\r\n}\r\nfunction _isMobileBrowser(ua = getUA()) {\r\n    // TODO: implement getBrowserName equivalent for OS.\r\n    return (_isIOS(ua) ||\r\n        _isAndroid(ua) ||\r\n        _isWebOS(ua) ||\r\n        _isBlackBerry(ua) ||\r\n        /windows phone/i.test(ua) ||\r\n        _isIEMobile(ua));\r\n}\r\nfunction _isIframe() {\r\n    try {\r\n        // Check that the current window is not the top window.\r\n        // If so, return true.\r\n        return !!(window && window !== window.top);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*\r\n * Determine the SDK version string\r\n */\r\nfunction _getClientVersion(clientPlatform, frameworks = []) {\r\n    let reportedPlatform;\r\n    switch (clientPlatform) {\r\n        case \"Browser\" /* ClientPlatform.BROWSER */:\r\n            // In a browser environment, report the browser name.\r\n            reportedPlatform = _getBrowserName(getUA());\r\n            break;\r\n        case \"Worker\" /* ClientPlatform.WORKER */:\r\n            // Technically a worker runs from a browser but we need to differentiate a\r\n            // worker from a browser.\r\n            // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\r\n            reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\r\n            break;\r\n        default:\r\n            reportedPlatform = clientPlatform;\r\n    }\r\n    const reportedFrameworks = frameworks.length\r\n        ? frameworks.join(',')\r\n        : 'FirebaseCore-web'; /* default value if no other framework is used */\r\n    return `${reportedPlatform}/${\"JsCore\" /* ClientImplementation.CORE */}/${SDK_VERSION}/${reportedFrameworks}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthMiddlewareQueue {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.queue = [];\r\n    }\r\n    pushCallback(callback, onAbort) {\r\n        // The callback could be sync or async. Wrap it into a\r\n        // function that is always async.\r\n        const wrappedCallback = (user) => new Promise((resolve, reject) => {\r\n            try {\r\n                const result = callback(user);\r\n                // Either resolve with existing promise or wrap a non-promise\r\n                // return value into a promise.\r\n                resolve(result);\r\n            }\r\n            catch (e) {\r\n                // Sync callback throws.\r\n                reject(e);\r\n            }\r\n        });\r\n        // Attach the onAbort if present\r\n        wrappedCallback.onAbort = onAbort;\r\n        this.queue.push(wrappedCallback);\r\n        const index = this.queue.length - 1;\r\n        return () => {\r\n            // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\r\n            // indexing of other elements.\r\n            this.queue[index] = () => Promise.resolve();\r\n        };\r\n    }\r\n    async runMiddleware(nextUser) {\r\n        if (this.auth.currentUser === nextUser) {\r\n            return;\r\n        }\r\n        // While running the middleware, build a temporary stack of onAbort\r\n        // callbacks to call if one middleware callback rejects.\r\n        const onAbortStack = [];\r\n        try {\r\n            for (const beforeStateCallback of this.queue) {\r\n                await beforeStateCallback(nextUser);\r\n                // Only push the onAbort if the callback succeeds\r\n                if (beforeStateCallback.onAbort) {\r\n                    onAbortStack.push(beforeStateCallback.onAbort);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Run all onAbort, with separate try/catch to ignore any errors and\r\n            // continue\r\n            onAbortStack.reverse();\r\n            for (const onAbort of onAbortStack) {\r\n                try {\r\n                    onAbort();\r\n                }\r\n                catch (_) {\r\n                    /* swallow error */\r\n                }\r\n            }\r\n            throw this.auth._errorFactory.create(\"login-blocked\" /* AuthErrorCode.LOGIN_BLOCKED */, {\r\n                originalMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\r\n *\r\n * @param auth Auth object.\r\n * @param request Password policy request.\r\n * @returns Password policy response.\r\n */\r\nasync function _getPasswordPolicy(auth, request = {}) {\r\n    return _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v2/passwordPolicy\" /* Endpoint.GET_PASSWORD_POLICY */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Minimum min password length enforced by the backend, even if no minimum length is set.\r\nconst MINIMUM_MIN_PASSWORD_LENGTH = 6;\r\n/**\r\n * Stores password policy requirements and provides password validation against the policy.\r\n *\r\n * @internal\r\n */\r\nclass PasswordPolicyImpl {\r\n    constructor(response) {\r\n        var _a, _b, _c, _d;\r\n        // Only include custom strength options defined in the response.\r\n        const responseOptions = response.customStrengthOptions;\r\n        this.customStrengthOptions = {};\r\n        // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\r\n        this.customStrengthOptions.minPasswordLength =\r\n            (_a = responseOptions.minPasswordLength) !== null && _a !== void 0 ? _a : MINIMUM_MIN_PASSWORD_LENGTH;\r\n        if (responseOptions.maxPasswordLength) {\r\n            this.customStrengthOptions.maxPasswordLength =\r\n                responseOptions.maxPasswordLength;\r\n        }\r\n        if (responseOptions.containsLowercaseCharacter !== undefined) {\r\n            this.customStrengthOptions.containsLowercaseLetter =\r\n                responseOptions.containsLowercaseCharacter;\r\n        }\r\n        if (responseOptions.containsUppercaseCharacter !== undefined) {\r\n            this.customStrengthOptions.containsUppercaseLetter =\r\n                responseOptions.containsUppercaseCharacter;\r\n        }\r\n        if (responseOptions.containsNumericCharacter !== undefined) {\r\n            this.customStrengthOptions.containsNumericCharacter =\r\n                responseOptions.containsNumericCharacter;\r\n        }\r\n        if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\r\n            this.customStrengthOptions.containsNonAlphanumericCharacter =\r\n                responseOptions.containsNonAlphanumericCharacter;\r\n        }\r\n        this.enforcementState = response.enforcementState;\r\n        if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\r\n            this.enforcementState = 'OFF';\r\n        }\r\n        // Use an empty string if no non-alphanumeric characters are specified in the response.\r\n        this.allowedNonAlphanumericCharacters =\r\n            (_c = (_b = response.allowedNonAlphanumericCharacters) === null || _b === void 0 ? void 0 : _b.join('')) !== null && _c !== void 0 ? _c : '';\r\n        this.forceUpgradeOnSignin = (_d = response.forceUpgradeOnSignin) !== null && _d !== void 0 ? _d : false;\r\n        this.schemaVersion = response.schemaVersion;\r\n    }\r\n    validatePassword(password) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const status = {\r\n            isValid: true,\r\n            passwordPolicy: this\r\n        };\r\n        // Check the password length and character options.\r\n        this.validatePasswordLengthOptions(password, status);\r\n        this.validatePasswordCharacterOptions(password, status);\r\n        // Combine the status into single isValid property.\r\n        status.isValid && (status.isValid = (_a = status.meetsMinPasswordLength) !== null && _a !== void 0 ? _a : true);\r\n        status.isValid && (status.isValid = (_b = status.meetsMaxPasswordLength) !== null && _b !== void 0 ? _b : true);\r\n        status.isValid && (status.isValid = (_c = status.containsLowercaseLetter) !== null && _c !== void 0 ? _c : true);\r\n        status.isValid && (status.isValid = (_d = status.containsUppercaseLetter) !== null && _d !== void 0 ? _d : true);\r\n        status.isValid && (status.isValid = (_e = status.containsNumericCharacter) !== null && _e !== void 0 ? _e : true);\r\n        status.isValid && (status.isValid = (_f = status.containsNonAlphanumericCharacter) !== null && _f !== void 0 ? _f : true);\r\n        return status;\r\n    }\r\n    /**\r\n     * Validates that the password meets the length options for the policy.\r\n     *\r\n     * @param password Password to validate.\r\n     * @param status Validation status.\r\n     */\r\n    validatePasswordLengthOptions(password, status) {\r\n        const minPasswordLength = this.customStrengthOptions.minPasswordLength;\r\n        const maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\r\n        if (minPasswordLength) {\r\n            status.meetsMinPasswordLength = password.length >= minPasswordLength;\r\n        }\r\n        if (maxPasswordLength) {\r\n            status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\r\n        }\r\n    }\r\n    /**\r\n     * Validates that the password meets the character options for the policy.\r\n     *\r\n     * @param password Password to validate.\r\n     * @param status Validation status.\r\n     */\r\n    validatePasswordCharacterOptions(password, status) {\r\n        // Assign statuses for requirements even if the password is an empty string.\r\n        this.updatePasswordCharacterOptionsStatuses(status, \r\n        /* containsLowercaseCharacter= */ false, \r\n        /* containsUppercaseCharacter= */ false, \r\n        /* containsNumericCharacter= */ false, \r\n        /* containsNonAlphanumericCharacter= */ false);\r\n        let passwordChar;\r\n        for (let i = 0; i < password.length; i++) {\r\n            passwordChar = password.charAt(i);\r\n            this.updatePasswordCharacterOptionsStatuses(status, \r\n            /* containsLowercaseCharacter= */ passwordChar >= 'a' &&\r\n                passwordChar <= 'z', \r\n            /* containsUppercaseCharacter= */ passwordChar >= 'A' &&\r\n                passwordChar <= 'Z', \r\n            /* containsNumericCharacter= */ passwordChar >= '0' &&\r\n                passwordChar <= '9', \r\n            /* containsNonAlphanumericCharacter= */ this.allowedNonAlphanumericCharacters.includes(passwordChar));\r\n        }\r\n    }\r\n    /**\r\n     * Updates the running validation status with the statuses for the character options.\r\n     * Expected to be called each time a character is processed to update each option status\r\n     * based on the current character.\r\n     *\r\n     * @param status Validation status.\r\n     * @param containsLowercaseCharacter Whether the character is a lowercase letter.\r\n     * @param containsUppercaseCharacter Whether the character is an uppercase letter.\r\n     * @param containsNumericCharacter Whether the character is a numeric character.\r\n     * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\r\n     */\r\n    updatePasswordCharacterOptionsStatuses(status, containsLowercaseCharacter, containsUppercaseCharacter, containsNumericCharacter, containsNonAlphanumericCharacter) {\r\n        if (this.customStrengthOptions.containsLowercaseLetter) {\r\n            status.containsLowercaseLetter || (status.containsLowercaseLetter = containsLowercaseCharacter);\r\n        }\r\n        if (this.customStrengthOptions.containsUppercaseLetter) {\r\n            status.containsUppercaseLetter || (status.containsUppercaseLetter = containsUppercaseCharacter);\r\n        }\r\n        if (this.customStrengthOptions.containsNumericCharacter) {\r\n            status.containsNumericCharacter || (status.containsNumericCharacter = containsNumericCharacter);\r\n        }\r\n        if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\r\n            status.containsNonAlphanumericCharacter || (status.containsNonAlphanumericCharacter = containsNonAlphanumericCharacter);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthImpl {\r\n    constructor(app, heartbeatServiceProvider, appCheckServiceProvider, config) {\r\n        this.app = app;\r\n        this.heartbeatServiceProvider = heartbeatServiceProvider;\r\n        this.appCheckServiceProvider = appCheckServiceProvider;\r\n        this.config = config;\r\n        this.currentUser = null;\r\n        this.emulatorConfig = null;\r\n        this.operations = Promise.resolve();\r\n        this.authStateSubscription = new Subscription(this);\r\n        this.idTokenSubscription = new Subscription(this);\r\n        this.beforeStateQueue = new AuthMiddlewareQueue(this);\r\n        this.redirectUser = null;\r\n        this.isProactiveRefreshEnabled = false;\r\n        this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1;\r\n        // Any network calls will set this to true and prevent subsequent emulator\r\n        // initialization\r\n        this._canInitEmulator = true;\r\n        this._isInitialized = false;\r\n        this._deleted = false;\r\n        this._initializationPromise = null;\r\n        this._popupRedirectResolver = null;\r\n        this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;\r\n        this._agentRecaptchaConfig = null;\r\n        this._tenantRecaptchaConfigs = {};\r\n        this._projectPasswordPolicy = null;\r\n        this._tenantPasswordPolicies = {};\r\n        // Tracks the last notified UID for state change listeners to prevent\r\n        // repeated calls to the callbacks. Undefined means it's never been\r\n        // called, whereas null means it's been called with a signed out user\r\n        this.lastNotifiedUid = undefined;\r\n        this.languageCode = null;\r\n        this.tenantId = null;\r\n        this.settings = { appVerificationDisabledForTesting: false };\r\n        this.frameworks = [];\r\n        this.name = app.name;\r\n        this.clientVersion = config.sdkClientVersion;\r\n    }\r\n    _initializeWithPersistence(persistenceHierarchy, popupRedirectResolver) {\r\n        if (popupRedirectResolver) {\r\n            this._popupRedirectResolver = _getInstance(popupRedirectResolver);\r\n        }\r\n        // Have to check for app deletion throughout initialization (after each\r\n        // promise resolution)\r\n        this._initializationPromise = this.queue(async () => {\r\n            var _a, _b;\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            this.persistenceManager = await PersistenceUserManager.create(this, persistenceHierarchy);\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            // Initialize the resolver early if necessary (only applicable to web:\r\n            // this will cause the iframe to load immediately in certain cases)\r\n            if ((_a = this._popupRedirectResolver) === null || _a === void 0 ? void 0 : _a._shouldInitProactively) {\r\n                // If this fails, don't halt auth loading\r\n                try {\r\n                    await this._popupRedirectResolver._initialize(this);\r\n                }\r\n                catch (e) {\r\n                    /* Ignore the error */\r\n                }\r\n            }\r\n            await this.initializeCurrentUser(popupRedirectResolver);\r\n            this.lastNotifiedUid = ((_b = this.currentUser) === null || _b === void 0 ? void 0 : _b.uid) || null;\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            this._isInitialized = true;\r\n        });\r\n        return this._initializationPromise;\r\n    }\r\n    /**\r\n     * If the persistence is changed in another window, the user manager will let us know\r\n     */\r\n    async _onStorageEvent() {\r\n        if (this._deleted) {\r\n            return;\r\n        }\r\n        const user = await this.assertedPersistence.getCurrentUser();\r\n        if (!this.currentUser && !user) {\r\n            // No change, do nothing (was signed out and remained signed out).\r\n            return;\r\n        }\r\n        // If the same user is to be synchronized.\r\n        if (this.currentUser && user && this.currentUser.uid === user.uid) {\r\n            // Data update, simply copy data changes.\r\n            this._currentUser._assign(user);\r\n            // If tokens changed from previous user tokens, this will trigger\r\n            // notifyAuthListeners_.\r\n            await this.currentUser.getIdToken();\r\n            return;\r\n        }\r\n        // Update current Auth state. Either a new login or logout.\r\n        // Skip blocking callbacks, they should not apply to a change in another tab.\r\n        await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\r\n    }\r\n    async initializeCurrentUser(popupRedirectResolver) {\r\n        var _a;\r\n        // First check to see if we have a pending redirect event.\r\n        const previouslyStoredUser = (await this.assertedPersistence.getCurrentUser());\r\n        let futureCurrentUser = previouslyStoredUser;\r\n        let needsTocheckMiddleware = false;\r\n        if (popupRedirectResolver && this.config.authDomain) {\r\n            await this.getOrInitRedirectPersistenceManager();\r\n            const redirectUserEventId = (_a = this.redirectUser) === null || _a === void 0 ? void 0 : _a._redirectEventId;\r\n            const storedUserEventId = futureCurrentUser === null || futureCurrentUser === void 0 ? void 0 : futureCurrentUser._redirectEventId;\r\n            const result = await this.tryRedirectSignIn(popupRedirectResolver);\r\n            // If the stored user (i.e. the old \"currentUser\") has a redirectId that\r\n            // matches the redirect user, then we want to initially sign in with the\r\n            // new user object from result.\r\n            // TODO(samgho): More thoroughly test all of this\r\n            if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\r\n                (result === null || result === void 0 ? void 0 : result.user)) {\r\n                futureCurrentUser = result.user;\r\n                needsTocheckMiddleware = true;\r\n            }\r\n        }\r\n        // If no user in persistence, there is no current user. Set to null.\r\n        if (!futureCurrentUser) {\r\n            return this.directlySetCurrentUser(null);\r\n        }\r\n        if (!futureCurrentUser._redirectEventId) {\r\n            // This isn't a redirect link operation, we can reload and bail.\r\n            // First though, ensure that we check the middleware is happy.\r\n            if (needsTocheckMiddleware) {\r\n                try {\r\n                    await this.beforeStateQueue.runMiddleware(futureCurrentUser);\r\n                }\r\n                catch (e) {\r\n                    futureCurrentUser = previouslyStoredUser;\r\n                    // We know this is available since the bit is only set when the\r\n                    // resolver is available\r\n                    this._popupRedirectResolver._overrideRedirectResult(this, () => Promise.reject(e));\r\n                }\r\n            }\r\n            if (futureCurrentUser) {\r\n                return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\r\n            }\r\n            else {\r\n                return this.directlySetCurrentUser(null);\r\n            }\r\n        }\r\n        _assert(this._popupRedirectResolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        await this.getOrInitRedirectPersistenceManager();\r\n        // If the redirect user's event ID matches the current user's event ID,\r\n        // DO NOT reload the current user, otherwise they'll be cleared from storage.\r\n        // This is important for the reauthenticateWithRedirect() flow.\r\n        if (this.redirectUser &&\r\n            this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId) {\r\n            return this.directlySetCurrentUser(futureCurrentUser);\r\n        }\r\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\r\n    }\r\n    async tryRedirectSignIn(redirectResolver) {\r\n        // The redirect user needs to be checked (and signed in if available)\r\n        // during auth initialization. All of the normal sign in and link/reauth\r\n        // flows call back into auth and push things onto the promise queue. We\r\n        // need to await the result of the redirect sign in *inside the promise\r\n        // queue*. This presents a problem: we run into deadlock. See:\r\n        //    ┌> [Initialization] ─────┐\r\n        //    ┌> [<other queue tasks>] │\r\n        //    └─ [getRedirectResult] <─┘\r\n        //    where [] are tasks on the queue and arrows denote awaits\r\n        // Initialization will never complete because it's waiting on something\r\n        // that's waiting for initialization to complete!\r\n        //\r\n        // Instead, this method calls getRedirectResult() (stored in\r\n        // _completeRedirectFn) with an optional parameter that instructs all of\r\n        // the underlying auth operations to skip anything that mutates auth state.\r\n        let result = null;\r\n        try {\r\n            // We know this._popupRedirectResolver is set since redirectResolver\r\n            // is passed in. The _completeRedirectFn expects the unwrapped extern.\r\n            result = await this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true);\r\n        }\r\n        catch (e) {\r\n            // Swallow any errors here; the code can retrieve them in\r\n            // getRedirectResult().\r\n            await this._setRedirectUser(null);\r\n        }\r\n        return result;\r\n    }\r\n    async reloadAndSetCurrentUserOrClear(user) {\r\n        try {\r\n            await _reloadWithoutSaving(user);\r\n        }\r\n        catch (e) {\r\n            if ((e === null || e === void 0 ? void 0 : e.code) !==\r\n                `auth/${\"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */}`) {\r\n                // Something's wrong with the user's token. Log them out and remove\r\n                // them from storage\r\n                return this.directlySetCurrentUser(null);\r\n            }\r\n        }\r\n        return this.directlySetCurrentUser(user);\r\n    }\r\n    useDeviceLanguage() {\r\n        this.languageCode = _getUserLanguage();\r\n    }\r\n    async _delete() {\r\n        this._deleted = true;\r\n    }\r\n    async updateCurrentUser(userExtern) {\r\n        // The public updateCurrentUser method needs to make a copy of the user,\r\n        // and also check that the project matches\r\n        const user = userExtern\r\n            ? getModularInstance(userExtern)\r\n            : null;\r\n        if (user) {\r\n            _assert(user.auth.config.apiKey === this.config.apiKey, this, \"invalid-user-token\" /* AuthErrorCode.INVALID_AUTH */);\r\n        }\r\n        return this._updateCurrentUser(user && user._clone(this));\r\n    }\r\n    async _updateCurrentUser(user, skipBeforeStateCallbacks = false) {\r\n        if (this._deleted) {\r\n            return;\r\n        }\r\n        if (user) {\r\n            _assert(this.tenantId === user.tenantId, this, \"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */);\r\n        }\r\n        if (!skipBeforeStateCallbacks) {\r\n            await this.beforeStateQueue.runMiddleware(user);\r\n        }\r\n        return this.queue(async () => {\r\n            await this.directlySetCurrentUser(user);\r\n            this.notifyAuthListeners();\r\n        });\r\n    }\r\n    async signOut() {\r\n        // Run first, to block _setRedirectUser() if any callbacks fail.\r\n        await this.beforeStateQueue.runMiddleware(null);\r\n        // Clear the redirect user when signOut is called\r\n        if (this.redirectPersistenceManager || this._popupRedirectResolver) {\r\n            await this._setRedirectUser(null);\r\n        }\r\n        // Prevent callbacks from being called again in _updateCurrentUser, as\r\n        // they were already called in the first line.\r\n        return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\r\n    }\r\n    setPersistence(persistence) {\r\n        return this.queue(async () => {\r\n            await this.assertedPersistence.setPersistence(_getInstance(persistence));\r\n        });\r\n    }\r\n    _getRecaptchaConfig() {\r\n        if (this.tenantId == null) {\r\n            return this._agentRecaptchaConfig;\r\n        }\r\n        else {\r\n            return this._tenantRecaptchaConfigs[this.tenantId];\r\n        }\r\n    }\r\n    async validatePassword(password) {\r\n        if (!this._getPasswordPolicyInternal()) {\r\n            await this._updatePasswordPolicy();\r\n        }\r\n        // Password policy will be defined after fetching.\r\n        const passwordPolicy = this._getPasswordPolicyInternal();\r\n        // Check that the policy schema version is supported by the SDK.\r\n        // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\r\n        if (passwordPolicy.schemaVersion !==\r\n            this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION) {\r\n            return Promise.reject(this._errorFactory.create(\"unsupported-password-policy-schema-version\" /* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */, {}));\r\n        }\r\n        return passwordPolicy.validatePassword(password);\r\n    }\r\n    _getPasswordPolicyInternal() {\r\n        if (this.tenantId === null) {\r\n            return this._projectPasswordPolicy;\r\n        }\r\n        else {\r\n            return this._tenantPasswordPolicies[this.tenantId];\r\n        }\r\n    }\r\n    async _updatePasswordPolicy() {\r\n        const response = await _getPasswordPolicy(this);\r\n        const passwordPolicy = new PasswordPolicyImpl(response);\r\n        if (this.tenantId === null) {\r\n            this._projectPasswordPolicy = passwordPolicy;\r\n        }\r\n        else {\r\n            this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\r\n        }\r\n    }\r\n    _getPersistence() {\r\n        return this.assertedPersistence.persistence.type;\r\n    }\r\n    _updateErrorMap(errorMap) {\r\n        this._errorFactory = new ErrorFactory('auth', 'Firebase', errorMap());\r\n    }\r\n    onAuthStateChanged(nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);\r\n    }\r\n    beforeAuthStateChanged(callback, onAbort) {\r\n        return this.beforeStateQueue.pushCallback(callback, onAbort);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);\r\n    }\r\n    authStateReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.currentUser) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const unsubscribe = this.onAuthStateChanged(() => {\r\n                    unsubscribe();\r\n                    resolve();\r\n                }, reject);\r\n            }\r\n        });\r\n    }\r\n    toJSON() {\r\n        var _a;\r\n        return {\r\n            apiKey: this.config.apiKey,\r\n            authDomain: this.config.authDomain,\r\n            appName: this.name,\r\n            currentUser: (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.toJSON()\r\n        };\r\n    }\r\n    async _setRedirectUser(user, popupRedirectResolver) {\r\n        const redirectManager = await this.getOrInitRedirectPersistenceManager(popupRedirectResolver);\r\n        return user === null\r\n            ? redirectManager.removeCurrentUser()\r\n            : redirectManager.setCurrentUser(user);\r\n    }\r\n    async getOrInitRedirectPersistenceManager(popupRedirectResolver) {\r\n        if (!this.redirectPersistenceManager) {\r\n            const resolver = (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\r\n                this._popupRedirectResolver;\r\n            _assert(resolver, this, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n            this.redirectPersistenceManager = await PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], \"redirectUser\" /* KeyName.REDIRECT_USER */);\r\n            this.redirectUser =\r\n                await this.redirectPersistenceManager.getCurrentUser();\r\n        }\r\n        return this.redirectPersistenceManager;\r\n    }\r\n    async _redirectUserForId(id) {\r\n        var _a, _b;\r\n        // Make sure we've cleared any pending persistence actions if we're not in\r\n        // the initializer\r\n        if (this._isInitialized) {\r\n            await this.queue(async () => { });\r\n        }\r\n        if (((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a._redirectEventId) === id) {\r\n            return this._currentUser;\r\n        }\r\n        if (((_b = this.redirectUser) === null || _b === void 0 ? void 0 : _b._redirectEventId) === id) {\r\n            return this.redirectUser;\r\n        }\r\n        return null;\r\n    }\r\n    async _persistUserIfCurrent(user) {\r\n        if (user === this.currentUser) {\r\n            return this.queue(async () => this.directlySetCurrentUser(user));\r\n        }\r\n    }\r\n    /** Notifies listeners only if the user is current */\r\n    _notifyListenersIfCurrent(user) {\r\n        if (user === this.currentUser) {\r\n            this.notifyAuthListeners();\r\n        }\r\n    }\r\n    _key() {\r\n        return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\r\n    }\r\n    _startProactiveRefresh() {\r\n        this.isProactiveRefreshEnabled = true;\r\n        if (this.currentUser) {\r\n            this._currentUser._startProactiveRefresh();\r\n        }\r\n    }\r\n    _stopProactiveRefresh() {\r\n        this.isProactiveRefreshEnabled = false;\r\n        if (this.currentUser) {\r\n            this._currentUser._stopProactiveRefresh();\r\n        }\r\n    }\r\n    /** Returns the current user cast as the internal type */\r\n    get _currentUser() {\r\n        return this.currentUser;\r\n    }\r\n    notifyAuthListeners() {\r\n        var _a, _b;\r\n        if (!this._isInitialized) {\r\n            return;\r\n        }\r\n        this.idTokenSubscription.next(this.currentUser);\r\n        const currentUid = (_b = (_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : null;\r\n        if (this.lastNotifiedUid !== currentUid) {\r\n            this.lastNotifiedUid = currentUid;\r\n            this.authStateSubscription.next(this.currentUser);\r\n        }\r\n    }\r\n    registerStateListener(subscription, nextOrObserver, error, completed) {\r\n        if (this._deleted) {\r\n            return () => { };\r\n        }\r\n        const cb = typeof nextOrObserver === 'function'\r\n            ? nextOrObserver\r\n            : nextOrObserver.next.bind(nextOrObserver);\r\n        let isUnsubscribed = false;\r\n        const promise = this._isInitialized\r\n            ? Promise.resolve()\r\n            : this._initializationPromise;\r\n        _assert(promise, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        // The callback needs to be called asynchronously per the spec.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        promise.then(() => {\r\n            if (isUnsubscribed) {\r\n                return;\r\n            }\r\n            cb(this.currentUser);\r\n        });\r\n        if (typeof nextOrObserver === 'function') {\r\n            const unsubscribe = subscription.addObserver(nextOrObserver, error, completed);\r\n            return () => {\r\n                isUnsubscribed = true;\r\n                unsubscribe();\r\n            };\r\n        }\r\n        else {\r\n            const unsubscribe = subscription.addObserver(nextOrObserver);\r\n            return () => {\r\n                isUnsubscribed = true;\r\n                unsubscribe();\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Unprotected (from race conditions) method to set the current user. This\r\n     * should only be called from within a queued callback. This is necessary\r\n     * because the queue shouldn't rely on another queued callback.\r\n     */\r\n    async directlySetCurrentUser(user) {\r\n        if (this.currentUser && this.currentUser !== user) {\r\n            this._currentUser._stopProactiveRefresh();\r\n        }\r\n        if (user && this.isProactiveRefreshEnabled) {\r\n            user._startProactiveRefresh();\r\n        }\r\n        this.currentUser = user;\r\n        if (user) {\r\n            await this.assertedPersistence.setCurrentUser(user);\r\n        }\r\n        else {\r\n            await this.assertedPersistence.removeCurrentUser();\r\n        }\r\n    }\r\n    queue(action) {\r\n        // In case something errors, the callback still should be called in order\r\n        // to keep the promise chain alive\r\n        this.operations = this.operations.then(action, action);\r\n        return this.operations;\r\n    }\r\n    get assertedPersistence() {\r\n        _assert(this.persistenceManager, this, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.persistenceManager;\r\n    }\r\n    _logFramework(framework) {\r\n        if (!framework || this.frameworks.includes(framework)) {\r\n            return;\r\n        }\r\n        this.frameworks.push(framework);\r\n        // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\r\n        // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\r\n        this.frameworks.sort();\r\n        this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());\r\n    }\r\n    _getFrameworks() {\r\n        return this.frameworks;\r\n    }\r\n    async _getAdditionalHeaders() {\r\n        var _a;\r\n        // Additional headers on every request\r\n        const headers = {\r\n            [\"X-Client-Version\" /* HttpHeader.X_CLIENT_VERSION */]: this.clientVersion\r\n        };\r\n        if (this.app.options.appId) {\r\n            headers[\"X-Firebase-gmpid\" /* HttpHeader.X_FIREBASE_GMPID */] = this.app.options.appId;\r\n        }\r\n        // If the heartbeat service exists, add the heartbeat string\r\n        const heartbeatsHeader = await ((_a = this.heartbeatServiceProvider\r\n            .getImmediate({\r\n            optional: true\r\n        })) === null || _a === void 0 ? void 0 : _a.getHeartbeatsHeader());\r\n        if (heartbeatsHeader) {\r\n            headers[\"X-Firebase-Client\" /* HttpHeader.X_FIREBASE_CLIENT */] = heartbeatsHeader;\r\n        }\r\n        // If the App Check service exists, add the App Check token in the headers\r\n        const appCheckToken = await this._getAppCheckToken();\r\n        if (appCheckToken) {\r\n            headers[\"X-Firebase-AppCheck\" /* HttpHeader.X_FIREBASE_APP_CHECK */] = appCheckToken;\r\n        }\r\n        return headers;\r\n    }\r\n    async _getAppCheckToken() {\r\n        var _a;\r\n        const appCheckTokenResult = await ((_a = this.appCheckServiceProvider\r\n            .getImmediate({ optional: true })) === null || _a === void 0 ? void 0 : _a.getToken());\r\n        if (appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.error) {\r\n            // Context: appCheck.getToken() will never throw even if an error happened.\r\n            // In the error case, a dummy token will be returned along with an error field describing\r\n            // the error. In general, we shouldn't care about the error condition and just use\r\n            // the token (actual or dummy) to send requests.\r\n            _logWarn(`Error while retrieving App Check token: ${appCheckTokenResult.error}`);\r\n        }\r\n        return appCheckTokenResult === null || appCheckTokenResult === void 0 ? void 0 : appCheckTokenResult.token;\r\n    }\r\n}\r\n/**\r\n * Method to be used to cast down to our private implmentation of Auth.\r\n * It will also handle unwrapping from the compat type if necessary\r\n *\r\n * @param auth Auth object passed in from developer\r\n */\r\nfunction _castAuth(auth) {\r\n    return getModularInstance(auth);\r\n}\r\n/** Helper class to wrap subscriber logic */\r\nclass Subscription {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.observer = null;\r\n        this.addObserver = createSubscribe(observer => (this.observer = observer));\r\n    }\r\n    get next() {\r\n        _assert(this.observer, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.observer.next.bind(this.observer);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getScriptParentElement() {\r\n    var _a, _b;\r\n    return (_b = (_a = document.getElementsByTagName('head')) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : document;\r\n}\r\nfunction _loadJS(url) {\r\n    // TODO: consider adding timeout support & cancellation\r\n    return new Promise((resolve, reject) => {\r\n        const el = document.createElement('script');\r\n        el.setAttribute('src', url);\r\n        el.onload = resolve;\r\n        el.onerror = e => {\r\n            const error = _createError(\"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n            error.customData = e;\r\n            reject(error);\r\n        };\r\n        el.type = 'text/javascript';\r\n        el.charset = 'UTF-8';\r\n        getScriptParentElement().appendChild(el);\r\n    });\r\n}\r\nfunction _generateCallbackName(prefix) {\r\n    return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\r\n}\n\n/* eslint-disable @typescript-eslint/no-require-imports */\r\nconst RECAPTCHA_ENTERPRISE_URL = 'https://www.google.com/recaptcha/enterprise.js?render=';\r\nconst RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\r\nconst FAKE_TOKEN = 'NO_RECAPTCHA';\r\nclass RecaptchaEnterpriseVerifier {\r\n    /**\r\n     *\r\n     * @param authExtern - The corresponding Firebase {@link Auth} instance.\r\n     *\r\n     */\r\n    constructor(authExtern) {\r\n        /**\r\n         * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\r\n         */\r\n        this.type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\r\n        this.auth = _castAuth(authExtern);\r\n    }\r\n    /**\r\n     * Executes the verification process.\r\n     *\r\n     * @returns A Promise for a token that can be used to assert the validity of a request.\r\n     */\r\n    async verify(action = 'verify', forceRefresh = false) {\r\n        async function retrieveSiteKey(auth) {\r\n            if (!forceRefresh) {\r\n                if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\r\n                    return auth._agentRecaptchaConfig.siteKey;\r\n                }\r\n                if (auth.tenantId != null &&\r\n                    auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined) {\r\n                    return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\r\n                }\r\n            }\r\n            return new Promise(async (resolve, reject) => {\r\n                getRecaptchaConfig(auth, {\r\n                    clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\r\n                    version: \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\r\n                })\r\n                    .then(response => {\r\n                    if (response.recaptchaKey === undefined) {\r\n                        reject(new Error('recaptcha Enterprise site key undefined'));\r\n                    }\r\n                    else {\r\n                        const config = new RecaptchaConfig(response);\r\n                        if (auth.tenantId == null) {\r\n                            auth._agentRecaptchaConfig = config;\r\n                        }\r\n                        else {\r\n                            auth._tenantRecaptchaConfigs[auth.tenantId] = config;\r\n                        }\r\n                        return resolve(config.siteKey);\r\n                    }\r\n                })\r\n                    .catch(error => {\r\n                    reject(error);\r\n                });\r\n            });\r\n        }\r\n        function retrieveRecaptchaToken(siteKey, resolve, reject) {\r\n            const grecaptcha = window.grecaptcha;\r\n            if (isEnterprise(grecaptcha)) {\r\n                grecaptcha.enterprise.ready(() => {\r\n                    grecaptcha.enterprise\r\n                        .execute(siteKey, { action })\r\n                        .then(token => {\r\n                        resolve(token);\r\n                    })\r\n                        .catch(() => {\r\n                        resolve(FAKE_TOKEN);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                reject(Error('No reCAPTCHA enterprise script loaded.'));\r\n            }\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            retrieveSiteKey(this.auth)\r\n                .then(siteKey => {\r\n                if (!forceRefresh && isEnterprise(window.grecaptcha)) {\r\n                    retrieveRecaptchaToken(siteKey, resolve, reject);\r\n                }\r\n                else {\r\n                    if (typeof window === 'undefined') {\r\n                        reject(new Error('RecaptchaVerifier is only supported in browser'));\r\n                        return;\r\n                    }\r\n                    _loadJS(RECAPTCHA_ENTERPRISE_URL + siteKey)\r\n                        .then(() => {\r\n                        retrieveRecaptchaToken(siteKey, resolve, reject);\r\n                    })\r\n                        .catch(error => {\r\n                        reject(error);\r\n                    });\r\n                }\r\n            })\r\n                .catch(error => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n}\r\nasync function injectRecaptchaFields(auth, request, action, captchaResp = false) {\r\n    const verifier = new RecaptchaEnterpriseVerifier(auth);\r\n    let captchaResponse;\r\n    try {\r\n        captchaResponse = await verifier.verify(action);\r\n    }\r\n    catch (error) {\r\n        captchaResponse = await verifier.verify(action, true);\r\n    }\r\n    const newRequest = Object.assign({}, request);\r\n    if (!captchaResp) {\r\n        Object.assign(newRequest, { captchaResponse });\r\n    }\r\n    else {\r\n        Object.assign(newRequest, { 'captchaResp': captchaResponse });\r\n    }\r\n    Object.assign(newRequest, { 'clientType': \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */ });\r\n    Object.assign(newRequest, {\r\n        'recaptchaVersion': \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\r\n    });\r\n    return newRequest;\r\n}\r\nasync function handleRecaptchaFlow(authInstance, request, actionName, actionMethod) {\r\n    var _a;\r\n    if ((_a = authInstance\r\n        ._getRecaptchaConfig()) === null || _a === void 0 ? void 0 : _a.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaProvider.EMAIL_PASSWORD_PROVIDER */)) {\r\n        const requestWithRecaptcha = await injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */);\r\n        return actionMethod(authInstance, requestWithRecaptcha);\r\n    }\r\n    else {\r\n        return actionMethod(authInstance, request).catch(async (error) => {\r\n            if (error.code === `auth/${\"missing-recaptcha-token\" /* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */}`) {\r\n                console.log(`${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`);\r\n                const requestWithRecaptcha = await injectRecaptchaFields(authInstance, request, actionName, actionName === \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */);\r\n                return actionMethod(authInstance, requestWithRecaptcha);\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n}\r\nasync function _initializeRecaptchaConfig(auth) {\r\n    const authInternal = _castAuth(auth);\r\n    const response = await getRecaptchaConfig(authInternal, {\r\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */,\r\n        version: \"RECAPTCHA_ENTERPRISE\" /* RecaptchaVersion.ENTERPRISE */\r\n    });\r\n    const config = new RecaptchaConfig(response);\r\n    if (authInternal.tenantId == null) {\r\n        authInternal._agentRecaptchaConfig = config;\r\n    }\r\n    else {\r\n        authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\r\n    }\r\n    if (config.isProviderEnabled(\"EMAIL_PASSWORD_PROVIDER\" /* RecaptchaProvider.EMAIL_PASSWORD_PROVIDER */)) {\r\n        const verifier = new RecaptchaEnterpriseVerifier(authInternal);\r\n        void verifier.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Initializes an {@link Auth} instance with fine-grained control over\r\n * {@link Dependencies}.\r\n *\r\n * @remarks\r\n *\r\n * This function allows more control over the {@link Auth} instance than\r\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\r\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\r\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\r\n * need control over which persistence layer is used, or to minimize bundle\r\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\r\n *\r\n * For example, if your app only uses anonymous accounts and you only want\r\n * accounts saved for the current session, initialize `Auth` with:\r\n *\r\n * ```js\r\n * const auth = initializeAuth(app, {\r\n *   persistence: browserSessionPersistence,\r\n *   popupRedirectResolver: undefined,\r\n * });\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction initializeAuth(app, deps) {\r\n    const provider = _getProvider(app, 'auth');\r\n    if (provider.isInitialized()) {\r\n        const auth = provider.getImmediate();\r\n        const initialOptions = provider.getOptions();\r\n        if (deepEqual(initialOptions, deps !== null && deps !== void 0 ? deps : {})) {\r\n            return auth;\r\n        }\r\n        else {\r\n            _fail(auth, \"already-initialized\" /* AuthErrorCode.ALREADY_INITIALIZED */);\r\n        }\r\n    }\r\n    const auth = provider.initialize({ options: deps });\r\n    return auth;\r\n}\r\nfunction _initializeAuthInstance(auth, deps) {\r\n    const persistence = (deps === null || deps === void 0 ? void 0 : deps.persistence) || [];\r\n    const hierarchy = (Array.isArray(persistence) ? persistence : [persistence]).map(_getInstance);\r\n    if (deps === null || deps === void 0 ? void 0 : deps.errorMap) {\r\n        auth._updateErrorMap(deps.errorMap);\r\n    }\r\n    // This promise is intended to float; auth initialization happens in the\r\n    // background, meanwhile the auth object may be used by the app.\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    auth._initializeWithPersistence(hierarchy, deps === null || deps === void 0 ? void 0 : deps.popupRedirectResolver);\r\n}\n\n/**\r\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\r\n * Firebase Auth services.\r\n *\r\n * @remarks\r\n * This must be called synchronously immediately following the first call to\r\n * {@link initializeAuth}.  Do not use with production credentials as emulator\r\n * traffic is not encrypted.\r\n *\r\n *\r\n * @example\r\n * ```javascript\r\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\r\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\r\n * `true` to disable the warning banner attached to the DOM.\r\n *\r\n * @public\r\n */\r\nfunction connectAuthEmulator(auth, url, options) {\r\n    const authInternal = _castAuth(auth);\r\n    _assert(authInternal._canInitEmulator, authInternal, \"emulator-config-failed\" /* AuthErrorCode.EMULATOR_CONFIG_FAILED */);\r\n    _assert(/^https?:\\/\\//.test(url), authInternal, \"invalid-emulator-scheme\" /* AuthErrorCode.INVALID_EMULATOR_SCHEME */);\r\n    const disableWarnings = !!(options === null || options === void 0 ? void 0 : options.disableWarnings);\r\n    const protocol = extractProtocol(url);\r\n    const { host, port } = extractHostAndPort(url);\r\n    const portStr = port === null ? '' : `:${port}`;\r\n    // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\r\n    authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\r\n    authInternal.settings.appVerificationDisabledForTesting = true;\r\n    authInternal.emulatorConfig = Object.freeze({\r\n        host,\r\n        port,\r\n        protocol: protocol.replace(':', ''),\r\n        options: Object.freeze({ disableWarnings })\r\n    });\r\n    if (!disableWarnings) {\r\n        emitEmulatorWarning();\r\n    }\r\n}\r\nfunction extractProtocol(url) {\r\n    const protocolEnd = url.indexOf(':');\r\n    return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\r\n}\r\nfunction extractHostAndPort(url) {\r\n    const protocol = extractProtocol(url);\r\n    const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\r\n    if (!authority) {\r\n        return { host: '', port: null };\r\n    }\r\n    const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\r\n    const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\r\n    if (bracketedIPv6) {\r\n        const host = bracketedIPv6[1];\r\n        return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\r\n    }\r\n    else {\r\n        const [host, port] = hostAndPort.split(':');\r\n        return { host, port: parsePort(port) };\r\n    }\r\n}\r\nfunction parsePort(portStr) {\r\n    if (!portStr) {\r\n        return null;\r\n    }\r\n    const port = Number(portStr);\r\n    if (isNaN(port)) {\r\n        return null;\r\n    }\r\n    return port;\r\n}\r\nfunction emitEmulatorWarning() {\r\n    function attachBanner() {\r\n        const el = document.createElement('p');\r\n        const sty = el.style;\r\n        el.innerText =\r\n            'Running in emulator mode. Do not use with production credentials.';\r\n        sty.position = 'fixed';\r\n        sty.width = '100%';\r\n        sty.backgroundColor = '#ffffff';\r\n        sty.border = '.1em solid #000000';\r\n        sty.color = '#b50000';\r\n        sty.bottom = '0px';\r\n        sty.left = '0px';\r\n        sty.margin = '0px';\r\n        sty.zIndex = '10000';\r\n        sty.textAlign = 'center';\r\n        el.classList.add('firebase-emulator-warning');\r\n        document.body.appendChild(el);\r\n    }\r\n    if (typeof console !== 'undefined' && typeof console.info === 'function') {\r\n        console.info('WARNING: You are using the Auth Emulator,' +\r\n            ' which is intended for local testing only.  Do not use with' +\r\n            ' production credentials.');\r\n    }\r\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\r\n        if (document.readyState === 'loading') {\r\n            window.addEventListener('DOMContentLoaded', attachBanner);\r\n        }\r\n        else {\r\n            attachBanner();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface that represents the credentials returned by an {@link AuthProvider}.\r\n *\r\n * @remarks\r\n * Implementations specify the details about each auth provider's credential requirements.\r\n *\r\n * @public\r\n */\r\nclass AuthCredential {\r\n    /** @internal */\r\n    constructor(\r\n    /**\r\n     * The authentication provider ID for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, 'facebook.com', or 'google.com'.\r\n     */\r\n    providerId, \r\n    /**\r\n     * The authentication sign in method for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\r\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\r\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\r\n     */\r\n    signInMethod) {\r\n        this.providerId = providerId;\r\n        this.signInMethod = signInMethod;\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     *\r\n     * @returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(_auth) {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(_auth, _idToken) {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(_auth) {\r\n        return debugFail('not implemented');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function resetPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:resetPassword\" /* Endpoint.RESET_PASSWORD */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function updateEmailPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request);\r\n}\r\nasync function applyActionCode$1(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithPassword(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPassword\" /* Endpoint.SIGN_IN_WITH_PASSWORD */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function sendOobCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:sendOobCode\" /* Endpoint.SEND_OOB_CODE */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function sendEmailVerification$1(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function sendPasswordResetEmail$1(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function sendSignInLinkToEmail$1(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function verifyAndChangeEmail(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithEmailLink$1(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithEmailLink\" /* Endpoint.SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function signInWithEmailLinkForLinking(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithEmailLink\" /* Endpoint.SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\r\n * {@link ProviderId}.PASSWORD\r\n *\r\n * @remarks\r\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\r\n * {@link SignInMethod}.EMAIL_LINK.\r\n *\r\n * @public\r\n */\r\nclass EmailAuthCredential extends AuthCredential {\r\n    /** @internal */\r\n    constructor(\r\n    /** @internal */\r\n    _email, \r\n    /** @internal */\r\n    _password, signInMethod, \r\n    /** @internal */\r\n    _tenantId = null) {\r\n        super(\"password\" /* ProviderId.PASSWORD */, signInMethod);\r\n        this._email = _email;\r\n        this._password = _password;\r\n        this._tenantId = _tenantId;\r\n    }\r\n    /** @internal */\r\n    static _fromEmailAndPassword(email, password) {\r\n        return new EmailAuthCredential(email, password, \"password\" /* SignInMethod.EMAIL_PASSWORD */);\r\n    }\r\n    /** @internal */\r\n    static _fromEmailAndCode(email, oobCode, tenantId = null) {\r\n        return new EmailAuthCredential(email, oobCode, \"emailLink\" /* SignInMethod.EMAIL_LINK */, tenantId);\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON} */\r\n    toJSON() {\r\n        return {\r\n            email: this._email,\r\n            password: this._password,\r\n            signInMethod: this.signInMethod,\r\n            tenantId: this._tenantId\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\r\n     *\r\n     * @param json - Either `object` or the stringified representation of the object. When string is\r\n     * provided, `JSON.parse` would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        if ((obj === null || obj === void 0 ? void 0 : obj.email) && (obj === null || obj === void 0 ? void 0 : obj.password)) {\r\n            if (obj.signInMethod === \"password\" /* SignInMethod.EMAIL_PASSWORD */) {\r\n                return this._fromEmailAndPassword(obj.email, obj.password);\r\n            }\r\n            else if (obj.signInMethod === \"emailLink\" /* SignInMethod.EMAIL_LINK */) {\r\n                return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    async _getIdTokenResponse(auth) {\r\n        switch (this.signInMethod) {\r\n            case \"password\" /* SignInMethod.EMAIL_PASSWORD */:\r\n                const request = {\r\n                    returnSecureToken: true,\r\n                    email: this._email,\r\n                    password: this._password,\r\n                    clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\r\n                };\r\n                return handleRecaptchaFlow(auth, request, \"signInWithPassword\" /* RecaptchaActionName.SIGN_IN_WITH_PASSWORD */, signInWithPassword);\r\n            case \"emailLink\" /* SignInMethod.EMAIL_LINK */:\r\n                return signInWithEmailLink$1(auth, {\r\n                    email: this._email,\r\n                    oobCode: this._password\r\n                });\r\n            default:\r\n                _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    /** @internal */\r\n    async _linkToIdToken(auth, idToken) {\r\n        switch (this.signInMethod) {\r\n            case \"password\" /* SignInMethod.EMAIL_PASSWORD */:\r\n                return updateEmailPassword(auth, {\r\n                    idToken,\r\n                    returnSecureToken: true,\r\n                    email: this._email,\r\n                    password: this._password\r\n                });\r\n            case \"emailLink\" /* SignInMethod.EMAIL_LINK */:\r\n                return signInWithEmailLinkForLinking(auth, {\r\n                    idToken,\r\n                    email: this._email,\r\n                    oobCode: this._password\r\n                });\r\n            default:\r\n                _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        return this._getIdTokenResponse(auth);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithIdp(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithIdp\" /* Endpoint.SIGN_IN_WITH_IDP */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IDP_REQUEST_URI$1 = 'http://localhost';\r\n/**\r\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\r\n *\r\n * @remarks\r\n * Implementations specify the details about each auth provider's credential requirements.\r\n *\r\n * @public\r\n */\r\nclass OAuthCredential extends AuthCredential {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.pendingToken = null;\r\n    }\r\n    /** @internal */\r\n    static _fromParams(params) {\r\n        const cred = new OAuthCredential(params.providerId, params.signInMethod);\r\n        if (params.idToken || params.accessToken) {\r\n            // OAuth 2 and either ID token or access token.\r\n            if (params.idToken) {\r\n                cred.idToken = params.idToken;\r\n            }\r\n            if (params.accessToken) {\r\n                cred.accessToken = params.accessToken;\r\n            }\r\n            // Add nonce if available and no pendingToken is present.\r\n            if (params.nonce && !params.pendingToken) {\r\n                cred.nonce = params.nonce;\r\n            }\r\n            if (params.pendingToken) {\r\n                cred.pendingToken = params.pendingToken;\r\n            }\r\n        }\r\n        else if (params.oauthToken && params.oauthTokenSecret) {\r\n            // OAuth 1 and OAuth token with token secret\r\n            cred.accessToken = params.oauthToken;\r\n            cred.secret = params.oauthTokenSecret;\r\n        }\r\n        else {\r\n            _fail(\"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        }\r\n        return cred;\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    toJSON() {\r\n        return {\r\n            idToken: this.idToken,\r\n            accessToken: this.accessToken,\r\n            secret: this.secret,\r\n            nonce: this.nonce,\r\n            pendingToken: this.pendingToken,\r\n            providerId: this.providerId,\r\n            signInMethod: this.signInMethod\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        const { providerId, signInMethod } = obj, rest = __rest(obj, [\"providerId\", \"signInMethod\"]);\r\n        if (!providerId || !signInMethod) {\r\n            return null;\r\n        }\r\n        const cred = new OAuthCredential(providerId, signInMethod);\r\n        cred.idToken = rest.idToken || undefined;\r\n        cred.accessToken = rest.accessToken || undefined;\r\n        cred.secret = rest.secret;\r\n        cred.nonce = rest.nonce;\r\n        cred.pendingToken = rest.pendingToken || null;\r\n        return cred;\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        const request = this.buildRequest();\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        const request = this.buildRequest();\r\n        request.idToken = idToken;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        const request = this.buildRequest();\r\n        request.autoCreate = false;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    buildRequest() {\r\n        const request = {\r\n            requestUri: IDP_REQUEST_URI$1,\r\n            returnSecureToken: true\r\n        };\r\n        if (this.pendingToken) {\r\n            request.pendingToken = this.pendingToken;\r\n        }\r\n        else {\r\n            const postBody = {};\r\n            if (this.idToken) {\r\n                postBody['id_token'] = this.idToken;\r\n            }\r\n            if (this.accessToken) {\r\n                postBody['access_token'] = this.accessToken;\r\n            }\r\n            if (this.secret) {\r\n                postBody['oauth_token_secret'] = this.secret;\r\n            }\r\n            postBody['providerId'] = this.providerId;\r\n            if (this.nonce && !this.pendingToken) {\r\n                postBody['nonce'] = this.nonce;\r\n            }\r\n            request.postBody = querystring(postBody);\r\n        }\r\n        return request;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function sendPhoneVerificationCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:sendVerificationCode\" /* Endpoint.SEND_VERIFICATION_CODE */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function signInWithPhoneNumber$1(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function linkWithPhoneNumber$1(auth, request) {\r\n    const response = await _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\r\n    if (response.temporaryProof) {\r\n        throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* AuthErrorCode.NEED_CONFIRMATION */, response);\r\n    }\r\n    return response;\r\n}\r\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = {\r\n    [\"USER_NOT_FOUND\" /* ServerError.USER_NOT_FOUND */]: \"user-not-found\" /* AuthErrorCode.USER_DELETED */\r\n};\r\nasync function verifyPhoneNumberForExisting(auth, request) {\r\n    const apiRequest = Object.assign(Object.assign({}, request), { operation: 'REAUTH' });\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithPhoneNumber\" /* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents the credentials returned by {@link PhoneAuthProvider}.\r\n *\r\n * @public\r\n */\r\nclass PhoneAuthCredential extends AuthCredential {\r\n    constructor(params) {\r\n        super(\"phone\" /* ProviderId.PHONE */, \"phone\" /* SignInMethod.PHONE */);\r\n        this.params = params;\r\n    }\r\n    /** @internal */\r\n    static _fromVerification(verificationId, verificationCode) {\r\n        return new PhoneAuthCredential({ verificationId, verificationCode });\r\n    }\r\n    /** @internal */\r\n    static _fromTokenResponse(phoneNumber, temporaryProof) {\r\n        return new PhoneAuthCredential({ phoneNumber, temporaryProof });\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        return signInWithPhoneNumber$1(auth, this._makeVerificationRequest());\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        return linkWithPhoneNumber$1(auth, Object.assign({ idToken }, this._makeVerificationRequest()));\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\r\n    }\r\n    /** @internal */\r\n    _makeVerificationRequest() {\r\n        const { temporaryProof, phoneNumber, verificationId, verificationCode } = this.params;\r\n        if (temporaryProof && phoneNumber) {\r\n            return { temporaryProof, phoneNumber };\r\n        }\r\n        return {\r\n            sessionInfo: verificationId,\r\n            code: verificationCode\r\n        };\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON} */\r\n    toJSON() {\r\n        const obj = {\r\n            providerId: this.providerId\r\n        };\r\n        if (this.params.phoneNumber) {\r\n            obj.phoneNumber = this.params.phoneNumber;\r\n        }\r\n        if (this.params.temporaryProof) {\r\n            obj.temporaryProof = this.params.temporaryProof;\r\n        }\r\n        if (this.params.verificationCode) {\r\n            obj.verificationCode = this.params.verificationCode;\r\n        }\r\n        if (this.params.verificationId) {\r\n            obj.verificationId = this.params.verificationId;\r\n        }\r\n        return obj;\r\n    }\r\n    /** Generates a phone credential based on a plain object or a JSON string. */\r\n    static fromJSON(json) {\r\n        if (typeof json === 'string') {\r\n            json = JSON.parse(json);\r\n        }\r\n        const { verificationId, verificationCode, phoneNumber, temporaryProof } = json;\r\n        if (!verificationCode &&\r\n            !verificationId &&\r\n            !phoneNumber &&\r\n            !temporaryProof) {\r\n            return null;\r\n        }\r\n        return new PhoneAuthCredential({\r\n            verificationId,\r\n            verificationCode,\r\n            phoneNumber,\r\n            temporaryProof\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps the mode string in action code URL to Action Code Info operation.\r\n *\r\n * @param mode\r\n */\r\nfunction parseMode(mode) {\r\n    switch (mode) {\r\n        case 'recoverEmail':\r\n            return \"RECOVER_EMAIL\" /* ActionCodeOperation.RECOVER_EMAIL */;\r\n        case 'resetPassword':\r\n            return \"PASSWORD_RESET\" /* ActionCodeOperation.PASSWORD_RESET */;\r\n        case 'signIn':\r\n            return \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */;\r\n        case 'verifyEmail':\r\n            return \"VERIFY_EMAIL\" /* ActionCodeOperation.VERIFY_EMAIL */;\r\n        case 'verifyAndChangeEmail':\r\n            return \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */;\r\n        case 'revertSecondFactorAddition':\r\n            return \"REVERT_SECOND_FACTOR_ADDITION\" /* ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION */;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n/**\r\n * Helper to parse FDL links\r\n *\r\n * @param url\r\n */\r\nfunction parseDeepLink(url) {\r\n    const link = querystringDecode(extractQuerystring(url))['link'];\r\n    // Double link case (automatic redirect).\r\n    const doubleDeepLink = link\r\n        ? querystringDecode(extractQuerystring(link))['deep_link_id']\r\n        : null;\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = querystringDecode(extractQuerystring(url))['deep_link_id'];\r\n    const iOSDoubleDeepLink = iOSDeepLink\r\n        ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\r\n        : null;\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * A utility class to parse email action URLs such as password reset, email verification,\r\n * email link sign in, etc.\r\n *\r\n * @public\r\n */\r\nclass ActionCodeURL {\r\n    /**\r\n     * @param actionLink - The link from which to extract the URL.\r\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(actionLink) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const searchParams = querystringDecode(extractQuerystring(actionLink));\r\n        const apiKey = (_a = searchParams[\"apiKey\" /* QueryField.API_KEY */]) !== null && _a !== void 0 ? _a : null;\r\n        const code = (_b = searchParams[\"oobCode\" /* QueryField.CODE */]) !== null && _b !== void 0 ? _b : null;\r\n        const operation = parseMode((_c = searchParams[\"mode\" /* QueryField.MODE */]) !== null && _c !== void 0 ? _c : null);\r\n        // Validate API key, code and mode.\r\n        _assert(apiKey && code && operation, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        this.apiKey = apiKey;\r\n        this.operation = operation;\r\n        this.code = code;\r\n        this.continueUrl = (_d = searchParams[\"continueUrl\" /* QueryField.CONTINUE_URL */]) !== null && _d !== void 0 ? _d : null;\r\n        this.languageCode = (_e = searchParams[\"languageCode\" /* QueryField.LANGUAGE_CODE */]) !== null && _e !== void 0 ? _e : null;\r\n        this.tenantId = (_f = searchParams[\"tenantId\" /* QueryField.TENANT_ID */]) !== null && _f !== void 0 ? _f : null;\r\n    }\r\n    /**\r\n     * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\r\n     * otherwise returns null.\r\n     *\r\n     * @param link  - The email action link string.\r\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\r\n     *\r\n     * @public\r\n     */\r\n    static parseLink(link) {\r\n        const actionLink = parseDeepLink(link);\r\n        try {\r\n            return new ActionCodeURL(actionLink);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Parses the email action link string and returns an {@link ActionCodeURL} if\r\n * the link is valid, otherwise returns null.\r\n *\r\n * @public\r\n */\r\nfunction parseActionCodeURL(link) {\r\n    return ActionCodeURL.parseLink(link);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating {@link EmailAuthCredential}.\r\n *\r\n * @public\r\n */\r\nclass EmailAuthProvider {\r\n    constructor() {\r\n        /**\r\n         * Always set to {@link ProviderId}.PASSWORD, even for email link.\r\n         */\r\n        this.providerId = EmailAuthProvider.PROVIDER_ID;\r\n    }\r\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and password.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credential(email, password);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     * ```\r\n     *\r\n     * @param email - Email address.\r\n     * @param password - User account password.\r\n     * @returns The auth provider credential.\r\n     */\r\n    static credential(email, password) {\r\n        return EmailAuthCredential._fromEmailAndPassword(email, password);\r\n    }\r\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\r\n     * email link operation.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * await sendSignInLinkToEmail(auth, email);\r\n     * // Obtain emailLink from user.\r\n     * const userCredential = await signInWithEmailLink(auth, email, emailLink);\r\n     * ```\r\n     *\r\n     * @param auth - The {@link Auth} instance used to verify the link.\r\n     * @param email - Email address.\r\n     * @param emailLink - Sign-in email link.\r\n     * @returns - The auth provider credential.\r\n     */\r\n    static credentialWithLink(email, emailLink) {\r\n        const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\r\n        _assert(actionCodeUrl, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        return EmailAuthCredential._fromEmailAndCode(email, actionCodeUrl.code, actionCodeUrl.tenantId);\r\n    }\r\n}\r\n/**\r\n * Always set to {@link ProviderId}.PASSWORD, even for email link.\r\n */\r\nEmailAuthProvider.PROVIDER_ID = \"password\" /* ProviderId.PASSWORD */;\r\n/**\r\n * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\r\n */\r\nEmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD = \"password\" /* SignInMethod.EMAIL_PASSWORD */;\r\n/**\r\n * Always set to {@link SignInMethod}.EMAIL_LINK.\r\n */\r\nEmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD = \"emailLink\" /* SignInMethod.EMAIL_LINK */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\r\n *\r\n * This class is not meant to be instantiated directly.\r\n *\r\n * @public\r\n */\r\nclass FederatedAuthProvider {\r\n    /**\r\n     * Constructor for generic OAuth providers.\r\n     *\r\n     * @param providerId - Provider for which credentials should be generated.\r\n     */\r\n    constructor(providerId) {\r\n        this.providerId = providerId;\r\n        /** @internal */\r\n        this.defaultLanguageCode = null;\r\n        /** @internal */\r\n        this.customParameters = {};\r\n    }\r\n    /**\r\n     * Set the language gode.\r\n     *\r\n     * @param languageCode - language code\r\n     */\r\n    setDefaultLanguage(languageCode) {\r\n        this.defaultLanguageCode = languageCode;\r\n    }\r\n    /**\r\n     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\r\n     * operations.\r\n     *\r\n     * @remarks\r\n     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\r\n     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\r\n     *\r\n     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\r\n     */\r\n    setCustomParameters(customOAuthParameters) {\r\n        this.customParameters = customOAuthParameters;\r\n        return this;\r\n    }\r\n    /**\r\n     * Retrieve the current list of {@link CustomParameters}.\r\n     */\r\n    getCustomParameters() {\r\n        return this.customParameters;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Common code to all OAuth providers. This is separate from the\r\n * {@link OAuthProvider} so that child providers (like\r\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\r\n * Instead, they rely on a static `credential` method.\r\n */\r\nclass BaseOAuthProvider extends FederatedAuthProvider {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** @internal */\r\n        this.scopes = [];\r\n    }\r\n    /**\r\n     * Add an OAuth scope to the credential.\r\n     *\r\n     * @param scope - Provider OAuth scope to add.\r\n     */\r\n    addScope(scope) {\r\n        // If not already added, add scope to list.\r\n        if (!this.scopes.includes(scope)) {\r\n            this.scopes.push(scope);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Retrieve the current list of OAuth scopes.\r\n     */\r\n    getScopes() {\r\n        return [...this.scopes];\r\n    }\r\n}\r\n/**\r\n * Provider for generating generic {@link OAuthCredential}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new OAuthProvider('google.com');\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a OAuth Access Token for the provider.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new OAuthProvider('google.com');\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a OAuth Access Token for the provider.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n * @public\r\n */\r\nclass OAuthProvider extends BaseOAuthProvider {\r\n    /**\r\n     * Creates an {@link OAuthCredential} from a JSON string or a plain object.\r\n     * @param json - A plain object or a JSON string\r\n     */\r\n    static credentialFromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        _assert('providerId' in obj && 'signInMethod' in obj, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        return OAuthCredential._fromParams(obj);\r\n    }\r\n    /**\r\n     * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\r\n     *\r\n     * @remarks\r\n     * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\r\n     * the raw nonce must match the nonce field in the ID token.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `googleUser` from the onsuccess Google Sign In callback.\r\n     * // Initialize a generate OAuth provider with a `google.com` providerId.\r\n     * const provider = new OAuthProvider('google.com');\r\n     * const credential = provider.credential({\r\n     *   idToken: googleUser.getAuthResponse().id_token,\r\n     * });\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param params - Either the options object containing the ID token, access token and raw nonce\r\n     * or the ID token string.\r\n     */\r\n    credential(params) {\r\n        return this._credential(Object.assign(Object.assign({}, params), { nonce: params.rawNonce }));\r\n    }\r\n    /** An internal credential method that accepts more permissive options */\r\n    _credential(params) {\r\n        _assert(params.idToken || params.accessToken, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        // For OAuthCredential, sign in method is same as providerId.\r\n        return OAuthCredential._fromParams(Object.assign(Object.assign({}, params), { providerId: this.providerId, signInMethod: this.providerId }));\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return OAuthProvider.oauthCredentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return OAuthProvider.oauthCredentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static oauthCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce, providerId } = tokenResponse;\r\n        if (!oauthAccessToken &&\r\n            !oauthTokenSecret &&\r\n            !oauthIdToken &&\r\n            !pendingToken) {\r\n            return null;\r\n        }\r\n        if (!providerId) {\r\n            return null;\r\n        }\r\n        try {\r\n            return new OAuthProvider(providerId)._credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                nonce,\r\n                pendingToken\r\n            });\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('user_birthday');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * provider.addScope('user_birthday');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = FacebookAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass FacebookAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"facebook.com\" /* ProviderId.FACEBOOK */);\r\n    }\r\n    /**\r\n     * Creates a credential for Facebook.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `event` from the Facebook auth.authResponseChange callback.\r\n     * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param accessToken - Facebook access token.\r\n     */\r\n    static credential(accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: FacebookAuthProvider.PROVIDER_ID,\r\n            signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return FacebookAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return FacebookAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\r\n            return null;\r\n        }\r\n        if (!tokenResponse.oauthAccessToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.FACEBOOK. */\r\nFacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD = \"facebook.com\" /* SignInMethod.FACEBOOK */;\r\n/** Always set to {@link ProviderId}.FACEBOOK. */\r\nFacebookAuthProvider.PROVIDER_ID = \"facebook.com\" /* ProviderId.FACEBOOK */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new GoogleAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Google Access Token.\r\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new GoogleAuthProvider();\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Google Access Token.\r\n * const credential = GoogleAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass GoogleAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"google.com\" /* ProviderId.GOOGLE */);\r\n        this.addScope('profile');\r\n    }\r\n    /**\r\n     * Creates a credential for Google. At least one of ID token and access token is required.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // \\`googleUser\\` from the onsuccess Google Sign In callback.\r\n     * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param idToken - Google ID token.\r\n     * @param accessToken - Google access token.\r\n     */\r\n    static credential(idToken, accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: GoogleAuthProvider.PROVIDER_ID,\r\n            signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\r\n            idToken,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return GoogleAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return GoogleAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthIdToken, oauthAccessToken } = tokenResponse;\r\n        if (!oauthIdToken && !oauthAccessToken) {\r\n            // This could be an oauth 1 credential or a phone credential\r\n            return null;\r\n        }\r\n        try {\r\n            return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.GOOGLE. */\r\nGoogleAuthProvider.GOOGLE_SIGN_IN_METHOD = \"google.com\" /* SignInMethod.GOOGLE */;\r\n/** Always set to {@link ProviderId}.GOOGLE. */\r\nGoogleAuthProvider.PROVIDER_ID = \"google.com\" /* ProviderId.GOOGLE */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\r\n *\r\n * @remarks\r\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\r\n * the {@link signInWithPopup} handler:\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new GithubAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('repo');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Github Access Token.\r\n *   const credential = GithubAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new GithubAuthProvider();\r\n * provider.addScope('repo');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Github Access Token.\r\n * const credential = GithubAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * ```\r\n * @public\r\n */\r\nclass GithubAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"github.com\" /* ProviderId.GITHUB */);\r\n    }\r\n    /**\r\n     * Creates a credential for Github.\r\n     *\r\n     * @param accessToken - Github access token.\r\n     */\r\n    static credential(accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: GithubAuthProvider.PROVIDER_ID,\r\n            signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return GithubAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return GithubAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\r\n            return null;\r\n        }\r\n        if (!tokenResponse.oauthAccessToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.GITHUB. */\r\nGithubAuthProvider.GITHUB_SIGN_IN_METHOD = \"github.com\" /* SignInMethod.GITHUB */;\r\n/** Always set to {@link ProviderId}.GITHUB. */\r\nGithubAuthProvider.PROVIDER_ID = \"github.com\" /* ProviderId.GITHUB */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IDP_REQUEST_URI = 'http://localhost';\r\n/**\r\n * @public\r\n */\r\nclass SAMLAuthCredential extends AuthCredential {\r\n    /** @internal */\r\n    constructor(providerId, pendingToken) {\r\n        super(providerId, providerId);\r\n        this.pendingToken = pendingToken;\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        const request = this.buildRequest();\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        const request = this.buildRequest();\r\n        request.idToken = idToken;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        const request = this.buildRequest();\r\n        request.autoCreate = false;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    toJSON() {\r\n        return {\r\n            signInMethod: this.signInMethod,\r\n            providerId: this.providerId,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        const { providerId, signInMethod, pendingToken } = obj;\r\n        if (!providerId ||\r\n            !signInMethod ||\r\n            !pendingToken ||\r\n            providerId !== signInMethod) {\r\n            return null;\r\n        }\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    }\r\n    /**\r\n     * Helper static method to avoid exposing the constructor to end users.\r\n     *\r\n     * @internal\r\n     */\r\n    static _create(providerId, pendingToken) {\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    }\r\n    buildRequest() {\r\n        return {\r\n            requestUri: IDP_REQUEST_URI,\r\n            returnSecureToken: true,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SAML_PROVIDER_PREFIX = 'saml.';\r\n/**\r\n * An {@link AuthProvider} for SAML.\r\n *\r\n * @public\r\n */\r\nclass SAMLAuthProvider extends FederatedAuthProvider {\r\n    /**\r\n     * Constructor. The providerId must start with \"saml.\"\r\n     * @param providerId - SAML provider ID.\r\n     */\r\n    constructor(providerId) {\r\n        _assert(providerId.startsWith(SAML_PROVIDER_PREFIX), \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        super(providerId);\r\n    }\r\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential} after a\r\n     * successful SAML flow completes.\r\n     *\r\n     * @remarks\r\n     *\r\n     * For example, to get an {@link AuthCredential}, you could write the\r\n     * following code:\r\n     *\r\n     * ```js\r\n     * const userCredential = await signInWithPopup(auth, samlProvider);\r\n     * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\r\n     * ```\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return SAMLAuthProvider.samlCredentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return SAMLAuthProvider.samlCredentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    /**\r\n     * Creates an {@link AuthCredential} from a JSON string or a plain object.\r\n     * @param json - A plain object or a JSON string\r\n     */\r\n    static credentialFromJSON(json) {\r\n        const credential = SAMLAuthCredential.fromJSON(json);\r\n        _assert(credential, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        return credential;\r\n    }\r\n    static samlCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { pendingToken, providerId } = tokenResponse;\r\n        if (!pendingToken || !providerId) {\r\n            return null;\r\n        }\r\n        try {\r\n            return SAMLAuthCredential._create(providerId, pendingToken);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new TwitterAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Twitter Access Token and Secret.\r\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n *   const secret = credential.secret;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new TwitterAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Twitter Access Token and Secret.\r\n * const credential = TwitterAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * const secret = credential.secret;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass TwitterAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"twitter.com\" /* ProviderId.TWITTER */);\r\n    }\r\n    /**\r\n     * Creates a credential for Twitter.\r\n     *\r\n     * @param token - Twitter access token.\r\n     * @param secret - Twitter secret.\r\n     */\r\n    static credential(token, secret) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: TwitterAuthProvider.PROVIDER_ID,\r\n            signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\r\n            oauthToken: token,\r\n            oauthTokenSecret: secret\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return TwitterAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return TwitterAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthAccessToken, oauthTokenSecret } = tokenResponse;\r\n        if (!oauthAccessToken || !oauthTokenSecret) {\r\n            return null;\r\n        }\r\n        try {\r\n            return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.TWITTER. */\r\nTwitterAuthProvider.TWITTER_SIGN_IN_METHOD = \"twitter.com\" /* SignInMethod.TWITTER */;\r\n/** Always set to {@link ProviderId}.TWITTER. */\r\nTwitterAuthProvider.PROVIDER_ID = \"twitter.com\" /* ProviderId.TWITTER */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signUp(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signUp\" /* Endpoint.SIGN_UP */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UserCredentialImpl {\r\n    constructor(params) {\r\n        this.user = params.user;\r\n        this.providerId = params.providerId;\r\n        this._tokenResponse = params._tokenResponse;\r\n        this.operationType = params.operationType;\r\n    }\r\n    static async _fromIdTokenResponse(auth, operationType, idTokenResponse, isAnonymous = false) {\r\n        const user = await UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous);\r\n        const providerId = providerIdForResponse(idTokenResponse);\r\n        const userCred = new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: idTokenResponse,\r\n            operationType\r\n        });\r\n        return userCred;\r\n    }\r\n    static async _forOperation(user, operationType, response) {\r\n        await user._updateTokensIfNecessary(response, /* reload */ true);\r\n        const providerId = providerIdForResponse(response);\r\n        return new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: response,\r\n            operationType\r\n        });\r\n    }\r\n}\r\nfunction providerIdForResponse(response) {\r\n    if (response.providerId) {\r\n        return response.providerId;\r\n    }\r\n    if ('phoneNumber' in response) {\r\n        return \"phone\" /* ProviderId.PHONE */;\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Asynchronously signs in as an anonymous user.\r\n *\r\n * @remarks\r\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\r\n * new anonymous user identity will be created and returned.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @public\r\n */\r\nasync function signInAnonymously(auth) {\r\n    var _a;\r\n    const authInternal = _castAuth(auth);\r\n    await authInternal._initializationPromise;\r\n    if ((_a = authInternal.currentUser) === null || _a === void 0 ? void 0 : _a.isAnonymous) {\r\n        // If an anonymous user is already signed in, no need to sign them in again.\r\n        return new UserCredentialImpl({\r\n            user: authInternal.currentUser,\r\n            providerId: null,\r\n            operationType: \"signIn\" /* OperationType.SIGN_IN */\r\n        });\r\n    }\r\n    const response = await signUp(authInternal, {\r\n        returnSecureToken: true\r\n    });\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response, true);\r\n    await authInternal._updateCurrentUser(userCredential.user);\r\n    return userCredential;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorError extends FirebaseError {\r\n    constructor(auth, error, operationType, user) {\r\n        var _a;\r\n        super(error.code, error.message);\r\n        this.operationType = operationType;\r\n        this.user = user;\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, MultiFactorError.prototype);\r\n        this.customData = {\r\n            appName: auth.name,\r\n            tenantId: (_a = auth.tenantId) !== null && _a !== void 0 ? _a : undefined,\r\n            _serverResponse: error.customData._serverResponse,\r\n            operationType\r\n        };\r\n    }\r\n    static _fromErrorAndOperation(auth, error, operationType, user) {\r\n        return new MultiFactorError(auth, error, operationType, user);\r\n    }\r\n}\r\nfunction _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user) {\r\n    const idTokenProvider = operationType === \"reauthenticate\" /* OperationType.REAUTHENTICATE */\r\n        ? credential._getReauthenticationResolver(auth)\r\n        : credential._getIdTokenResponse(auth);\r\n    return idTokenProvider.catch(error => {\r\n        if (error.code === `auth/${\"multi-factor-auth-required\" /* AuthErrorCode.MFA_REQUIRED */}`) {\r\n            throw MultiFactorError._fromErrorAndOperation(auth, error, operationType, user);\r\n        }\r\n        throw error;\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Takes a set of UserInfo provider data and converts it to a set of names\r\n */\r\nfunction providerDataAsNames(providerData) {\r\n    return new Set(providerData\r\n        .map(({ providerId }) => providerId)\r\n        .filter(pid => !!pid));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Unlinks a provider from a user account.\r\n *\r\n * @param user - The user.\r\n * @param providerId - The provider to unlink.\r\n *\r\n * @public\r\n */\r\nasync function unlink(user, providerId) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(true, userInternal, providerId);\r\n    const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\r\n        idToken: await userInternal.getIdToken(),\r\n        deleteProvider: [providerId]\r\n    });\r\n    const providersLeft = providerDataAsNames(providerUserInfo || []);\r\n    userInternal.providerData = userInternal.providerData.filter(pd => providersLeft.has(pd.providerId));\r\n    if (!providersLeft.has(\"phone\" /* ProviderId.PHONE */)) {\r\n        userInternal.phoneNumber = null;\r\n    }\r\n    await userInternal.auth._persistUserIfCurrent(userInternal);\r\n    return userInternal;\r\n}\r\nasync function _link$1(user, credential, bypassAuthState = false) {\r\n    const response = await _logoutIfInvalidated(user, credential._linkToIdToken(user.auth, await user.getIdToken()), bypassAuthState);\r\n    return UserCredentialImpl._forOperation(user, \"link\" /* OperationType.LINK */, response);\r\n}\r\nasync function _assertLinkedStatus(expected, user, provider) {\r\n    await _reloadWithoutSaving(user);\r\n    const providerIds = providerDataAsNames(user.providerData);\r\n    const code = expected === false\r\n        ? \"provider-already-linked\" /* AuthErrorCode.PROVIDER_ALREADY_LINKED */\r\n        : \"no-such-provider\" /* AuthErrorCode.NO_SUCH_PROVIDER */;\r\n    _assert(providerIds.has(provider) === expected, user.auth, code);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _reauthenticate(user, credential, bypassAuthState = false) {\r\n    const { auth } = user;\r\n    const operationType = \"reauthenticate\" /* OperationType.REAUTHENTICATE */;\r\n    try {\r\n        const response = await _logoutIfInvalidated(user, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user), bypassAuthState);\r\n        _assert(response.idToken, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        const parsed = _parseToken(response.idToken);\r\n        _assert(parsed, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        const { sub: localId } = parsed;\r\n        _assert(user.uid === localId, auth, \"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */);\r\n        return UserCredentialImpl._forOperation(user, operationType, response);\r\n    }\r\n    catch (e) {\r\n        // Convert user deleted error into user mismatch\r\n        if ((e === null || e === void 0 ? void 0 : e.code) === `auth/${\"user-not-found\" /* AuthErrorCode.USER_DELETED */}`) {\r\n            _fail(auth, \"user-mismatch\" /* AuthErrorCode.USER_MISMATCH */);\r\n        }\r\n        throw e;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _signInWithCredential(auth, credential, bypassAuthState = false) {\r\n    const operationType = \"signIn\" /* OperationType.SIGN_IN */;\r\n    const response = await _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential);\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, operationType, response);\r\n    if (!bypassAuthState) {\r\n        await auth._updateCurrentUser(userCredential.user);\r\n    }\r\n    return userCredential;\r\n}\r\n/**\r\n * Asynchronously signs in with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function signInWithCredential(auth, credential) {\r\n    return _signInWithCredential(_castAuth(auth), credential);\r\n}\r\n/**\r\n * Links the user account with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function linkWithCredential(user, credential) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(false, userInternal, credential.providerId);\r\n    return _link$1(userInternal, credential);\r\n}\r\n/**\r\n * Re-authenticates a user using a fresh credential.\r\n *\r\n * @remarks\r\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\r\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\r\n * or a `TOKEN_EXPIRED` error.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithCredential(user, credential) {\r\n    return _reauthenticate(getModularInstance(user), credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithCustomToken$1(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:signInWithCustomToken\" /* Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Asynchronously signs in using a custom token.\r\n *\r\n * @remarks\r\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\r\n * be generated by an auth backend using the\r\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\r\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\r\n *\r\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param customToken - The custom token to sign in with.\r\n *\r\n * @public\r\n */\r\nasync function signInWithCustomToken(auth, customToken) {\r\n    const authInternal = _castAuth(auth);\r\n    const response = await signInWithCustomToken$1(authInternal, {\r\n        token: customToken,\r\n        returnSecureToken: true\r\n    });\r\n    const cred = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response);\r\n    await authInternal._updateCurrentUser(cred.user);\r\n    return cred;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorInfoImpl {\r\n    constructor(factorId, response) {\r\n        this.factorId = factorId;\r\n        this.uid = response.mfaEnrollmentId;\r\n        this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\r\n        this.displayName = response.displayName;\r\n    }\r\n    static _fromServerResponse(auth, enrollment) {\r\n        if ('phoneInfo' in enrollment) {\r\n            return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\r\n        }\r\n        else if ('totpInfo' in enrollment) {\r\n            return TotpMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\r\n        }\r\n        return _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    }\r\n}\r\nclass PhoneMultiFactorInfoImpl extends MultiFactorInfoImpl {\r\n    constructor(response) {\r\n        super(\"phone\" /* FactorId.PHONE */, response);\r\n        this.phoneNumber = response.phoneInfo;\r\n    }\r\n    static _fromServerResponse(_auth, enrollment) {\r\n        return new PhoneMultiFactorInfoImpl(enrollment);\r\n    }\r\n}\r\nclass TotpMultiFactorInfoImpl extends MultiFactorInfoImpl {\r\n    constructor(response) {\r\n        super(\"totp\" /* FactorId.TOTP */, response);\r\n    }\r\n    static _fromServerResponse(_auth, enrollment) {\r\n        return new TotpMultiFactorInfoImpl(enrollment);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _setActionCodeSettingsOnRequest(auth, request, actionCodeSettings) {\r\n    var _a;\r\n    _assert(((_a = actionCodeSettings.url) === null || _a === void 0 ? void 0 : _a.length) > 0, auth, \"invalid-continue-uri\" /* AuthErrorCode.INVALID_CONTINUE_URI */);\r\n    _assert(typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\r\n        actionCodeSettings.dynamicLinkDomain.length > 0, auth, \"invalid-dynamic-link-domain\" /* AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN */);\r\n    request.continueUrl = actionCodeSettings.url;\r\n    request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\r\n    request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\r\n    if (actionCodeSettings.iOS) {\r\n        _assert(actionCodeSettings.iOS.bundleId.length > 0, auth, \"missing-ios-bundle-id\" /* AuthErrorCode.MISSING_IOS_BUNDLE_ID */);\r\n        request.iOSBundleId = actionCodeSettings.iOS.bundleId;\r\n    }\r\n    if (actionCodeSettings.android) {\r\n        _assert(actionCodeSettings.android.packageName.length > 0, auth, \"missing-android-pkg-name\" /* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */);\r\n        request.androidInstallApp = actionCodeSettings.android.installApp;\r\n        request.androidMinimumVersionCode =\r\n            actionCodeSettings.android.minimumVersion;\r\n        request.androidPackageName = actionCodeSettings.android.packageName;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates the password policy cached in the {@link Auth} instance if a policy is already\r\n * cached for the project or tenant.\r\n *\r\n * @remarks\r\n * We only fetch the password policy if the password did not meet policy requirements and\r\n * there is an existing policy cached. A developer must call validatePassword at least\r\n * once for the cache to be automatically updated.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @private\r\n */\r\nasync function recachePasswordPolicy(auth) {\r\n    const authInternal = _castAuth(auth);\r\n    if (authInternal._getPasswordPolicyInternal()) {\r\n        await authInternal._updatePasswordPolicy();\r\n    }\r\n}\r\n/**\r\n * Sends a password reset email to the given email address.\r\n *\r\n * @remarks\r\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\r\n * the email sent to the user, along with the new password specified by the user.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain code from user.\r\n * await confirmPasswordReset('user@example.com', code);\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendPasswordResetEmail(auth, email, actionCodeSettings) {\r\n    const authInternal = _castAuth(auth);\r\n    const request = {\r\n        requestType: \"PASSWORD_RESET\" /* ActionCodeOperation.PASSWORD_RESET */,\r\n        email,\r\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\r\n    }\r\n    await handleRecaptchaFlow(authInternal, request, \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */, sendPasswordResetEmail$1);\r\n}\r\n/**\r\n * Completes the password reset process, given a confirmation code and new password.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param oobCode - A confirmation code sent to the user.\r\n * @param newPassword - The new password.\r\n *\r\n * @public\r\n */\r\nasync function confirmPasswordReset(auth, oobCode, newPassword) {\r\n    await resetPassword(getModularInstance(auth), {\r\n        oobCode,\r\n        newPassword\r\n    })\r\n        .catch(async (error) => {\r\n        if (error.code ===\r\n            `auth/${\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */}`) {\r\n            void recachePasswordPolicy(auth);\r\n        }\r\n        throw error;\r\n    });\r\n    // Do not return the email.\r\n}\r\n/**\r\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param oobCode - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function applyActionCode(auth, oobCode) {\r\n    await applyActionCode$1(getModularInstance(auth), { oobCode });\r\n}\r\n/**\r\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @returns metadata about the code.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param oobCode - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function checkActionCode(auth, oobCode) {\r\n    const authModular = getModularInstance(auth);\r\n    const response = await resetPassword(authModular, { oobCode });\r\n    // Email could be empty only if the request type is EMAIL_SIGNIN or\r\n    // VERIFY_AND_CHANGE_EMAIL.\r\n    // New email should not be empty if the request type is\r\n    // VERIFY_AND_CHANGE_EMAIL.\r\n    // Multi-factor info could not be empty if the request type is\r\n    // REVERT_SECOND_FACTOR_ADDITION.\r\n    const operation = response.requestType;\r\n    _assert(operation, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    switch (operation) {\r\n        case \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */:\r\n            break;\r\n        case \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */:\r\n            _assert(response.newEmail, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n            break;\r\n        case \"REVERT_SECOND_FACTOR_ADDITION\" /* ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION */:\r\n            _assert(response.mfaInfo, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        // fall through\r\n        default:\r\n            _assert(response.email, authModular, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    }\r\n    // The multi-factor info for revert second factor addition\r\n    let multiFactorInfo = null;\r\n    if (response.mfaInfo) {\r\n        multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(_castAuth(authModular), response.mfaInfo);\r\n    }\r\n    return {\r\n        data: {\r\n            email: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */\r\n                ? response.newEmail\r\n                : response.email) || null,\r\n            previousEmail: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */\r\n                ? response.email\r\n                : response.newEmail) || null,\r\n            multiFactorInfo\r\n        },\r\n        operation\r\n    };\r\n}\r\n/**\r\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @returns the user's email address if valid.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param code - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function verifyPasswordResetCode(auth, code) {\r\n    const { data } = await checkActionCode(getModularInstance(auth), code);\r\n    // Email should always be present since a code was sent to it\r\n    return data.email;\r\n}\r\n/**\r\n * Creates a new user account associated with the specified email address and password.\r\n *\r\n * @remarks\r\n * On successful creation of the user account, this user will also be signed in to your application.\r\n *\r\n * User account creation can fail if the account already exists or the password is invalid.\r\n *\r\n * Note: The email address acts as a unique identifier for the user and enables an email-based\r\n * password reset. This function will create a new user account and set the initial user password.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param password - The user's chosen password.\r\n *\r\n * @public\r\n */\r\nasync function createUserWithEmailAndPassword(auth, email, password) {\r\n    const authInternal = _castAuth(auth);\r\n    const request = {\r\n        returnSecureToken: true,\r\n        email,\r\n        password,\r\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\r\n    };\r\n    const signUpResponse = handleRecaptchaFlow(authInternal, request, \"signUpPassword\" /* RecaptchaActionName.SIGN_UP_PASSWORD */, signUp);\r\n    const response = await signUpResponse.catch(error => {\r\n        if (error.code === `auth/${\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */}`) {\r\n            void recachePasswordPolicy(auth);\r\n        }\r\n        throw error;\r\n    });\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* OperationType.SIGN_IN */, response);\r\n    await authInternal._updateCurrentUser(userCredential.user);\r\n    return userCredential;\r\n}\r\n/**\r\n * Asynchronously signs in using an email and password.\r\n *\r\n * @remarks\r\n * Fails with an error if the email address and password do not match.\r\n *\r\n * Note: The user's password is NOT the password used to access the user's email account. The\r\n * email address serves as a unique identifier for the user, and the password is used to access\r\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The users email address.\r\n * @param password - The users password.\r\n *\r\n * @public\r\n */\r\nfunction signInWithEmailAndPassword(auth, email, password) {\r\n    return signInWithCredential(getModularInstance(auth), EmailAuthProvider.credential(email, password)).catch(async (error) => {\r\n        if (error.code === `auth/${\"password-does-not-meet-requirements\" /* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */}`) {\r\n            void recachePasswordPolicy(auth);\r\n        }\r\n        throw error;\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sends a sign-in email link to the user with the specified email.\r\n *\r\n * @remarks\r\n * The sign-in operation has to always be completed in the app unlike other out of band email\r\n * actions (password reset and email verifications). This is because, at the end of the flow,\r\n * the user is expected to be signed in and their Auth state persisted within the app.\r\n *\r\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\r\n * address and the email link supplied in the email sent to the user.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain emailLink from the user.\r\n * if(isSignInWithEmailLink(auth, emailLink)) {\r\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\r\n * }\r\n * ```\r\n *\r\n * @param authInternal - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendSignInLinkToEmail(auth, email, actionCodeSettings) {\r\n    const authInternal = _castAuth(auth);\r\n    const request = {\r\n        requestType: \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */,\r\n        email,\r\n        clientType: \"CLIENT_TYPE_WEB\" /* RecaptchaClientType.WEB */\r\n    };\r\n    function setActionCodeSettings(request, actionCodeSettings) {\r\n        _assert(actionCodeSettings.handleCodeInApp, authInternal, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        if (actionCodeSettings) {\r\n            _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\r\n        }\r\n    }\r\n    setActionCodeSettings(request, actionCodeSettings);\r\n    await handleRecaptchaFlow(authInternal, request, \"getOobCode\" /* RecaptchaActionName.GET_OOB_CODE */, sendSignInLinkToEmail$1);\r\n}\r\n/**\r\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param emailLink - The link sent to the user's email address.\r\n *\r\n * @public\r\n */\r\nfunction isSignInWithEmailLink(auth, emailLink) {\r\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\r\n    return (actionCodeUrl === null || actionCodeUrl === void 0 ? void 0 : actionCodeUrl.operation) === \"EMAIL_SIGNIN\" /* ActionCodeOperation.EMAIL_SIGNIN */;\r\n}\r\n/**\r\n * Asynchronously signs in using an email and sign-in email link.\r\n *\r\n * @remarks\r\n * If no link is passed, the link is inferred from the current URL.\r\n *\r\n * Fails with an error if the email address is invalid or OTP in email link expires.\r\n *\r\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain emailLink from the user.\r\n * if(isSignInWithEmailLink(auth, emailLink)) {\r\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\r\n * }\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param emailLink - The link sent to the user's email address.\r\n *\r\n * @public\r\n */\r\nasync function signInWithEmailLink(auth, email, emailLink) {\r\n    const authModular = getModularInstance(auth);\r\n    const credential = EmailAuthProvider.credentialWithLink(email, emailLink || _getCurrentUrl());\r\n    // Check if the tenant ID in the email link matches the tenant ID on Auth\r\n    // instance.\r\n    _assert(credential._tenantId === (authModular.tenantId || null), authModular, \"tenant-id-mismatch\" /* AuthErrorCode.TENANT_ID_MISMATCH */);\r\n    return signInWithCredential(authModular, credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createAuthUri(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:createAuthUri\" /* Endpoint.CREATE_AUTH_URI */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Gets the list of possible sign in methods for the given email address.\r\n *\r\n * @remarks\r\n * This is useful to differentiate methods of sign-in for the same provider, eg.\r\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\r\n * {@link SignInMethod}.EMAIL_PASSWORD and\r\n * {@link SignInMethod}.EMAIL_LINK.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n *\r\n * @public\r\n */\r\nasync function fetchSignInMethodsForEmail(auth, email) {\r\n    // createAuthUri returns an error if continue URI is not http or https.\r\n    // For environments like Cordova, Chrome extensions, native frameworks, file\r\n    // systems, etc, use http://localhost as continue URL.\r\n    const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\r\n    const request = {\r\n        identifier: email,\r\n        continueUri\r\n    };\r\n    const { signinMethods } = await createAuthUri(getModularInstance(auth), request);\r\n    return signinMethods || [];\r\n}\r\n/**\r\n * Sends a verification email to a user.\r\n *\r\n * @remarks\r\n * The verification process is completed by calling {@link applyActionCode}.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendEmailVerification(user, actionCodeSettings);\r\n * // Obtain code from the user.\r\n * await applyActionCode(auth, code);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendEmailVerification(user, actionCodeSettings) {\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        requestType: \"VERIFY_EMAIL\" /* ActionCodeOperation.VERIFY_EMAIL */,\r\n        idToken\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\r\n    }\r\n    const { email } = await sendEmailVerification$1(userInternal.auth, request);\r\n    if (email !== user.email) {\r\n        await user.reload();\r\n    }\r\n}\r\n/**\r\n * Sends a verification email to a new email address.\r\n *\r\n * @remarks\r\n * The user's email will be updated to the new one after being verified.\r\n *\r\n * If you have a custom email action handler, you can complete the verification process by calling\r\n * {@link applyActionCode}.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\r\n * // Obtain code from the user.\r\n * await applyActionCode(auth, code);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param newEmail - The new email address to be verified before update.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function verifyBeforeUpdateEmail(user, newEmail, actionCodeSettings) {\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        requestType: \"VERIFY_AND_CHANGE_EMAIL\" /* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */,\r\n        idToken,\r\n        newEmail\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\r\n    }\r\n    const { email } = await verifyAndChangeEmail(userInternal.auth, request);\r\n    if (email !== user.email) {\r\n        // If the local copy of the email on user is outdated, reload the\r\n        // user.\r\n        await user.reload();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function updateProfile$1(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v1/accounts:update\" /* Endpoint.SET_ACCOUNT_INFO */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates a user's profile data.\r\n *\r\n * @param user - The user.\r\n * @param profile - The profile's `displayName` and `photoURL` to update.\r\n *\r\n * @public\r\n */\r\nasync function updateProfile(user, { displayName, photoURL: photoUrl }) {\r\n    if (displayName === undefined && photoUrl === undefined) {\r\n        return;\r\n    }\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await userInternal.getIdToken();\r\n    const profileRequest = {\r\n        idToken,\r\n        displayName,\r\n        photoUrl,\r\n        returnSecureToken: true\r\n    };\r\n    const response = await _logoutIfInvalidated(userInternal, updateProfile$1(userInternal.auth, profileRequest));\r\n    userInternal.displayName = response.displayName || null;\r\n    userInternal.photoURL = response.photoUrl || null;\r\n    // Update the password provider as well\r\n    const passwordProvider = userInternal.providerData.find(({ providerId }) => providerId === \"password\" /* ProviderId.PASSWORD */);\r\n    if (passwordProvider) {\r\n        passwordProvider.displayName = userInternal.displayName;\r\n        passwordProvider.photoURL = userInternal.photoURL;\r\n    }\r\n    await userInternal._updateTokensIfNecessary(response);\r\n}\r\n/**\r\n * Updates the user's email address.\r\n *\r\n * @remarks\r\n * An email will be sent to the original email address (if it was set) that allows to revoke the\r\n * email address change, in order to protect them from account hijacking.\r\n *\r\n * Important: this is a security sensitive operation that requires the user to have recently signed\r\n * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n * @param newEmail - The new email address.\r\n *\r\n * @public\r\n */\r\nfunction updateEmail(user, newEmail) {\r\n    return updateEmailOrPassword(getModularInstance(user), newEmail, null);\r\n}\r\n/**\r\n * Updates the user's password.\r\n *\r\n * @remarks\r\n * Important: this is a security sensitive operation that requires the user to have recently signed\r\n * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n * @param newPassword - The new password.\r\n *\r\n * @public\r\n */\r\nfunction updatePassword(user, newPassword) {\r\n    return updateEmailOrPassword(getModularInstance(user), null, newPassword);\r\n}\r\nasync function updateEmailOrPassword(user, email, password) {\r\n    const { auth } = user;\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        idToken,\r\n        returnSecureToken: true\r\n    };\r\n    if (email) {\r\n        request.email = email;\r\n    }\r\n    if (password) {\r\n        request.password = password;\r\n    }\r\n    const response = await _logoutIfInvalidated(user, updateEmailPassword(auth, request));\r\n    await user._updateTokensIfNecessary(response, /* reload */ true);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Parse the `AdditionalUserInfo` from the ID token response.\r\n *\r\n */\r\nfunction _fromIdTokenResponse(idTokenResponse) {\r\n    var _a, _b;\r\n    if (!idTokenResponse) {\r\n        return null;\r\n    }\r\n    const { providerId } = idTokenResponse;\r\n    const profile = idTokenResponse.rawUserInfo\r\n        ? JSON.parse(idTokenResponse.rawUserInfo)\r\n        : {};\r\n    const isNewUser = idTokenResponse.isNewUser ||\r\n        idTokenResponse.kind === \"identitytoolkit#SignupNewUserResponse\" /* IdTokenResponseKind.SignupNewUser */;\r\n    if (!providerId && (idTokenResponse === null || idTokenResponse === void 0 ? void 0 : idTokenResponse.idToken)) {\r\n        const signInProvider = (_b = (_a = _parseToken(idTokenResponse.idToken)) === null || _a === void 0 ? void 0 : _a.firebase) === null || _b === void 0 ? void 0 : _b['sign_in_provider'];\r\n        if (signInProvider) {\r\n            const filteredProviderId = signInProvider !== \"anonymous\" /* ProviderId.ANONYMOUS */ &&\r\n                signInProvider !== \"custom\" /* ProviderId.CUSTOM */\r\n                ? signInProvider\r\n                : null;\r\n            // Uses generic class in accordance with the legacy SDK.\r\n            return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\r\n        }\r\n    }\r\n    if (!providerId) {\r\n        return null;\r\n    }\r\n    switch (providerId) {\r\n        case \"facebook.com\" /* ProviderId.FACEBOOK */:\r\n            return new FacebookAdditionalUserInfo(isNewUser, profile);\r\n        case \"github.com\" /* ProviderId.GITHUB */:\r\n            return new GithubAdditionalUserInfo(isNewUser, profile);\r\n        case \"google.com\" /* ProviderId.GOOGLE */:\r\n            return new GoogleAdditionalUserInfo(isNewUser, profile);\r\n        case \"twitter.com\" /* ProviderId.TWITTER */:\r\n            return new TwitterAdditionalUserInfo(isNewUser, profile, idTokenResponse.screenName || null);\r\n        case \"custom\" /* ProviderId.CUSTOM */:\r\n        case \"anonymous\" /* ProviderId.ANONYMOUS */:\r\n            return new GenericAdditionalUserInfo(isNewUser, null);\r\n        default:\r\n            return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\r\n    }\r\n}\r\nclass GenericAdditionalUserInfo {\r\n    constructor(isNewUser, providerId, profile = {}) {\r\n        this.isNewUser = isNewUser;\r\n        this.providerId = providerId;\r\n        this.profile = profile;\r\n    }\r\n}\r\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, providerId, profile, username) {\r\n        super(isNewUser, providerId, profile);\r\n        this.username = username;\r\n    }\r\n}\r\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"facebook.com\" /* ProviderId.FACEBOOK */, profile);\r\n    }\r\n}\r\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"github.com\" /* ProviderId.GITHUB */, profile, typeof (profile === null || profile === void 0 ? void 0 : profile.login) === 'string' ? profile === null || profile === void 0 ? void 0 : profile.login : null);\r\n    }\r\n}\r\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"google.com\" /* ProviderId.GOOGLE */, profile);\r\n    }\r\n}\r\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\r\n    constructor(isNewUser, profile, screenName) {\r\n        super(isNewUser, \"twitter.com\" /* ProviderId.TWITTER */, profile, screenName);\r\n    }\r\n}\r\n/**\r\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\r\n *\r\n * @param userCredential - The user credential.\r\n *\r\n * @public\r\n */\r\nfunction getAdditionalUserInfo(userCredential) {\r\n    const { user, _tokenResponse } = userCredential;\r\n    if (user.isAnonymous && !_tokenResponse) {\r\n        // Handle the special case where signInAnonymously() gets called twice.\r\n        // No network call is made so there's nothing to actually fill this in\r\n        return {\r\n            providerId: null,\r\n            isNewUser: false,\r\n            profile: null\r\n        };\r\n    }\r\n    return _fromIdTokenResponse(_tokenResponse);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Non-optional auth methods.\r\n/**\r\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\r\n * `Auth` session and applies this type of persistence for future sign-in requests, including\r\n * sign-in with redirect requests.\r\n *\r\n * @remarks\r\n * This makes it easy for a user signing in to specify whether their session should be\r\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\r\n * that are shared by other users or have sensitive data.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * setPersistence(auth, browserSessionPersistence);\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param persistence - The {@link Persistence} to use.\r\n * @returns A `Promise` that resolves once the persistence change has completed\r\n *\r\n * @public\r\n */\r\nfunction setPersistence(auth, persistence) {\r\n    return getModularInstance(auth).setPersistence(persistence);\r\n}\r\n/**\r\n * Loads the reCAPTCHA configuration into the `Auth` instance.\r\n *\r\n * @remarks\r\n * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\r\n * verification flow should be triggered for each auth provider, into the\r\n * current Auth session.\r\n *\r\n * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\r\n * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\r\n * verification, the SDK will transparently load the reCAPTCHA config and restart the\r\n * auth flows.\r\n *\r\n * Thus, by calling this optional method, you will reduce the latency of future auth flows.\r\n * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * initializeRecaptchaConfig(auth);\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @public\r\n */\r\nfunction initializeRecaptchaConfig(auth) {\r\n    return _initializeRecaptchaConfig(auth);\r\n}\r\n/**\r\n * Validates the password against the password policy configured for the project or tenant.\r\n *\r\n * @remarks\r\n * If no tenant ID is set on the `Auth` instance, then this method will use the password\r\n * policy configured for the project. Otherwise, this method will use the policy configured\r\n * for the tenant. If a password policy has not been configured, then the default policy\r\n * configured for all projects will be used.\r\n *\r\n * If an auth flow fails because a submitted password does not meet the password policy\r\n * requirements and this method has previously been called, then this method will use the\r\n * most recent policy available when called again.\r\n *\r\n * @example\r\n * ```javascript\r\n * validatePassword(auth, 'some-password');\r\n * ```\r\n *\r\n * @param auth The {@link Auth} instance.\r\n * @param password The password to validate.\r\n *\r\n * @public\r\n */\r\nasync function validatePassword(auth, password) {\r\n    const authInternal = _castAuth(auth);\r\n    return authInternal.validatePassword(password);\r\n}\r\n/**\r\n * Adds an observer for changes to the signed-in user's ID token.\r\n *\r\n * @remarks\r\n * This includes sign-in, sign-out, and token refresh events.\r\n * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param nextOrObserver - callback triggered on change.\r\n * @param error - Deprecated. This callback is never triggered. Errors\r\n * on signing in/out can be caught in promises returned from\r\n * sign-in/sign-out functions.\r\n * @param completed - Deprecated. This callback is never triggered.\r\n *\r\n * @public\r\n */\r\nfunction onIdTokenChanged(auth, nextOrObserver, error, completed) {\r\n    return getModularInstance(auth).onIdTokenChanged(nextOrObserver, error, completed);\r\n}\r\n/**\r\n * Adds a blocking callback that runs before an auth state change\r\n * sets a new user.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param callback - callback triggered before new user value is set.\r\n *   If this throws, it blocks the user from being set.\r\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\r\n *   callback throws, allowing you to undo any side effects.\r\n */\r\nfunction beforeAuthStateChanged(auth, callback, onAbort) {\r\n    return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\r\n}\r\n/**\r\n * Adds an observer for changes to the user's sign-in state.\r\n *\r\n * @remarks\r\n * To keep the old behavior, see {@link onIdTokenChanged}.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param nextOrObserver - callback triggered on change.\r\n * @param error - Deprecated. This callback is never triggered. Errors\r\n * on signing in/out can be caught in promises returned from\r\n * sign-in/sign-out functions.\r\n * @param completed - Deprecated. This callback is never triggered.\r\n *\r\n * @public\r\n */\r\nfunction onAuthStateChanged(auth, nextOrObserver, error, completed) {\r\n    return getModularInstance(auth).onAuthStateChanged(nextOrObserver, error, completed);\r\n}\r\n/**\r\n * Sets the current language to the default device/browser preference.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @public\r\n */\r\nfunction useDeviceLanguage(auth) {\r\n    getModularInstance(auth).useDeviceLanguage();\r\n}\r\n/**\r\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\r\n * {@link Auth} instance.\r\n *\r\n * @remarks\r\n * A new instance copy of the user provided will be made and set as currentUser.\r\n *\r\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\r\n * like other sign in methods.\r\n *\r\n * The operation fails with an error if the user to be updated belongs to a different Firebase\r\n * project.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param user - The new {@link User}.\r\n *\r\n * @public\r\n */\r\nfunction updateCurrentUser(auth, user) {\r\n    return getModularInstance(auth).updateCurrentUser(user);\r\n}\r\n/**\r\n * Signs out the current user.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @public\r\n */\r\nfunction signOut(auth) {\r\n    return getModularInstance(auth).signOut();\r\n}\r\n/**\r\n * Deletes and signs out the user.\r\n *\r\n * @remarks\r\n * Important: this is a security-sensitive operation that requires the user to have recently\r\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nasync function deleteUser(user) {\r\n    return getModularInstance(user).delete();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorSessionImpl {\r\n    constructor(type, credential, user) {\r\n        this.type = type;\r\n        this.credential = credential;\r\n        this.user = user;\r\n    }\r\n    static _fromIdtoken(idToken, user) {\r\n        return new MultiFactorSessionImpl(\"enroll\" /* MultiFactorSessionType.ENROLL */, idToken, user);\r\n    }\r\n    static _fromMfaPendingCredential(mfaPendingCredential) {\r\n        return new MultiFactorSessionImpl(\"signin\" /* MultiFactorSessionType.SIGN_IN */, mfaPendingCredential);\r\n    }\r\n    toJSON() {\r\n        const key = this.type === \"enroll\" /* MultiFactorSessionType.ENROLL */\r\n            ? 'idToken'\r\n            : 'pendingCredential';\r\n        return {\r\n            multiFactorSession: {\r\n                [key]: this.credential\r\n            }\r\n        };\r\n    }\r\n    static fromJSON(obj) {\r\n        var _a, _b;\r\n        if (obj === null || obj === void 0 ? void 0 : obj.multiFactorSession) {\r\n            if ((_a = obj.multiFactorSession) === null || _a === void 0 ? void 0 : _a.pendingCredential) {\r\n                return MultiFactorSessionImpl._fromMfaPendingCredential(obj.multiFactorSession.pendingCredential);\r\n            }\r\n            else if ((_b = obj.multiFactorSession) === null || _b === void 0 ? void 0 : _b.idToken) {\r\n                return MultiFactorSessionImpl._fromIdtoken(obj.multiFactorSession.idToken);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorResolverImpl {\r\n    constructor(session, hints, signInResolver) {\r\n        this.session = session;\r\n        this.hints = hints;\r\n        this.signInResolver = signInResolver;\r\n    }\r\n    /** @internal */\r\n    static _fromError(authExtern, error) {\r\n        const auth = _castAuth(authExtern);\r\n        const serverResponse = error.customData._serverResponse;\r\n        const hints = (serverResponse.mfaInfo || []).map(enrollment => MultiFactorInfoImpl._fromServerResponse(auth, enrollment));\r\n        _assert(serverResponse.mfaPendingCredential, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        const session = MultiFactorSessionImpl._fromMfaPendingCredential(serverResponse.mfaPendingCredential);\r\n        return new MultiFactorResolverImpl(session, hints, async (assertion) => {\r\n            const mfaResponse = await assertion._process(auth, session);\r\n            // Clear out the unneeded fields from the old login response\r\n            delete serverResponse.mfaInfo;\r\n            delete serverResponse.mfaPendingCredential;\r\n            // Use in the new token & refresh token in the old response\r\n            const idTokenResponse = Object.assign(Object.assign({}, serverResponse), { idToken: mfaResponse.idToken, refreshToken: mfaResponse.refreshToken });\r\n            // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\r\n            switch (error.operationType) {\r\n                case \"signIn\" /* OperationType.SIGN_IN */:\r\n                    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, error.operationType, idTokenResponse);\r\n                    await auth._updateCurrentUser(userCredential.user);\r\n                    return userCredential;\r\n                case \"reauthenticate\" /* OperationType.REAUTHENTICATE */:\r\n                    _assert(error.user, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n                    return UserCredentialImpl._forOperation(error.user, error.operationType, idTokenResponse);\r\n                default:\r\n                    _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n            }\r\n        });\r\n    }\r\n    async resolveSignIn(assertionExtern) {\r\n        const assertion = assertionExtern;\r\n        return this.signInResolver(assertion);\r\n    }\r\n}\r\n/**\r\n * Provides a {@link MultiFactorResolver} suitable for completion of a\r\n * multi-factor flow.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\r\n * reauthentication operation.\r\n *\r\n * @public\r\n */\r\nfunction getMultiFactorResolver(auth, error) {\r\n    var _a;\r\n    const authModular = getModularInstance(auth);\r\n    const errorInternal = error;\r\n    _assert(error.customData.operationType, authModular, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n    _assert((_a = errorInternal.customData._serverResponse) === null || _a === void 0 ? void 0 : _a.mfaPendingCredential, authModular, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n    return MultiFactorResolverImpl._fromError(authModular, errorInternal);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction startEnrollPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:start\" /* Endpoint.START_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction finalizeEnrollPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:finalize\" /* Endpoint.FINALIZE_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction startEnrollTotpMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:start\" /* Endpoint.START_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction finalizeEnrollTotpMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:finalize\" /* Endpoint.FINALIZE_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction withdrawMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaEnrollment:withdraw\" /* Endpoint.WITHDRAW_MFA */, _addTidIfNecessary(auth, request));\r\n}\n\nclass MultiFactorUserImpl {\r\n    constructor(user) {\r\n        this.user = user;\r\n        this.enrolledFactors = [];\r\n        user._onReload(userInfo => {\r\n            if (userInfo.mfaInfo) {\r\n                this.enrolledFactors = userInfo.mfaInfo.map(enrollment => MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment));\r\n            }\r\n        });\r\n    }\r\n    static _fromUser(user) {\r\n        return new MultiFactorUserImpl(user);\r\n    }\r\n    async getSession() {\r\n        return MultiFactorSessionImpl._fromIdtoken(await this.user.getIdToken(), this.user);\r\n    }\r\n    async enroll(assertionExtern, displayName) {\r\n        const assertion = assertionExtern;\r\n        const session = (await this.getSession());\r\n        const finalizeMfaResponse = await _logoutIfInvalidated(this.user, assertion._process(this.user.auth, session, displayName));\r\n        // New tokens will be issued after enrollment of the new second factors.\r\n        // They need to be updated on the user.\r\n        await this.user._updateTokensIfNecessary(finalizeMfaResponse);\r\n        // The user needs to be reloaded to get the new multi-factor information\r\n        // from server. USER_RELOADED event will be triggered and `enrolledFactors`\r\n        // will be updated.\r\n        return this.user.reload();\r\n    }\r\n    async unenroll(infoOrUid) {\r\n        const mfaEnrollmentId = typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\r\n        const idToken = await this.user.getIdToken();\r\n        try {\r\n            const idTokenResponse = await _logoutIfInvalidated(this.user, withdrawMfa(this.user.auth, {\r\n                idToken,\r\n                mfaEnrollmentId\r\n            }));\r\n            // Remove the second factor from the user's list.\r\n            this.enrolledFactors = this.enrolledFactors.filter(({ uid }) => uid !== mfaEnrollmentId);\r\n            // Depending on whether the backend decided to revoke the user's session,\r\n            // the tokenResponse may be empty. If the tokens were not updated (and they\r\n            // are now invalid), reloading the user will discover this and invalidate\r\n            // the user's state accordingly.\r\n            await this.user._updateTokensIfNecessary(idTokenResponse);\r\n            await this.user.reload();\r\n        }\r\n        catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n}\r\nconst multiFactorUserCache = new WeakMap();\r\n/**\r\n * The {@link MultiFactorUser} corresponding to the user.\r\n *\r\n * @remarks\r\n * This is used to access all multi-factor properties and operations related to the user.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nfunction multiFactor(user) {\r\n    const userModular = getModularInstance(user);\r\n    if (!multiFactorUserCache.has(userModular)) {\r\n        multiFactorUserCache.set(userModular, MultiFactorUserImpl._fromUser(userModular));\r\n    }\r\n    return multiFactorUserCache.get(userModular);\r\n}\n\nconst STORAGE_AVAILABLE_KEY = '__sak';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// There are two different browser persistence types: local and session.\r\n// Both have the same implementation but use a different underlying storage\r\n// object.\r\nclass BrowserPersistenceClass {\r\n    constructor(storageRetriever, type) {\r\n        this.storageRetriever = storageRetriever;\r\n        this.type = type;\r\n    }\r\n    _isAvailable() {\r\n        try {\r\n            if (!this.storage) {\r\n                return Promise.resolve(false);\r\n            }\r\n            this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\r\n            this.storage.removeItem(STORAGE_AVAILABLE_KEY);\r\n            return Promise.resolve(true);\r\n        }\r\n        catch (_a) {\r\n            return Promise.resolve(false);\r\n        }\r\n    }\r\n    _set(key, value) {\r\n        this.storage.setItem(key, JSON.stringify(value));\r\n        return Promise.resolve();\r\n    }\r\n    _get(key) {\r\n        const json = this.storage.getItem(key);\r\n        return Promise.resolve(json ? JSON.parse(json) : null);\r\n    }\r\n    _remove(key) {\r\n        this.storage.removeItem(key);\r\n        return Promise.resolve();\r\n    }\r\n    get storage() {\r\n        return this.storageRetriever();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _iframeCannotSyncWebStorage() {\r\n    const ua = getUA();\r\n    return _isSafari(ua) || _isIOS(ua);\r\n}\r\n// The polling period in case events are not supported\r\nconst _POLLING_INTERVAL_MS$1 = 1000;\r\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\r\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\r\nclass BrowserLocalPersistence extends BrowserPersistenceClass {\r\n    constructor() {\r\n        super(() => window.localStorage, \"LOCAL\" /* PersistenceType.LOCAL */);\r\n        this.boundEventHandler = (event, poll) => this.onStorageEvent(event, poll);\r\n        this.listeners = {};\r\n        this.localCache = {};\r\n        // setTimeout return value is platform specific\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.pollTimer = null;\r\n        // Safari or iOS browser and embedded in an iframe.\r\n        this.safariLocalStorageNotSynced = _iframeCannotSyncWebStorage() && _isIframe();\r\n        // Whether to use polling instead of depending on window events\r\n        this.fallbackToPolling = _isMobileBrowser();\r\n        this._shouldAllowMigration = true;\r\n    }\r\n    forAllChangedKeys(cb) {\r\n        // Check all keys with listeners on them.\r\n        for (const key of Object.keys(this.listeners)) {\r\n            // Get value from localStorage.\r\n            const newValue = this.storage.getItem(key);\r\n            const oldValue = this.localCache[key];\r\n            // If local map value does not match, trigger listener with storage event.\r\n            // Differentiate this simulated event from the real storage event.\r\n            if (newValue !== oldValue) {\r\n                cb(key, oldValue, newValue);\r\n            }\r\n        }\r\n    }\r\n    onStorageEvent(event, poll = false) {\r\n        // Key would be null in some situations, like when localStorage is cleared\r\n        if (!event.key) {\r\n            this.forAllChangedKeys((key, _oldValue, newValue) => {\r\n                this.notifyListeners(key, newValue);\r\n            });\r\n            return;\r\n        }\r\n        const key = event.key;\r\n        // Check the mechanism how this event was detected.\r\n        // The first event will dictate the mechanism to be used.\r\n        if (poll) {\r\n            // Environment detects storage changes via polling.\r\n            // Remove storage event listener to prevent possible event duplication.\r\n            this.detachListener();\r\n        }\r\n        else {\r\n            // Environment detects storage changes via storage event listener.\r\n            // Remove polling listener to prevent possible event duplication.\r\n            this.stopPolling();\r\n        }\r\n        // Safari embedded iframe. Storage event will trigger with the delta\r\n        // changes but no changes will be applied to the iframe localStorage.\r\n        if (this.safariLocalStorageNotSynced) {\r\n            // Get current iframe page value.\r\n            const storedValue = this.storage.getItem(key);\r\n            // Value not synchronized, synchronize manually.\r\n            if (event.newValue !== storedValue) {\r\n                if (event.newValue !== null) {\r\n                    // Value changed from current value.\r\n                    this.storage.setItem(key, event.newValue);\r\n                }\r\n                else {\r\n                    // Current value deleted.\r\n                    this.storage.removeItem(key);\r\n                }\r\n            }\r\n            else if (this.localCache[key] === event.newValue && !poll) {\r\n                // Already detected and processed, do not trigger listeners again.\r\n                return;\r\n            }\r\n        }\r\n        const triggerListeners = () => {\r\n            // Keep local map up to date in case storage event is triggered before\r\n            // poll.\r\n            const storedValue = this.storage.getItem(key);\r\n            if (!poll && this.localCache[key] === storedValue) {\r\n                // Real storage event which has already been detected, do nothing.\r\n                // This seems to trigger in some IE browsers for some reason.\r\n                return;\r\n            }\r\n            this.notifyListeners(key, storedValue);\r\n        };\r\n        const storedValue = this.storage.getItem(key);\r\n        if (_isIE10() &&\r\n            storedValue !== event.newValue &&\r\n            event.newValue !== event.oldValue) {\r\n            // IE 10 has this weird bug where a storage event would trigger with the\r\n            // correct key, oldValue and newValue but localStorage.getItem(key) does\r\n            // not yield the updated value until a few milliseconds. This ensures\r\n            // this recovers from that situation.\r\n            setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\r\n        }\r\n        else {\r\n            triggerListeners();\r\n        }\r\n    }\r\n    notifyListeners(key, value) {\r\n        this.localCache[key] = value;\r\n        const listeners = this.listeners[key];\r\n        if (listeners) {\r\n            for (const listener of Array.from(listeners)) {\r\n                listener(value ? JSON.parse(value) : value);\r\n            }\r\n        }\r\n    }\r\n    startPolling() {\r\n        this.stopPolling();\r\n        this.pollTimer = setInterval(() => {\r\n            this.forAllChangedKeys((key, oldValue, newValue) => {\r\n                this.onStorageEvent(new StorageEvent('storage', {\r\n                    key,\r\n                    oldValue,\r\n                    newValue\r\n                }), \r\n                /* poll */ true);\r\n            });\r\n        }, _POLLING_INTERVAL_MS$1);\r\n    }\r\n    stopPolling() {\r\n        if (this.pollTimer) {\r\n            clearInterval(this.pollTimer);\r\n            this.pollTimer = null;\r\n        }\r\n    }\r\n    attachListener() {\r\n        window.addEventListener('storage', this.boundEventHandler);\r\n    }\r\n    detachListener() {\r\n        window.removeEventListener('storage', this.boundEventHandler);\r\n    }\r\n    _addListener(key, listener) {\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            // Whether browser can detect storage event when it had already been pushed to the background.\r\n            // This may happen in some mobile browsers. A localStorage change in the foreground window\r\n            // will not be detected in the background window via the storage event.\r\n            // This was detected in iOS 7.x mobile browsers\r\n            if (this.fallbackToPolling) {\r\n                this.startPolling();\r\n            }\r\n            else {\r\n                this.attachListener();\r\n            }\r\n        }\r\n        if (!this.listeners[key]) {\r\n            this.listeners[key] = new Set();\r\n            // Populate the cache to avoid spuriously triggering on first poll.\r\n            this.localCache[key] = this.storage.getItem(key);\r\n        }\r\n        this.listeners[key].add(listener);\r\n    }\r\n    _removeListener(key, listener) {\r\n        if (this.listeners[key]) {\r\n            this.listeners[key].delete(listener);\r\n            if (this.listeners[key].size === 0) {\r\n                delete this.listeners[key];\r\n            }\r\n        }\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.detachListener();\r\n            this.stopPolling();\r\n        }\r\n    }\r\n    // Update local cache on base operations:\r\n    async _set(key, value) {\r\n        await super._set(key, value);\r\n        this.localCache[key] = JSON.stringify(value);\r\n    }\r\n    async _get(key) {\r\n        const value = await super._get(key);\r\n        this.localCache[key] = JSON.stringify(value);\r\n        return value;\r\n    }\r\n    async _remove(key) {\r\n        await super._remove(key);\r\n        delete this.localCache[key];\r\n    }\r\n}\r\nBrowserLocalPersistence.type = 'LOCAL';\r\n/**\r\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst browserLocalPersistence = BrowserLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass BrowserSessionPersistence extends BrowserPersistenceClass {\r\n    constructor() {\r\n        super(() => window.sessionStorage, \"SESSION\" /* PersistenceType.SESSION */);\r\n    }\r\n    _addListener(_key, _listener) {\r\n        // Listeners are not supported for session storage since it cannot be shared across windows\r\n        return;\r\n    }\r\n    _removeListener(_key, _listener) {\r\n        // Listeners are not supported for session storage since it cannot be shared across windows\r\n        return;\r\n    }\r\n}\r\nBrowserSessionPersistence.type = 'SESSION';\r\n/**\r\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst browserSessionPersistence = BrowserSessionPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\r\n *\r\n * @param promises - Array of promises to wait on.\r\n */\r\nfunction _allSettled(promises) {\r\n    return Promise.all(promises.map(async (promise) => {\r\n        try {\r\n            const value = await promise;\r\n            return {\r\n                fulfilled: true,\r\n                value\r\n            };\r\n        }\r\n        catch (reason) {\r\n            return {\r\n                fulfilled: false,\r\n                reason\r\n            };\r\n        }\r\n    }));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface class for receiving messages.\r\n *\r\n */\r\nclass Receiver {\r\n    constructor(eventTarget) {\r\n        this.eventTarget = eventTarget;\r\n        this.handlersMap = {};\r\n        this.boundEventHandler = this.handleEvent.bind(this);\r\n    }\r\n    /**\r\n     * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\r\n     *\r\n     * @param eventTarget - An event target (such as window or self) through which the underlying\r\n     * messages will be received.\r\n     */\r\n    static _getInstance(eventTarget) {\r\n        // The results are stored in an array since objects can't be keys for other\r\n        // objects. In addition, setting a unique property on an event target as a\r\n        // hash map key may not be allowed due to CORS restrictions.\r\n        const existingInstance = this.receivers.find(receiver => receiver.isListeningto(eventTarget));\r\n        if (existingInstance) {\r\n            return existingInstance;\r\n        }\r\n        const newInstance = new Receiver(eventTarget);\r\n        this.receivers.push(newInstance);\r\n        return newInstance;\r\n    }\r\n    isListeningto(eventTarget) {\r\n        return this.eventTarget === eventTarget;\r\n    }\r\n    /**\r\n     * Fans out a MessageEvent to the appropriate listeners.\r\n     *\r\n     * @remarks\r\n     * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\r\n     * finished processing.\r\n     *\r\n     * @param event - The MessageEvent.\r\n     *\r\n     */\r\n    async handleEvent(event) {\r\n        const messageEvent = event;\r\n        const { eventId, eventType, data } = messageEvent.data;\r\n        const handlers = this.handlersMap[eventType];\r\n        if (!(handlers === null || handlers === void 0 ? void 0 : handlers.size)) {\r\n            return;\r\n        }\r\n        messageEvent.ports[0].postMessage({\r\n            status: \"ack\" /* _Status.ACK */,\r\n            eventId,\r\n            eventType\r\n        });\r\n        const promises = Array.from(handlers).map(async (handler) => handler(messageEvent.origin, data));\r\n        const response = await _allSettled(promises);\r\n        messageEvent.ports[0].postMessage({\r\n            status: \"done\" /* _Status.DONE */,\r\n            eventId,\r\n            eventType,\r\n            response\r\n        });\r\n    }\r\n    /**\r\n     * Subscribe an event handler for a particular event.\r\n     *\r\n     * @param eventType - Event name to subscribe to.\r\n     * @param eventHandler - The event handler which should receive the events.\r\n     *\r\n     */\r\n    _subscribe(eventType, eventHandler) {\r\n        if (Object.keys(this.handlersMap).length === 0) {\r\n            this.eventTarget.addEventListener('message', this.boundEventHandler);\r\n        }\r\n        if (!this.handlersMap[eventType]) {\r\n            this.handlersMap[eventType] = new Set();\r\n        }\r\n        this.handlersMap[eventType].add(eventHandler);\r\n    }\r\n    /**\r\n     * Unsubscribe an event handler from a particular event.\r\n     *\r\n     * @param eventType - Event name to unsubscribe from.\r\n     * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\r\n     *\r\n     */\r\n    _unsubscribe(eventType, eventHandler) {\r\n        if (this.handlersMap[eventType] && eventHandler) {\r\n            this.handlersMap[eventType].delete(eventHandler);\r\n        }\r\n        if (!eventHandler || this.handlersMap[eventType].size === 0) {\r\n            delete this.handlersMap[eventType];\r\n        }\r\n        if (Object.keys(this.handlersMap).length === 0) {\r\n            this.eventTarget.removeEventListener('message', this.boundEventHandler);\r\n        }\r\n    }\r\n}\r\nReceiver.receivers = [];\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _generateEventId(prefix = '', digits = 10) {\r\n    let random = '';\r\n    for (let i = 0; i < digits; i++) {\r\n        random += Math.floor(Math.random() * 10);\r\n    }\r\n    return prefix + random;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface for sending messages and waiting for a completion response.\r\n *\r\n */\r\nclass Sender {\r\n    constructor(target) {\r\n        this.target = target;\r\n        this.handlers = new Set();\r\n    }\r\n    /**\r\n     * Unsubscribe the handler and remove it from our tracking Set.\r\n     *\r\n     * @param handler - The handler to unsubscribe.\r\n     */\r\n    removeMessageHandler(handler) {\r\n        if (handler.messageChannel) {\r\n            handler.messageChannel.port1.removeEventListener('message', handler.onMessage);\r\n            handler.messageChannel.port1.close();\r\n        }\r\n        this.handlers.delete(handler);\r\n    }\r\n    /**\r\n     * Send a message to the Receiver located at {@link target}.\r\n     *\r\n     * @remarks\r\n     * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\r\n     * receiver has had a chance to fully process the event.\r\n     *\r\n     * @param eventType - Type of event to send.\r\n     * @param data - The payload of the event.\r\n     * @param timeout - Timeout for waiting on an ACK from the receiver.\r\n     *\r\n     * @returns An array of settled promises from all the handlers that were listening on the receiver.\r\n     */\r\n    async _send(eventType, data, timeout = 50 /* _TimeoutDuration.ACK */) {\r\n        const messageChannel = typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\r\n        if (!messageChannel) {\r\n            throw new Error(\"connection_unavailable\" /* _MessageError.CONNECTION_UNAVAILABLE */);\r\n        }\r\n        // Node timers and browser timers return fundamentally different types.\r\n        // We don't actually care what the value is but TS won't accept unknown and\r\n        // we can't cast properly in both environments.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let completionTimer;\r\n        let handler;\r\n        return new Promise((resolve, reject) => {\r\n            const eventId = _generateEventId('', 20);\r\n            messageChannel.port1.start();\r\n            const ackTimer = setTimeout(() => {\r\n                reject(new Error(\"unsupported_event\" /* _MessageError.UNSUPPORTED_EVENT */));\r\n            }, timeout);\r\n            handler = {\r\n                messageChannel,\r\n                onMessage(event) {\r\n                    const messageEvent = event;\r\n                    if (messageEvent.data.eventId !== eventId) {\r\n                        return;\r\n                    }\r\n                    switch (messageEvent.data.status) {\r\n                        case \"ack\" /* _Status.ACK */:\r\n                            // The receiver should ACK first.\r\n                            clearTimeout(ackTimer);\r\n                            completionTimer = setTimeout(() => {\r\n                                reject(new Error(\"timeout\" /* _MessageError.TIMEOUT */));\r\n                            }, 3000 /* _TimeoutDuration.COMPLETION */);\r\n                            break;\r\n                        case \"done\" /* _Status.DONE */:\r\n                            // Once the receiver's handlers are finished we will get the results.\r\n                            clearTimeout(completionTimer);\r\n                            resolve(messageEvent.data.response);\r\n                            break;\r\n                        default:\r\n                            clearTimeout(ackTimer);\r\n                            clearTimeout(completionTimer);\r\n                            reject(new Error(\"invalid_response\" /* _MessageError.INVALID_RESPONSE */));\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n            this.handlers.add(handler);\r\n            messageChannel.port1.addEventListener('message', handler.onMessage);\r\n            this.target.postMessage({\r\n                eventType,\r\n                eventId,\r\n                data\r\n            }, [messageChannel.port2]);\r\n        }).finally(() => {\r\n            if (handler) {\r\n                this.removeMessageHandler(handler);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Lazy accessor for window, since the compat layer won't tree shake this out,\r\n * we need to make sure not to mess with window unless we have to\r\n */\r\nfunction _window() {\r\n    return window;\r\n}\r\nfunction _setWindowLocation(url) {\r\n    _window().location.href = url;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _isWorker() {\r\n    return (typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\r\n        typeof _window()['importScripts'] === 'function');\r\n}\r\nasync function _getActiveServiceWorker() {\r\n    if (!(navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const registration = await navigator.serviceWorker.ready;\r\n        return registration.active;\r\n    }\r\n    catch (_a) {\r\n        return null;\r\n    }\r\n}\r\nfunction _getServiceWorkerController() {\r\n    var _a;\r\n    return ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker) === null || _a === void 0 ? void 0 : _a.controller) || null;\r\n}\r\nfunction _getWorkerGlobalScope() {\r\n    return _isWorker() ? self : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebaseLocalStorageDb';\r\nconst DB_VERSION = 1;\r\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\r\nconst DB_DATA_KEYPATH = 'fbase_key';\r\n/**\r\n * Promise wrapper for IDBRequest\r\n *\r\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\r\n *\r\n */\r\nclass DBPromise {\r\n    constructor(request) {\r\n        this.request = request;\r\n    }\r\n    toPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            this.request.addEventListener('success', () => {\r\n                resolve(this.request.result);\r\n            });\r\n            this.request.addEventListener('error', () => {\r\n                reject(this.request.error);\r\n            });\r\n        });\r\n    }\r\n}\r\nfunction getObjectStore(db, isReadWrite) {\r\n    return db\r\n        .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\r\n        .objectStore(DB_OBJECTSTORE_NAME);\r\n}\r\nfunction _deleteDatabase() {\r\n    const request = indexedDB.deleteDatabase(DB_NAME);\r\n    return new DBPromise(request).toPromise();\r\n}\r\nfunction _openDatabase() {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n    return new Promise((resolve, reject) => {\r\n        request.addEventListener('error', () => {\r\n            reject(request.error);\r\n        });\r\n        request.addEventListener('upgradeneeded', () => {\r\n            const db = request.result;\r\n            try {\r\n                db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n        request.addEventListener('success', async () => {\r\n            const db = request.result;\r\n            // Strange bug that occurs in Firefox when multiple tabs are opened at the\r\n            // same time. The only way to recover seems to be deleting the database\r\n            // and re-initializing it.\r\n            // https://github.com/firebase/firebase-js-sdk/issues/634\r\n            if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\r\n                // Need to close the database or else you get a `blocked` event\r\n                db.close();\r\n                await _deleteDatabase();\r\n                resolve(await _openDatabase());\r\n            }\r\n            else {\r\n                resolve(db);\r\n            }\r\n        });\r\n    });\r\n}\r\nasync function _putObject(db, key, value) {\r\n    const request = getObjectStore(db, true).put({\r\n        [DB_DATA_KEYPATH]: key,\r\n        value\r\n    });\r\n    return new DBPromise(request).toPromise();\r\n}\r\nasync function getObject(db, key) {\r\n    const request = getObjectStore(db, false).get(key);\r\n    const data = await new DBPromise(request).toPromise();\r\n    return data === undefined ? null : data.value;\r\n}\r\nfunction _deleteObject(db, key) {\r\n    const request = getObjectStore(db, true).delete(key);\r\n    return new DBPromise(request).toPromise();\r\n}\r\nconst _POLLING_INTERVAL_MS = 800;\r\nconst _TRANSACTION_RETRY_COUNT = 3;\r\nclass IndexedDBLocalPersistence {\r\n    constructor() {\r\n        this.type = \"LOCAL\" /* PersistenceType.LOCAL */;\r\n        this._shouldAllowMigration = true;\r\n        this.listeners = {};\r\n        this.localCache = {};\r\n        // setTimeout return value is platform specific\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.pollTimer = null;\r\n        this.pendingWrites = 0;\r\n        this.receiver = null;\r\n        this.sender = null;\r\n        this.serviceWorkerReceiverAvailable = false;\r\n        this.activeServiceWorker = null;\r\n        // Fire & forget the service worker registration as it may never resolve\r\n        this._workerInitializationPromise =\r\n            this.initializeServiceWorkerMessaging().then(() => { }, () => { });\r\n    }\r\n    async _openDb() {\r\n        if (this.db) {\r\n            return this.db;\r\n        }\r\n        this.db = await _openDatabase();\r\n        return this.db;\r\n    }\r\n    async _withRetries(op) {\r\n        let numAttempts = 0;\r\n        while (true) {\r\n            try {\r\n                const db = await this._openDb();\r\n                return await op(db);\r\n            }\r\n            catch (e) {\r\n                if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\r\n                    throw e;\r\n                }\r\n                if (this.db) {\r\n                    this.db.close();\r\n                    this.db = undefined;\r\n                }\r\n                // TODO: consider adding exponential backoff\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\r\n     * postMessage interface to send these events to the worker ourselves.\r\n     */\r\n    async initializeServiceWorkerMessaging() {\r\n        return _isWorker() ? this.initializeReceiver() : this.initializeSender();\r\n    }\r\n    /**\r\n     * As the worker we should listen to events from the main window.\r\n     */\r\n    async initializeReceiver() {\r\n        this.receiver = Receiver._getInstance(_getWorkerGlobalScope());\r\n        // Refresh from persistence if we receive a KeyChanged message.\r\n        this.receiver._subscribe(\"keyChanged\" /* _EventType.KEY_CHANGED */, async (_origin, data) => {\r\n            const keys = await this._poll();\r\n            return {\r\n                keyProcessed: keys.includes(data.key)\r\n            };\r\n        });\r\n        // Let the sender know that we are listening so they give us more timeout.\r\n        this.receiver._subscribe(\"ping\" /* _EventType.PING */, async (_origin, _data) => {\r\n            return [\"keyChanged\" /* _EventType.KEY_CHANGED */];\r\n        });\r\n    }\r\n    /**\r\n     * As the main window, we should let the worker know when keys change (set and remove).\r\n     *\r\n     * @remarks\r\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\r\n     * may not resolve.\r\n     */\r\n    async initializeSender() {\r\n        var _a, _b;\r\n        // Check to see if there's an active service worker.\r\n        this.activeServiceWorker = await _getActiveServiceWorker();\r\n        if (!this.activeServiceWorker) {\r\n            return;\r\n        }\r\n        this.sender = new Sender(this.activeServiceWorker);\r\n        // Ping the service worker to check what events they can handle.\r\n        const results = await this.sender._send(\"ping\" /* _EventType.PING */, {}, 800 /* _TimeoutDuration.LONG_ACK */);\r\n        if (!results) {\r\n            return;\r\n        }\r\n        if (((_a = results[0]) === null || _a === void 0 ? void 0 : _a.fulfilled) &&\r\n            ((_b = results[0]) === null || _b === void 0 ? void 0 : _b.value.includes(\"keyChanged\" /* _EventType.KEY_CHANGED */))) {\r\n            this.serviceWorkerReceiverAvailable = true;\r\n        }\r\n    }\r\n    /**\r\n     * Let the worker know about a changed key, the exact key doesn't technically matter since the\r\n     * worker will just trigger a full sync anyway.\r\n     *\r\n     * @remarks\r\n     * For now, we only support one service worker per page.\r\n     *\r\n     * @param key - Storage key which changed.\r\n     */\r\n    async notifyServiceWorker(key) {\r\n        if (!this.sender ||\r\n            !this.activeServiceWorker ||\r\n            _getServiceWorkerController() !== this.activeServiceWorker) {\r\n            return;\r\n        }\r\n        try {\r\n            await this.sender._send(\"keyChanged\" /* _EventType.KEY_CHANGED */, { key }, \r\n            // Use long timeout if receiver has previously responded to a ping from us.\r\n            this.serviceWorkerReceiverAvailable\r\n                ? 800 /* _TimeoutDuration.LONG_ACK */\r\n                : 50 /* _TimeoutDuration.ACK */);\r\n        }\r\n        catch (_a) {\r\n            // This is a best effort approach. Ignore errors.\r\n        }\r\n    }\r\n    async _isAvailable() {\r\n        try {\r\n            if (!indexedDB) {\r\n                return false;\r\n            }\r\n            const db = await _openDatabase();\r\n            await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\r\n            await _deleteObject(db, STORAGE_AVAILABLE_KEY);\r\n            return true;\r\n        }\r\n        catch (_a) { }\r\n        return false;\r\n    }\r\n    async _withPendingWrite(write) {\r\n        this.pendingWrites++;\r\n        try {\r\n            await write();\r\n        }\r\n        finally {\r\n            this.pendingWrites--;\r\n        }\r\n    }\r\n    async _set(key, value) {\r\n        return this._withPendingWrite(async () => {\r\n            await this._withRetries((db) => _putObject(db, key, value));\r\n            this.localCache[key] = value;\r\n            return this.notifyServiceWorker(key);\r\n        });\r\n    }\r\n    async _get(key) {\r\n        const obj = (await this._withRetries((db) => getObject(db, key)));\r\n        this.localCache[key] = obj;\r\n        return obj;\r\n    }\r\n    async _remove(key) {\r\n        return this._withPendingWrite(async () => {\r\n            await this._withRetries((db) => _deleteObject(db, key));\r\n            delete this.localCache[key];\r\n            return this.notifyServiceWorker(key);\r\n        });\r\n    }\r\n    async _poll() {\r\n        // TODO: check if we need to fallback if getAll is not supported\r\n        const result = await this._withRetries((db) => {\r\n            const getAllRequest = getObjectStore(db, false).getAll();\r\n            return new DBPromise(getAllRequest).toPromise();\r\n        });\r\n        if (!result) {\r\n            return [];\r\n        }\r\n        // If we have pending writes in progress abort, we'll get picked up on the next poll\r\n        if (this.pendingWrites !== 0) {\r\n            return [];\r\n        }\r\n        const keys = [];\r\n        const keysInResult = new Set();\r\n        for (const { fbase_key: key, value } of result) {\r\n            keysInResult.add(key);\r\n            if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\r\n                this.notifyListeners(key, value);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (const localKey of Object.keys(this.localCache)) {\r\n            if (this.localCache[localKey] && !keysInResult.has(localKey)) {\r\n                // Deleted\r\n                this.notifyListeners(localKey, null);\r\n                keys.push(localKey);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    notifyListeners(key, newValue) {\r\n        this.localCache[key] = newValue;\r\n        const listeners = this.listeners[key];\r\n        if (listeners) {\r\n            for (const listener of Array.from(listeners)) {\r\n                listener(newValue);\r\n            }\r\n        }\r\n    }\r\n    startPolling() {\r\n        this.stopPolling();\r\n        this.pollTimer = setInterval(async () => this._poll(), _POLLING_INTERVAL_MS);\r\n    }\r\n    stopPolling() {\r\n        if (this.pollTimer) {\r\n            clearInterval(this.pollTimer);\r\n            this.pollTimer = null;\r\n        }\r\n    }\r\n    _addListener(key, listener) {\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.startPolling();\r\n        }\r\n        if (!this.listeners[key]) {\r\n            this.listeners[key] = new Set();\r\n            // Populate the cache to avoid spuriously triggering on first poll.\r\n            void this._get(key); // This can happen in the background async and we can return immediately.\r\n        }\r\n        this.listeners[key].add(listener);\r\n    }\r\n    _removeListener(key, listener) {\r\n        if (this.listeners[key]) {\r\n            this.listeners[key].delete(listener);\r\n            if (this.listeners[key].size === 0) {\r\n                delete this.listeners[key];\r\n            }\r\n        }\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.stopPolling();\r\n        }\r\n    }\r\n}\r\nIndexedDBLocalPersistence.type = 'LOCAL';\r\n/**\r\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst indexedDBLocalPersistence = IndexedDBLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction startSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:start\" /* Endpoint.START_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction finalizeSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:finalize\" /* Endpoint.FINALIZE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction finalizeSignInTotpMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* HttpMethod.POST */, \"/v2/accounts/mfaSignIn:finalize\" /* Endpoint.FINALIZE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _SOLVE_TIME_MS = 500;\r\nconst _EXPIRATION_TIME_MS = 60000;\r\nconst _WIDGET_ID_START = 1000000000000;\r\nclass MockReCaptcha {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.counter = _WIDGET_ID_START;\r\n        this._widgets = new Map();\r\n    }\r\n    render(container, parameters) {\r\n        const id = this.counter;\r\n        this._widgets.set(id, new MockWidget(container, this.auth.name, parameters || {}));\r\n        this.counter++;\r\n        return id;\r\n    }\r\n    reset(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.delete());\r\n        this._widgets.delete(id);\r\n    }\r\n    getResponse(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        return ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.getResponse()) || '';\r\n    }\r\n    async execute(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.execute());\r\n        return '';\r\n    }\r\n}\r\nclass MockWidget {\r\n    constructor(containerOrId, appName, params) {\r\n        this.params = params;\r\n        this.timerId = null;\r\n        this.deleted = false;\r\n        this.responseToken = null;\r\n        this.clickHandler = () => {\r\n            this.execute();\r\n        };\r\n        const container = typeof containerOrId === 'string'\r\n            ? document.getElementById(containerOrId)\r\n            : containerOrId;\r\n        _assert(container, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */, { appName });\r\n        this.container = container;\r\n        this.isVisible = this.params.size !== 'invisible';\r\n        if (this.isVisible) {\r\n            this.execute();\r\n        }\r\n        else {\r\n            this.container.addEventListener('click', this.clickHandler);\r\n        }\r\n    }\r\n    getResponse() {\r\n        this.checkIfDeleted();\r\n        return this.responseToken;\r\n    }\r\n    delete() {\r\n        this.checkIfDeleted();\r\n        this.deleted = true;\r\n        if (this.timerId) {\r\n            clearTimeout(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n        this.container.removeEventListener('click', this.clickHandler);\r\n    }\r\n    execute() {\r\n        this.checkIfDeleted();\r\n        if (this.timerId) {\r\n            return;\r\n        }\r\n        this.timerId = window.setTimeout(() => {\r\n            this.responseToken = generateRandomAlphaNumericString(50);\r\n            const { callback, 'expired-callback': expiredCallback } = this.params;\r\n            if (callback) {\r\n                try {\r\n                    callback(this.responseToken);\r\n                }\r\n                catch (e) { }\r\n            }\r\n            this.timerId = window.setTimeout(() => {\r\n                this.timerId = null;\r\n                this.responseToken = null;\r\n                if (expiredCallback) {\r\n                    try {\r\n                        expiredCallback();\r\n                    }\r\n                    catch (e) { }\r\n                }\r\n                if (this.isVisible) {\r\n                    this.execute();\r\n                }\r\n            }, _EXPIRATION_TIME_MS);\r\n        }, _SOLVE_TIME_MS);\r\n    }\r\n    checkIfDeleted() {\r\n        if (this.deleted) {\r\n            throw new Error('reCAPTCHA mock was already deleted!');\r\n        }\r\n    }\r\n}\r\nfunction generateRandomAlphaNumericString(len) {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < len; i++) {\r\n        chars.push(allowedChars.charAt(Math.floor(Math.random() * allowedChars.length)));\r\n    }\r\n    return chars.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// ReCaptcha will load using the same callback, so the callback function needs\r\n// to be kept around\r\nconst _JSLOAD_CALLBACK = _generateCallbackName('rcb');\r\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\r\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\r\n/**\r\n * Loader for the GReCaptcha library. There should only ever be one of this.\r\n */\r\nclass ReCaptchaLoaderImpl {\r\n    constructor() {\r\n        var _a;\r\n        this.hostLanguage = '';\r\n        this.counter = 0;\r\n        /**\r\n         * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\r\n         * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\r\n         * `window.grecaptcha.render()` will not. Another load will add it.\r\n         */\r\n        this.librarySeparatelyLoaded = !!((_a = _window().grecaptcha) === null || _a === void 0 ? void 0 : _a.render);\r\n    }\r\n    load(auth, hl = '') {\r\n        _assert(isHostLanguageValid(hl), auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\r\n            return Promise.resolve(_window().grecaptcha);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const networkTimeout = _window().setTimeout(() => {\r\n                reject(_createError(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\r\n            }, NETWORK_TIMEOUT_DELAY.get());\r\n            _window()[_JSLOAD_CALLBACK] = () => {\r\n                _window().clearTimeout(networkTimeout);\r\n                delete _window()[_JSLOAD_CALLBACK];\r\n                const recaptcha = _window().grecaptcha;\r\n                if (!recaptcha || !isV2(recaptcha)) {\r\n                    reject(_createError(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */));\r\n                    return;\r\n                }\r\n                // Wrap the greptcha render function so that we know if the developer has\r\n                // called it separately\r\n                const render = recaptcha.render;\r\n                recaptcha.render = (container, params) => {\r\n                    const widgetId = render(container, params);\r\n                    this.counter++;\r\n                    return widgetId;\r\n                };\r\n                this.hostLanguage = hl;\r\n                resolve(recaptcha);\r\n            };\r\n            const url = `${RECAPTCHA_BASE}?${querystring({\r\n                onload: _JSLOAD_CALLBACK,\r\n                render: 'explicit',\r\n                hl\r\n            })}`;\r\n            _loadJS(url).catch(() => {\r\n                clearTimeout(networkTimeout);\r\n                reject(_createError(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */));\r\n            });\r\n        });\r\n    }\r\n    clearedOneInstance() {\r\n        this.counter--;\r\n    }\r\n    shouldResolveImmediately(hl) {\r\n        var _a;\r\n        // We can resolve immediately if:\r\n        //   • grecaptcha is already defined AND (\r\n        //     1. the requested language codes are the same OR\r\n        //     2. there exists already a ReCaptcha on the page\r\n        //     3. the library was already loaded by the app\r\n        // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\r\n        // that are already in the page\r\n        return (!!((_a = _window().grecaptcha) === null || _a === void 0 ? void 0 : _a.render) &&\r\n            (hl === this.hostLanguage ||\r\n                this.counter > 0 ||\r\n                this.librarySeparatelyLoaded));\r\n    }\r\n}\r\nfunction isHostLanguageValid(hl) {\r\n    return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\r\n}\r\nclass MockReCaptchaLoaderImpl {\r\n    async load(auth) {\r\n        return new MockReCaptcha(auth);\r\n    }\r\n    clearedOneInstance() { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\r\nconst DEFAULT_PARAMS = {\r\n    theme: 'light',\r\n    type: 'image'\r\n};\r\n/**\r\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\r\n *\r\n * @remarks\r\n * `RecaptchaVerifier` does not work in a Node.js environment.\r\n *\r\n * @public\r\n */\r\nclass RecaptchaVerifier {\r\n    /**\r\n     * @param authExtern - The corresponding Firebase {@link Auth} instance.\r\n     *\r\n     * @param containerOrId - The reCAPTCHA container parameter.\r\n     *\r\n     * @remarks\r\n     * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\r\n     * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\r\n     * an element ID. The corresponding element must also must be in the DOM at the time of\r\n     * initialization.\r\n     *\r\n     * @param parameters - The optional reCAPTCHA parameters.\r\n     *\r\n     * @remarks\r\n     * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\r\n     * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\r\n     * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\r\n     * 'invisible'.\r\n     */\r\n    constructor(authExtern, containerOrId, parameters = Object.assign({}, DEFAULT_PARAMS)) {\r\n        this.parameters = parameters;\r\n        /**\r\n         * The application verifier type.\r\n         *\r\n         * @remarks\r\n         * For a reCAPTCHA verifier, this is 'recaptcha'.\r\n         */\r\n        this.type = RECAPTCHA_VERIFIER_TYPE;\r\n        this.destroyed = false;\r\n        this.widgetId = null;\r\n        this.tokenChangeListeners = new Set();\r\n        this.renderPromise = null;\r\n        this.recaptcha = null;\r\n        this.auth = _castAuth(authExtern);\r\n        this.isInvisible = this.parameters.size === 'invisible';\r\n        _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        const container = typeof containerOrId === 'string'\r\n            ? document.getElementById(containerOrId)\r\n            : containerOrId;\r\n        _assert(container, this.auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        this.container = container;\r\n        this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\r\n        this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\r\n            ? new MockReCaptchaLoaderImpl()\r\n            : new ReCaptchaLoaderImpl();\r\n        this.validateStartingState();\r\n        // TODO: Figure out if sdk version is needed\r\n    }\r\n    /**\r\n     * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\r\n     *\r\n     * @returns A Promise for the reCAPTCHA token.\r\n     */\r\n    async verify() {\r\n        this.assertNotDestroyed();\r\n        const id = await this.render();\r\n        const recaptcha = this.getAssertedRecaptcha();\r\n        const response = recaptcha.getResponse(id);\r\n        if (response) {\r\n            return response;\r\n        }\r\n        return new Promise(resolve => {\r\n            const tokenChange = (token) => {\r\n                if (!token) {\r\n                    return; // Ignore token expirations.\r\n                }\r\n                this.tokenChangeListeners.delete(tokenChange);\r\n                resolve(token);\r\n            };\r\n            this.tokenChangeListeners.add(tokenChange);\r\n            if (this.isInvisible) {\r\n                recaptcha.execute(id);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Renders the reCAPTCHA widget on the page.\r\n     *\r\n     * @returns A Promise that resolves with the reCAPTCHA widget ID.\r\n     */\r\n    render() {\r\n        try {\r\n            this.assertNotDestroyed();\r\n        }\r\n        catch (e) {\r\n            // This method returns a promise. Since it's not async (we want to return the\r\n            // _same_ promise if rendering is still occurring), the API surface should\r\n            // reject with the error rather than just throw\r\n            return Promise.reject(e);\r\n        }\r\n        if (this.renderPromise) {\r\n            return this.renderPromise;\r\n        }\r\n        this.renderPromise = this.makeRenderPromise().catch(e => {\r\n            this.renderPromise = null;\r\n            throw e;\r\n        });\r\n        return this.renderPromise;\r\n    }\r\n    /** @internal */\r\n    _reset() {\r\n        this.assertNotDestroyed();\r\n        if (this.widgetId !== null) {\r\n            this.getAssertedRecaptcha().reset(this.widgetId);\r\n        }\r\n    }\r\n    /**\r\n     * Clears the reCAPTCHA widget from the page and destroys the instance.\r\n     */\r\n    clear() {\r\n        this.assertNotDestroyed();\r\n        this.destroyed = true;\r\n        this._recaptchaLoader.clearedOneInstance();\r\n        if (!this.isInvisible) {\r\n            this.container.childNodes.forEach(node => {\r\n                this.container.removeChild(node);\r\n            });\r\n        }\r\n    }\r\n    validateStartingState() {\r\n        _assert(!this.parameters.sitekey, this.auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        _assert(this.isInvisible || !this.container.hasChildNodes(), this.auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    makeTokenCallback(existing) {\r\n        return token => {\r\n            this.tokenChangeListeners.forEach(listener => listener(token));\r\n            if (typeof existing === 'function') {\r\n                existing(token);\r\n            }\r\n            else if (typeof existing === 'string') {\r\n                const globalFunc = _window()[existing];\r\n                if (typeof globalFunc === 'function') {\r\n                    globalFunc(token);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    assertNotDestroyed() {\r\n        _assert(!this.destroyed, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    }\r\n    async makeRenderPromise() {\r\n        await this.init();\r\n        if (!this.widgetId) {\r\n            let container = this.container;\r\n            if (!this.isInvisible) {\r\n                const guaranteedEmpty = document.createElement('div');\r\n                container.appendChild(guaranteedEmpty);\r\n                container = guaranteedEmpty;\r\n            }\r\n            this.widgetId = this.getAssertedRecaptcha().render(container, this.parameters);\r\n        }\r\n        return this.widgetId;\r\n    }\r\n    async init() {\r\n        _assert(_isHttpOrHttps() && !_isWorker(), this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        await domReady();\r\n        this.recaptcha = await this._recaptchaLoader.load(this.auth, this.auth.languageCode || undefined);\r\n        const siteKey = await getRecaptchaParams(this.auth);\r\n        _assert(siteKey, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        this.parameters.sitekey = siteKey;\r\n    }\r\n    getAssertedRecaptcha() {\r\n        _assert(this.recaptcha, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.recaptcha;\r\n    }\r\n}\r\nfunction domReady() {\r\n    let resolver = null;\r\n    return new Promise(resolve => {\r\n        if (document.readyState === 'complete') {\r\n            resolve();\r\n            return;\r\n        }\r\n        // Document not ready, wait for load before resolving.\r\n        // Save resolver, so we can remove listener in case it was externally\r\n        // cancelled.\r\n        resolver = () => resolve();\r\n        window.addEventListener('load', resolver);\r\n    }).catch(e => {\r\n        if (resolver) {\r\n            window.removeEventListener('load', resolver);\r\n        }\r\n        throw e;\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ConfirmationResultImpl {\r\n    constructor(verificationId, onConfirmation) {\r\n        this.verificationId = verificationId;\r\n        this.onConfirmation = onConfirmation;\r\n    }\r\n    confirm(verificationCode) {\r\n        const authCredential = PhoneAuthCredential._fromVerification(this.verificationId, verificationCode);\r\n        return this.onConfirmation(authCredential);\r\n    }\r\n}\r\n/**\r\n * Asynchronously signs in using a phone number.\r\n *\r\n * @remarks\r\n * This method sends a code via SMS to the given\r\n * phone number, and returns a {@link ConfirmationResult}. After the user\r\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\r\n * with the code to sign the user in.\r\n *\r\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\r\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\r\n * This function can work on other platforms that do not support the\r\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\r\n * third-party {@link ApplicationVerifier} implementation.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\r\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n * // Obtain a verificationCode from the user.\r\n * const credential = await confirmationResult.confirm(verificationCode);\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function signInWithPhoneNumber(auth, phoneNumber, appVerifier) {\r\n    const authInternal = _castAuth(auth);\r\n    const verificationId = await _verifyPhoneNumber(authInternal, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => signInWithCredential(authInternal, cred));\r\n}\r\n/**\r\n * Links the user account with the given phone number.\r\n *\r\n * @remarks\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @param user - The user.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function linkWithPhoneNumber(user, phoneNumber, appVerifier) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(false, userInternal, \"phone\" /* ProviderId.PHONE */);\r\n    const verificationId = await _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => linkWithCredential(userInternal, cred));\r\n}\r\n/**\r\n * Re-authenticates a user using a fresh phone credential.\r\n *\r\n * @remarks\r\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @param user - The user.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithPhoneNumber(user, phoneNumber, appVerifier) {\r\n    const userInternal = getModularInstance(user);\r\n    const verificationId = await _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => reauthenticateWithCredential(userInternal, cred));\r\n}\r\n/**\r\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\r\n *\r\n */\r\nasync function _verifyPhoneNumber(auth, options, verifier) {\r\n    var _a;\r\n    const recaptchaToken = await verifier.verify();\r\n    try {\r\n        _assert(typeof recaptchaToken === 'string', auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        _assert(verifier.type === RECAPTCHA_VERIFIER_TYPE, auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        let phoneInfoOptions;\r\n        if (typeof options === 'string') {\r\n            phoneInfoOptions = {\r\n                phoneNumber: options\r\n            };\r\n        }\r\n        else {\r\n            phoneInfoOptions = options;\r\n        }\r\n        if ('session' in phoneInfoOptions) {\r\n            const session = phoneInfoOptions.session;\r\n            if ('phoneNumber' in phoneInfoOptions) {\r\n                _assert(session.type === \"enroll\" /* MultiFactorSessionType.ENROLL */, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n                const response = await startEnrollPhoneMfa(auth, {\r\n                    idToken: session.credential,\r\n                    phoneEnrollmentInfo: {\r\n                        phoneNumber: phoneInfoOptions.phoneNumber,\r\n                        recaptchaToken\r\n                    }\r\n                });\r\n                return response.phoneSessionInfo.sessionInfo;\r\n            }\r\n            else {\r\n                _assert(session.type === \"signin\" /* MultiFactorSessionType.SIGN_IN */, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n                const mfaEnrollmentId = ((_a = phoneInfoOptions.multiFactorHint) === null || _a === void 0 ? void 0 : _a.uid) ||\r\n                    phoneInfoOptions.multiFactorUid;\r\n                _assert(mfaEnrollmentId, auth, \"missing-multi-factor-info\" /* AuthErrorCode.MISSING_MFA_INFO */);\r\n                const response = await startSignInPhoneMfa(auth, {\r\n                    mfaPendingCredential: session.credential,\r\n                    mfaEnrollmentId,\r\n                    phoneSignInInfo: {\r\n                        recaptchaToken\r\n                    }\r\n                });\r\n                return response.phoneResponseInfo.sessionInfo;\r\n            }\r\n        }\r\n        else {\r\n            const { sessionInfo } = await sendPhoneVerificationCode(auth, {\r\n                phoneNumber: phoneInfoOptions.phoneNumber,\r\n                recaptchaToken\r\n            });\r\n            return sessionInfo;\r\n        }\r\n    }\r\n    finally {\r\n        verifier._reset();\r\n    }\r\n}\r\n/**\r\n * Updates the user's phone number.\r\n *\r\n * @remarks\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n * const provider = new PhoneAuthProvider(auth);\r\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n * // Obtain the verificationCode from the user.\r\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n * await updatePhoneNumber(user, phoneCredential);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param credential - A credential authenticating the new phone number.\r\n *\r\n * @public\r\n */\r\nasync function updatePhoneNumber(user, credential) {\r\n    await _link$1(getModularInstance(user), credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link PhoneAuthCredential}.\r\n *\r\n * @remarks\r\n * `PhoneAuthProvider` does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n * const provider = new PhoneAuthProvider(auth);\r\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n * // Obtain the verificationCode from the user.\r\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n * const userCredential = await signInWithCredential(auth, phoneCredential);\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass PhoneAuthProvider {\r\n    /**\r\n     * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\r\n     *\r\n     */\r\n    constructor(auth) {\r\n        /** Always set to {@link ProviderId}.PHONE. */\r\n        this.providerId = PhoneAuthProvider.PROVIDER_ID;\r\n        this.auth = _castAuth(auth);\r\n    }\r\n    /**\r\n     *\r\n     * Starts a phone number authentication flow by sending a verification code to the given phone\r\n     * number.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\r\n     * E.164 format (e.g. +16505550101).\r\n     * @param applicationVerifier - For abuse prevention, this method also requires a\r\n     * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\r\n     * {@link RecaptchaVerifier}.\r\n     *\r\n     * @returns A Promise for a verification ID that can be passed to\r\n     * {@link PhoneAuthProvider.credential} to identify this flow..\r\n     */\r\n    verifyPhoneNumber(phoneOptions, applicationVerifier) {\r\n        return _verifyPhoneNumber(this.auth, phoneOptions, getModularInstance(applicationVerifier));\r\n    }\r\n    /**\r\n     * Creates a phone auth credential, given the verification ID from\r\n     * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\r\n     * mobile device.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = await confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\r\n     * @param verificationCode - The verification code sent to the user's mobile device.\r\n     *\r\n     * @returns The auth provider credential.\r\n     */\r\n    static credential(verificationId, verificationCode) {\r\n        return PhoneAuthCredential._fromVerification(verificationId, verificationCode);\r\n    }\r\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential}.\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        const credential = userCredential;\r\n        return PhoneAuthProvider.credentialFromTaggedObject(credential);\r\n    }\r\n    /**\r\n     * Returns an {@link AuthCredential} when passed an error.\r\n     *\r\n     * @remarks\r\n     *\r\n     * This method works for errors like\r\n     * `auth/account-exists-with-different-credentials`. This is useful for\r\n     * recovering when attempting to set a user's phone number but the number\r\n     * in question is already tied to another account. For example, the following\r\n     * code tries to update the current user's phone number, and if that\r\n     * fails, links the user with the account associated with that number:\r\n     *\r\n     * ```js\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(number, verifier);\r\n     * try {\r\n     *   const code = ''; // Prompt the user for the verification code\r\n     *   await updatePhoneNumber(\r\n     *       auth.currentUser,\r\n     *       PhoneAuthProvider.credential(verificationId, code));\r\n     * } catch (e) {\r\n     *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\r\n     *     const cred = PhoneAuthProvider.credentialFromError(e);\r\n     *     await linkWithCredential(auth.currentUser, cred);\r\n     *   }\r\n     * }\r\n     *\r\n     * // At this point, auth.currentUser.phoneNumber === number.\r\n     * ```\r\n     *\r\n     * @param error - The error to generate a credential from.\r\n     */\r\n    static credentialFromError(error) {\r\n        return PhoneAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { phoneNumber, temporaryProof } = tokenResponse;\r\n        if (phoneNumber && temporaryProof) {\r\n            return PhoneAuthCredential._fromTokenResponse(phoneNumber, temporaryProof);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n/** Always set to {@link ProviderId}.PHONE. */\r\nPhoneAuthProvider.PROVIDER_ID = \"phone\" /* ProviderId.PHONE */;\r\n/** Always set to {@link SignInMethod}.PHONE. */\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = \"phone\" /* SignInMethod.PHONE */;\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Chooses a popup/redirect resolver to use. This prefers the override (which\r\n * is directly passed in), and falls back to the property set on the auth\r\n * object. If neither are available, this function errors w/ an argument error.\r\n */\r\nfunction _withDefaultResolver(auth, resolverOverride) {\r\n    if (resolverOverride) {\r\n        return _getInstance(resolverOverride);\r\n    }\r\n    _assert(auth._popupRedirectResolver, auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n    return auth._popupRedirectResolver;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass IdpCredential extends AuthCredential {\r\n    constructor(params) {\r\n        super(\"custom\" /* ProviderId.CUSTOM */, \"custom\" /* ProviderId.CUSTOM */);\r\n        this.params = params;\r\n    }\r\n    _getIdTokenResponse(auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    }\r\n    _linkToIdToken(auth, idToken) {\r\n        return signInWithIdp(auth, this._buildIdpRequest(idToken));\r\n    }\r\n    _getReauthenticationResolver(auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    }\r\n    _buildIdpRequest(idToken) {\r\n        const request = {\r\n            requestUri: this.params.requestUri,\r\n            sessionId: this.params.sessionId,\r\n            postBody: this.params.postBody,\r\n            tenantId: this.params.tenantId,\r\n            pendingToken: this.params.pendingToken,\r\n            returnSecureToken: true,\r\n            returnIdpCredential: true\r\n        };\r\n        if (idToken) {\r\n            request.idToken = idToken;\r\n        }\r\n        return request;\r\n    }\r\n}\r\nfunction _signIn(params) {\r\n    return _signInWithCredential(params.auth, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nfunction _reauth(params) {\r\n    const { auth, user } = params;\r\n    _assert(user, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    return _reauthenticate(user, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nasync function _link(params) {\r\n    const { auth, user } = params;\r\n    _assert(user, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    return _link$1(user, new IdpCredential(params), params.bypassAuthState);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\r\n * events\r\n */\r\nclass AbstractPopupRedirectOperation {\r\n    constructor(auth, filter, resolver, user, bypassAuthState = false) {\r\n        this.auth = auth;\r\n        this.resolver = resolver;\r\n        this.user = user;\r\n        this.bypassAuthState = bypassAuthState;\r\n        this.pendingPromise = null;\r\n        this.eventManager = null;\r\n        this.filter = Array.isArray(filter) ? filter : [filter];\r\n    }\r\n    execute() {\r\n        return new Promise(async (resolve, reject) => {\r\n            this.pendingPromise = { resolve, reject };\r\n            try {\r\n                this.eventManager = await this.resolver._initialize(this.auth);\r\n                await this.onExecution();\r\n                this.eventManager.registerConsumer(this);\r\n            }\r\n            catch (e) {\r\n                this.reject(e);\r\n            }\r\n        });\r\n    }\r\n    async onAuthEvent(event) {\r\n        const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\r\n        if (error) {\r\n            this.reject(error);\r\n            return;\r\n        }\r\n        const params = {\r\n            auth: this.auth,\r\n            requestUri: urlResponse,\r\n            sessionId: sessionId,\r\n            tenantId: tenantId || undefined,\r\n            postBody: postBody || undefined,\r\n            user: this.user,\r\n            bypassAuthState: this.bypassAuthState\r\n        };\r\n        try {\r\n            this.resolve(await this.getIdpTask(type)(params));\r\n        }\r\n        catch (e) {\r\n            this.reject(e);\r\n        }\r\n    }\r\n    onError(error) {\r\n        this.reject(error);\r\n    }\r\n    getIdpTask(type) {\r\n        switch (type) {\r\n            case \"signInViaPopup\" /* AuthEventType.SIGN_IN_VIA_POPUP */:\r\n            case \"signInViaRedirect\" /* AuthEventType.SIGN_IN_VIA_REDIRECT */:\r\n                return _signIn;\r\n            case \"linkViaPopup\" /* AuthEventType.LINK_VIA_POPUP */:\r\n            case \"linkViaRedirect\" /* AuthEventType.LINK_VIA_REDIRECT */:\r\n                return _link;\r\n            case \"reauthViaPopup\" /* AuthEventType.REAUTH_VIA_POPUP */:\r\n            case \"reauthViaRedirect\" /* AuthEventType.REAUTH_VIA_REDIRECT */:\r\n                return _reauth;\r\n            default:\r\n                _fail(this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    resolve(cred) {\r\n        debugAssert(this.pendingPromise, 'Pending promise was never set');\r\n        this.pendingPromise.resolve(cred);\r\n        this.unregisterAndCleanUp();\r\n    }\r\n    reject(error) {\r\n        debugAssert(this.pendingPromise, 'Pending promise was never set');\r\n        this.pendingPromise.reject(error);\r\n        this.unregisterAndCleanUp();\r\n    }\r\n    unregisterAndCleanUp() {\r\n        if (this.eventManager) {\r\n            this.eventManager.unregisterConsumer(this);\r\n        }\r\n        this.pendingPromise = null;\r\n        this.cleanUp();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\r\n/**\r\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\r\n *\r\n * @remarks\r\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\r\n * unsuccessful, returns an error object containing additional information about the error.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function signInWithPopup(auth, provider, resolver) {\r\n    const authInternal = _castAuth(auth);\r\n    _assertInstanceOf(auth, provider, FederatedAuthProvider);\r\n    const resolverInternal = _withDefaultResolver(authInternal, resolver);\r\n    const action = new PopupOperation(authInternal, \"signInViaPopup\" /* AuthEventType.SIGN_IN_VIA_POPUP */, provider, resolverInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\r\n * OAuth flow.\r\n *\r\n * @remarks\r\n * If the reauthentication is successful, the returned result will contain the user and the\r\n * provider's credential.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n * // Reauthenticate using a popup.\r\n * await reauthenticateWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithPopup(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    const action = new PopupOperation(userInternal.auth, \"reauthViaPopup\" /* AuthEventType.REAUTH_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\r\n *\r\n * @remarks\r\n * If the linking is successful, the returned result will contain the user and the provider's credential.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function linkWithPopup(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    const action = new PopupOperation(userInternal.auth, \"linkViaPopup\" /* AuthEventType.LINK_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\r\n * events\r\n *\r\n */\r\nclass PopupOperation extends AbstractPopupRedirectOperation {\r\n    constructor(auth, filter, provider, resolver, user) {\r\n        super(auth, filter, resolver, user);\r\n        this.provider = provider;\r\n        this.authWindow = null;\r\n        this.pollId = null;\r\n        if (PopupOperation.currentPopupAction) {\r\n            PopupOperation.currentPopupAction.cancel();\r\n        }\r\n        PopupOperation.currentPopupAction = this;\r\n    }\r\n    async executeNotNull() {\r\n        const result = await this.execute();\r\n        _assert(result, this.auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        return result;\r\n    }\r\n    async onExecution() {\r\n        debugAssert(this.filter.length === 1, 'Popup operations only handle one event');\r\n        const eventId = _generateEventId();\r\n        this.authWindow = await this.resolver._openPopup(this.auth, this.provider, this.filter[0], // There's always one, see constructor\r\n        eventId);\r\n        this.authWindow.associatedEvent = eventId;\r\n        // Check for web storage support and origin validation _after_ the popup is\r\n        // loaded. These operations are slow (~1 second or so) Rather than\r\n        // waiting on them before opening the window, optimistically open the popup\r\n        // and check for storage support at the same time. If storage support is\r\n        // not available, this will cause the whole thing to reject properly. It\r\n        // will also close the popup, but since the promise has already rejected,\r\n        // the popup closed by user poll will reject into the void.\r\n        this.resolver._originValidation(this.auth).catch(e => {\r\n            this.reject(e);\r\n        });\r\n        this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\r\n            if (!isSupported) {\r\n                this.reject(_createError(this.auth, \"web-storage-unsupported\" /* AuthErrorCode.WEB_STORAGE_UNSUPPORTED */));\r\n            }\r\n        });\r\n        // Handle user closure. Notice this does *not* use await\r\n        this.pollUserCancellation();\r\n    }\r\n    get eventId() {\r\n        var _a;\r\n        return ((_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.associatedEvent) || null;\r\n    }\r\n    cancel() {\r\n        this.reject(_createError(this.auth, \"cancelled-popup-request\" /* AuthErrorCode.EXPIRED_POPUP_REQUEST */));\r\n    }\r\n    cleanUp() {\r\n        if (this.authWindow) {\r\n            this.authWindow.close();\r\n        }\r\n        if (this.pollId) {\r\n            window.clearTimeout(this.pollId);\r\n        }\r\n        this.authWindow = null;\r\n        this.pollId = null;\r\n        PopupOperation.currentPopupAction = null;\r\n    }\r\n    pollUserCancellation() {\r\n        const poll = () => {\r\n            var _a, _b;\r\n            if ((_b = (_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.window) === null || _b === void 0 ? void 0 : _b.closed) {\r\n                // Make sure that there is sufficient time for whatever action to\r\n                // complete. The window could have closed but the sign in network\r\n                // call could still be in flight. This is specifically true for\r\n                // Firefox or if the opener is in an iframe, in which case the oauth\r\n                // helper closes the popup.\r\n                this.pollId = window.setTimeout(() => {\r\n                    this.pollId = null;\r\n                    this.reject(_createError(this.auth, \"popup-closed-by-user\" /* AuthErrorCode.POPUP_CLOSED_BY_USER */));\r\n                }, 8000 /* _Timeout.AUTH_EVENT */);\r\n                return;\r\n            }\r\n            this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\r\n        };\r\n        poll();\r\n    }\r\n}\r\n// Only one popup is ever shown at once. The lifecycle of the current popup\r\n// can be managed / cancelled by the constructor.\r\nPopupOperation.currentPopupAction = null;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\r\n// We only get one redirect outcome for any one auth, so just store it\r\n// in here.\r\nconst redirectOutcomeMap = new Map();\r\nclass RedirectAction extends AbstractPopupRedirectOperation {\r\n    constructor(auth, resolver, bypassAuthState = false) {\r\n        super(auth, [\r\n            \"signInViaRedirect\" /* AuthEventType.SIGN_IN_VIA_REDIRECT */,\r\n            \"linkViaRedirect\" /* AuthEventType.LINK_VIA_REDIRECT */,\r\n            \"reauthViaRedirect\" /* AuthEventType.REAUTH_VIA_REDIRECT */,\r\n            \"unknown\" /* AuthEventType.UNKNOWN */\r\n        ], resolver, undefined, bypassAuthState);\r\n        this.eventId = null;\r\n    }\r\n    /**\r\n     * Override the execute function; if we already have a redirect result, then\r\n     * just return it.\r\n     */\r\n    async execute() {\r\n        let readyOutcome = redirectOutcomeMap.get(this.auth._key());\r\n        if (!readyOutcome) {\r\n            try {\r\n                const hasPendingRedirect = await _getAndClearPendingRedirectStatus(this.resolver, this.auth);\r\n                const result = hasPendingRedirect ? await super.execute() : null;\r\n                readyOutcome = () => Promise.resolve(result);\r\n            }\r\n            catch (e) {\r\n                readyOutcome = () => Promise.reject(e);\r\n            }\r\n            redirectOutcomeMap.set(this.auth._key(), readyOutcome);\r\n        }\r\n        // If we're not bypassing auth state, the ready outcome should be set to\r\n        // null.\r\n        if (!this.bypassAuthState) {\r\n            redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\r\n        }\r\n        return readyOutcome();\r\n    }\r\n    async onAuthEvent(event) {\r\n        if (event.type === \"signInViaRedirect\" /* AuthEventType.SIGN_IN_VIA_REDIRECT */) {\r\n            return super.onAuthEvent(event);\r\n        }\r\n        else if (event.type === \"unknown\" /* AuthEventType.UNKNOWN */) {\r\n            // This is a sentinel value indicating there's no pending redirect\r\n            this.resolve(null);\r\n            return;\r\n        }\r\n        if (event.eventId) {\r\n            const user = await this.auth._redirectUserForId(event.eventId);\r\n            if (user) {\r\n                this.user = user;\r\n                return super.onAuthEvent(event);\r\n            }\r\n            else {\r\n                this.resolve(null);\r\n            }\r\n        }\r\n    }\r\n    async onExecution() { }\r\n    cleanUp() { }\r\n}\r\nasync function _getAndClearPendingRedirectStatus(resolver, auth) {\r\n    const key = pendingRedirectKey(auth);\r\n    const persistence = resolverPersistence(resolver);\r\n    if (!(await persistence._isAvailable())) {\r\n        return false;\r\n    }\r\n    const hasPendingRedirect = (await persistence._get(key)) === 'true';\r\n    await persistence._remove(key);\r\n    return hasPendingRedirect;\r\n}\r\nasync function _setPendingRedirectStatus(resolver, auth) {\r\n    return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\r\n}\r\nfunction _clearRedirectOutcomes() {\r\n    redirectOutcomeMap.clear();\r\n}\r\nfunction _overrideRedirectResult(auth, result) {\r\n    redirectOutcomeMap.set(auth._key(), result);\r\n}\r\nfunction resolverPersistence(resolver) {\r\n    return _getInstance(resolver._redirectPersistence);\r\n}\r\nfunction pendingRedirectKey(auth) {\r\n    return _persistenceKeyName(PENDING_REDIRECT_KEY, auth.config.apiKey, auth.name);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Authenticates a Firebase client using a full-page redirect flow.\r\n *\r\n * @remarks\r\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\r\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\r\n * | best practices} when using {@link signInWithRedirect}.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // You can add additional scopes to the provider:\r\n * provider.addScope('user_birthday');\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * // As this API can be used for sign-in, linking and reauthentication,\r\n * // check the operationType to determine what triggered this redirect\r\n * // operation.\r\n * const operationType = result.operationType;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nfunction signInWithRedirect(auth, provider, resolver) {\r\n    return _signInWithRedirect(auth, provider, resolver);\r\n}\r\nasync function _signInWithRedirect(auth, provider, resolver) {\r\n    const authInternal = _castAuth(auth);\r\n    _assertInstanceOf(auth, provider, FederatedAuthProvider);\r\n    // Wait for auth initialization to complete, this will process pending redirects and clear the\r\n    // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\r\n    // redirect and creating a PENDING_REDIRECT_KEY entry.\r\n    await authInternal._initializationPromise;\r\n    const resolverInternal = _withDefaultResolver(authInternal, resolver);\r\n    await _setPendingRedirectStatus(resolverInternal, authInternal);\r\n    return resolverInternal._openRedirect(authInternal, provider, \"signInViaRedirect\" /* AuthEventType.SIGN_IN_VIA_REDIRECT */);\r\n}\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\r\n * @remarks\r\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\r\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\r\n * | best practices} when using {@link reauthenticateWithRedirect}.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * // Reauthenticate using a redirect.\r\n * await reauthenticateWithRedirect(result.user, provider);\r\n * // This will again trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nfunction reauthenticateWithRedirect(user, provider, resolver) {\r\n    return _reauthenticateWithRedirect(user, provider, resolver);\r\n}\r\nasync function _reauthenticateWithRedirect(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    // Wait for auth initialization to complete, this will process pending redirects and clear the\r\n    // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\r\n    // redirect and creating a PENDING_REDIRECT_KEY entry.\r\n    await userInternal.auth._initializationPromise;\r\n    // Allow the resolver to error before persisting the redirect user\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\r\n    const eventId = await prepareUserForRedirect(userInternal);\r\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"reauthViaRedirect\" /* AuthEventType.REAUTH_VIA_REDIRECT */, eventId);\r\n}\r\n/**\r\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\r\n * @remarks\r\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\r\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\r\n * | best practices} when using {@link linkWithRedirect}.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithRedirect(result.user, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nfunction linkWithRedirect(user, provider, resolver) {\r\n    return _linkWithRedirect(user, provider, resolver);\r\n}\r\nasync function _linkWithRedirect(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    // Wait for auth initialization to complete, this will process pending redirects and clear the\r\n    // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\r\n    // redirect and creating a PENDING_REDIRECT_KEY entry.\r\n    await userInternal.auth._initializationPromise;\r\n    // Allow the resolver to error before persisting the redirect user\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    await _assertLinkedStatus(false, userInternal, provider.providerId);\r\n    await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\r\n    const eventId = await prepareUserForRedirect(userInternal);\r\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"linkViaRedirect\" /* AuthEventType.LINK_VIA_REDIRECT */, eventId);\r\n}\r\n/**\r\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\r\n *\r\n * @remarks\r\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\r\n * error. If no redirect operation was called, returns `null`.\r\n *\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // You can add additional scopes to the provider:\r\n * provider.addScope('user_birthday');\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * // As this API can be used for sign-in, linking and reauthentication,\r\n * // check the operationType to determine what triggered this redirect\r\n * // operation.\r\n * const operationType = result.operationType;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function getRedirectResult(auth, resolver) {\r\n    await _castAuth(auth)._initializationPromise;\r\n    return _getRedirectResult(auth, resolver, false);\r\n}\r\nasync function _getRedirectResult(auth, resolverExtern, bypassAuthState = false) {\r\n    const authInternal = _castAuth(auth);\r\n    const resolver = _withDefaultResolver(authInternal, resolverExtern);\r\n    const action = new RedirectAction(authInternal, resolver, bypassAuthState);\r\n    const result = await action.execute();\r\n    if (result && !bypassAuthState) {\r\n        delete result.user._redirectEventId;\r\n        await authInternal._persistUserIfCurrent(result.user);\r\n        await authInternal._setRedirectUser(null, resolverExtern);\r\n    }\r\n    return result;\r\n}\r\nasync function prepareUserForRedirect(user) {\r\n    const eventId = _generateEventId(`${user.uid}:::`);\r\n    user._redirectEventId = eventId;\r\n    await user.auth._setRedirectUser(user);\r\n    await user.auth._persistUserIfCurrent(user);\r\n    return eventId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// The amount of time to store the UIDs of seen events; this is\r\n// set to 10 min by default\r\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\r\nclass AuthEventManager {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.cachedEventUids = new Set();\r\n        this.consumers = new Set();\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n        this.lastProcessedEventTime = Date.now();\r\n    }\r\n    registerConsumer(authEventConsumer) {\r\n        this.consumers.add(authEventConsumer);\r\n        if (this.queuedRedirectEvent &&\r\n            this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)) {\r\n            this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\r\n            this.saveEventToCache(this.queuedRedirectEvent);\r\n            this.queuedRedirectEvent = null;\r\n        }\r\n    }\r\n    unregisterConsumer(authEventConsumer) {\r\n        this.consumers.delete(authEventConsumer);\r\n    }\r\n    onEvent(event) {\r\n        // Check if the event has already been handled\r\n        if (this.hasEventBeenHandled(event)) {\r\n            return false;\r\n        }\r\n        let handled = false;\r\n        this.consumers.forEach(consumer => {\r\n            if (this.isEventForConsumer(event, consumer)) {\r\n                handled = true;\r\n                this.sendToConsumer(event, consumer);\r\n                this.saveEventToCache(event);\r\n            }\r\n        });\r\n        if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\r\n            // If we've already seen a redirect before, or this is a popup event,\r\n            // bail now\r\n            return handled;\r\n        }\r\n        this.hasHandledPotentialRedirect = true;\r\n        // If the redirect wasn't handled, hang on to it\r\n        if (!handled) {\r\n            this.queuedRedirectEvent = event;\r\n            handled = true;\r\n        }\r\n        return handled;\r\n    }\r\n    sendToConsumer(event, consumer) {\r\n        var _a;\r\n        if (event.error && !isNullRedirectEvent(event)) {\r\n            const code = ((_a = event.error.code) === null || _a === void 0 ? void 0 : _a.split('auth/')[1]) ||\r\n                \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */;\r\n            consumer.onError(_createError(this.auth, code));\r\n        }\r\n        else {\r\n            consumer.onAuthEvent(event);\r\n        }\r\n    }\r\n    isEventForConsumer(event, consumer) {\r\n        const eventIdMatches = consumer.eventId === null ||\r\n            (!!event.eventId && event.eventId === consumer.eventId);\r\n        return consumer.filter.includes(event.type) && eventIdMatches;\r\n    }\r\n    hasEventBeenHandled(event) {\r\n        if (Date.now() - this.lastProcessedEventTime >=\r\n            EVENT_DUPLICATION_CACHE_DURATION_MS) {\r\n            this.cachedEventUids.clear();\r\n        }\r\n        return this.cachedEventUids.has(eventUid(event));\r\n    }\r\n    saveEventToCache(event) {\r\n        this.cachedEventUids.add(eventUid(event));\r\n        this.lastProcessedEventTime = Date.now();\r\n    }\r\n}\r\nfunction eventUid(e) {\r\n    return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\r\n}\r\nfunction isNullRedirectEvent({ type, error }) {\r\n    return (type === \"unknown\" /* AuthEventType.UNKNOWN */ &&\r\n        (error === null || error === void 0 ? void 0 : error.code) === `auth/${\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */}`);\r\n}\r\nfunction isRedirectEvent(event) {\r\n    switch (event.type) {\r\n        case \"signInViaRedirect\" /* AuthEventType.SIGN_IN_VIA_REDIRECT */:\r\n        case \"linkViaRedirect\" /* AuthEventType.LINK_VIA_REDIRECT */:\r\n        case \"reauthViaRedirect\" /* AuthEventType.REAUTH_VIA_REDIRECT */:\r\n            return true;\r\n        case \"unknown\" /* AuthEventType.UNKNOWN */:\r\n            return isNullRedirectEvent(event);\r\n        default:\r\n            return false;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _getProjectConfig(auth, request = {}) {\r\n    return _performApiRequest(auth, \"GET\" /* HttpMethod.GET */, \"/v1/projects\" /* Endpoint.GET_PROJECT_CONFIG */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\r\nconst HTTP_REGEX = /^https?/;\r\nasync function _validateOrigin(auth) {\r\n    // Skip origin validation if we are in an emulated environment\r\n    if (auth.config.emulator) {\r\n        return;\r\n    }\r\n    const { authorizedDomains } = await _getProjectConfig(auth);\r\n    for (const domain of authorizedDomains) {\r\n        try {\r\n            if (matchDomain(domain)) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing if there's a URL error; just continue searching\r\n        }\r\n    }\r\n    // In the old SDK, this error also provides helpful messages.\r\n    _fail(auth, \"unauthorized-domain\" /* AuthErrorCode.INVALID_ORIGIN */);\r\n}\r\nfunction matchDomain(expected) {\r\n    const currentUrl = _getCurrentUrl();\r\n    const { protocol, hostname } = new URL(currentUrl);\r\n    if (expected.startsWith('chrome-extension://')) {\r\n        const ceUrl = new URL(expected);\r\n        if (ceUrl.hostname === '' && hostname === '') {\r\n            // For some reason we're not parsing chrome URLs properly\r\n            return (protocol === 'chrome-extension:' &&\r\n                expected.replace('chrome-extension://', '') ===\r\n                    currentUrl.replace('chrome-extension://', ''));\r\n        }\r\n        return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\r\n    }\r\n    if (!HTTP_REGEX.test(protocol)) {\r\n        return false;\r\n    }\r\n    if (IP_ADDRESS_REGEX.test(expected)) {\r\n        // The domain has to be exactly equal to the pattern, as an IP domain will\r\n        // only contain the IP, no extra character.\r\n        return hostname === expected;\r\n    }\r\n    // Dots in pattern should be escaped.\r\n    const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\r\n    // Non ip address domains.\r\n    // domain.com = *.domain.com OR domain.com\r\n    const re = new RegExp('^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$', 'i');\r\n    return re.test(hostname);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\r\n/**\r\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\r\n * it will stop working after a retrial. This is a hack to fix this issue.\r\n */\r\nfunction resetUnloadedGapiModules() {\r\n    // Clear last failed gapi.load state to force next gapi.load to first\r\n    // load the failed gapi.iframes module.\r\n    // Get gapix.beacon context.\r\n    const beacon = _window().___jsl;\r\n    // Get current hint.\r\n    if (beacon === null || beacon === void 0 ? void 0 : beacon.H) {\r\n        // Get gapi hint.\r\n        for (const hint of Object.keys(beacon.H)) {\r\n            // Requested modules.\r\n            beacon.H[hint].r = beacon.H[hint].r || [];\r\n            // Loaded modules.\r\n            beacon.H[hint].L = beacon.H[hint].L || [];\r\n            // Set requested modules to a copy of the loaded modules.\r\n            beacon.H[hint].r = [...beacon.H[hint].L];\r\n            // Clear pending callbacks.\r\n            if (beacon.CP) {\r\n                for (let i = 0; i < beacon.CP.length; i++) {\r\n                    // Remove all failed pending callbacks.\r\n                    beacon.CP[i] = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction loadGapi(auth) {\r\n    return new Promise((resolve, reject) => {\r\n        var _a, _b, _c;\r\n        // Function to run when gapi.load is ready.\r\n        function loadGapiIframe() {\r\n            // The developer may have tried to previously run gapi.load and failed.\r\n            // Run this to fix that.\r\n            resetUnloadedGapiModules();\r\n            gapi.load('gapi.iframes', {\r\n                callback: () => {\r\n                    resolve(gapi.iframes.getContext());\r\n                },\r\n                ontimeout: () => {\r\n                    // The above reset may be sufficient, but having this reset after\r\n                    // failure ensures that if the developer calls gapi.load after the\r\n                    // connection is re-established and before another attempt to embed\r\n                    // the iframe, it would work and would not be broken because of our\r\n                    // failed attempt.\r\n                    // Timeout when gapi.iframes.Iframe not loaded.\r\n                    resetUnloadedGapiModules();\r\n                    reject(_createError(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\r\n                },\r\n                timeout: NETWORK_TIMEOUT.get()\r\n            });\r\n        }\r\n        if ((_b = (_a = _window().gapi) === null || _a === void 0 ? void 0 : _a.iframes) === null || _b === void 0 ? void 0 : _b.Iframe) {\r\n            // If gapi.iframes.Iframe available, resolve.\r\n            resolve(gapi.iframes.getContext());\r\n        }\r\n        else if (!!((_c = _window().gapi) === null || _c === void 0 ? void 0 : _c.load)) {\r\n            // Gapi loader ready, load gapi.iframes.\r\n            loadGapiIframe();\r\n        }\r\n        else {\r\n            // Create a new iframe callback when this is called so as not to overwrite\r\n            // any previous defined callback. This happens if this method is called\r\n            // multiple times in parallel and could result in the later callback\r\n            // overwriting the previous one. This would end up with a iframe\r\n            // timeout.\r\n            const cbName = _generateCallbackName('iframefcb');\r\n            // GApi loader not available, dynamically load platform.js.\r\n            _window()[cbName] = () => {\r\n                // GApi loader should be ready.\r\n                if (!!gapi.load) {\r\n                    loadGapiIframe();\r\n                }\r\n                else {\r\n                    // Gapi loader failed, throw error.\r\n                    reject(_createError(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */));\r\n                }\r\n            };\r\n            // Load GApi loader.\r\n            return _loadJS(`https://apis.google.com/js/api.js?onload=${cbName}`)\r\n                .catch(e => reject(e));\r\n        }\r\n    }).catch(error => {\r\n        // Reset cached promise to allow for retrial.\r\n        cachedGApiLoader = null;\r\n        throw error;\r\n    });\r\n}\r\nlet cachedGApiLoader = null;\r\nfunction _loadGapi(auth) {\r\n    cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\r\n    return cachedGApiLoader;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PING_TIMEOUT = new Delay(5000, 15000);\r\nconst IFRAME_PATH = '__/auth/iframe';\r\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\r\nconst IFRAME_ATTRIBUTES = {\r\n    style: {\r\n        position: 'absolute',\r\n        top: '-100px',\r\n        width: '1px',\r\n        height: '1px'\r\n    },\r\n    'aria-hidden': 'true',\r\n    tabindex: '-1'\r\n};\r\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\r\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\r\nconst EID_FROM_APIHOST = new Map([\r\n    [\"identitytoolkit.googleapis.com\" /* DefaultConfig.API_HOST */, 'p'],\r\n    ['staging-identitytoolkit.sandbox.googleapis.com', 's'],\r\n    ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\r\n]);\r\nfunction getIframeUrl(auth) {\r\n    const config = auth.config;\r\n    _assert(config.authDomain, auth, \"auth-domain-config-required\" /* AuthErrorCode.MISSING_AUTH_DOMAIN */);\r\n    const url = config.emulator\r\n        ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\r\n        : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\r\n    const params = {\r\n        apiKey: config.apiKey,\r\n        appName: auth.name,\r\n        v: SDK_VERSION\r\n    };\r\n    const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\r\n    if (eid) {\r\n        params.eid = eid;\r\n    }\r\n    const frameworks = auth._getFrameworks();\r\n    if (frameworks.length) {\r\n        params.fw = frameworks.join(',');\r\n    }\r\n    return `${url}?${querystring(params).slice(1)}`;\r\n}\r\nasync function _openIframe(auth) {\r\n    const context = await _loadGapi(auth);\r\n    const gapi = _window().gapi;\r\n    _assert(gapi, auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n    return context.open({\r\n        where: document.body,\r\n        url: getIframeUrl(auth),\r\n        messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\r\n        attributes: IFRAME_ATTRIBUTES,\r\n        dontclear: true\r\n    }, (iframe) => new Promise(async (resolve, reject) => {\r\n        await iframe.restyle({\r\n            // Prevent iframe from closing on mouse out.\r\n            setHideOnLeave: false\r\n        });\r\n        const networkError = _createError(auth, \"network-request-failed\" /* AuthErrorCode.NETWORK_REQUEST_FAILED */);\r\n        // Confirm iframe is correctly loaded.\r\n        // To fallback on failure, set a timeout.\r\n        const networkErrorTimer = _window().setTimeout(() => {\r\n            reject(networkError);\r\n        }, PING_TIMEOUT.get());\r\n        // Clear timer and resolve pending iframe ready promise.\r\n        function clearTimerAndResolve() {\r\n            _window().clearTimeout(networkErrorTimer);\r\n            resolve(iframe);\r\n        }\r\n        // This returns an IThenable. However the reject part does not call\r\n        // when the iframe is not loaded.\r\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\r\n            reject(networkError);\r\n        });\r\n    }));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst BASE_POPUP_OPTIONS = {\r\n    location: 'yes',\r\n    resizable: 'yes',\r\n    statusbar: 'yes',\r\n    toolbar: 'no'\r\n};\r\nconst DEFAULT_WIDTH = 500;\r\nconst DEFAULT_HEIGHT = 600;\r\nconst TARGET_BLANK = '_blank';\r\nconst FIREFOX_EMPTY_URL = 'http://localhost';\r\nclass AuthPopup {\r\n    constructor(window) {\r\n        this.window = window;\r\n        this.associatedEvent = null;\r\n    }\r\n    close() {\r\n        if (this.window) {\r\n            try {\r\n                this.window.close();\r\n            }\r\n            catch (e) { }\r\n        }\r\n    }\r\n}\r\nfunction _open(auth, url, name, width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\r\n    const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\r\n    const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\r\n    let target = '';\r\n    const options = Object.assign(Object.assign({}, BASE_POPUP_OPTIONS), { width: width.toString(), height: height.toString(), top,\r\n        left });\r\n    // Chrome iOS 7 and 8 is returning an undefined popup win when target is\r\n    // specified, even though the popup is not necessarily blocked.\r\n    const ua = getUA().toLowerCase();\r\n    if (name) {\r\n        target = _isChromeIOS(ua) ? TARGET_BLANK : name;\r\n    }\r\n    if (_isFirefox(ua)) {\r\n        // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\r\n        url = url || FIREFOX_EMPTY_URL;\r\n        // Firefox disables by default scrolling on popup windows, which can create\r\n        // issues when the user has many Google accounts, for instance.\r\n        options.scrollbars = 'yes';\r\n    }\r\n    const optionsString = Object.entries(options).reduce((accum, [key, value]) => `${accum}${key}=${value},`, '');\r\n    if (_isIOSStandalone(ua) && target !== '_self') {\r\n        openAsNewWindowIOS(url || '', target);\r\n        return new AuthPopup(null);\r\n    }\r\n    // about:blank getting sanitized causing browsers like IE/Edge to display\r\n    // brief error message before redirecting to handler.\r\n    const newWin = window.open(url || '', target, optionsString);\r\n    _assert(newWin, auth, \"popup-blocked\" /* AuthErrorCode.POPUP_BLOCKED */);\r\n    // Flaky on IE edge, encapsulate with a try and catch.\r\n    try {\r\n        newWin.focus();\r\n    }\r\n    catch (e) { }\r\n    return new AuthPopup(newWin);\r\n}\r\nfunction openAsNewWindowIOS(url, target) {\r\n    const el = document.createElement('a');\r\n    el.href = url;\r\n    el.target = target;\r\n    const click = document.createEvent('MouseEvent');\r\n    click.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 1, null);\r\n    el.dispatchEvent(click);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * URL for Authentication widget which will initiate the OAuth handshake\r\n *\r\n * @internal\r\n */\r\nconst WIDGET_PATH = '__/auth/handler';\r\n/**\r\n * URL for emulated environment\r\n *\r\n * @internal\r\n */\r\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\r\n/**\r\n * Fragment name for the App Check token that gets passed to the widget\r\n *\r\n * @internal\r\n */\r\nconst FIREBASE_APP_CHECK_FRAGMENT_ID = encodeURIComponent('fac');\r\nasync function _getRedirectUrl(auth, provider, authType, redirectUrl, eventId, additionalParams) {\r\n    _assert(auth.config.authDomain, auth, \"auth-domain-config-required\" /* AuthErrorCode.MISSING_AUTH_DOMAIN */);\r\n    _assert(auth.config.apiKey, auth, \"invalid-api-key\" /* AuthErrorCode.INVALID_API_KEY */);\r\n    const params = {\r\n        apiKey: auth.config.apiKey,\r\n        appName: auth.name,\r\n        authType,\r\n        redirectUrl,\r\n        v: SDK_VERSION,\r\n        eventId\r\n    };\r\n    if (provider instanceof FederatedAuthProvider) {\r\n        provider.setDefaultLanguage(auth.languageCode);\r\n        params.providerId = provider.providerId || '';\r\n        if (!isEmpty(provider.getCustomParameters())) {\r\n            params.customParameters = JSON.stringify(provider.getCustomParameters());\r\n        }\r\n        // TODO set additionalParams from the provider as well?\r\n        for (const [key, value] of Object.entries(additionalParams || {})) {\r\n            params[key] = value;\r\n        }\r\n    }\r\n    if (provider instanceof BaseOAuthProvider) {\r\n        const scopes = provider.getScopes().filter(scope => scope !== '');\r\n        if (scopes.length > 0) {\r\n            params.scopes = scopes.join(',');\r\n        }\r\n    }\r\n    if (auth.tenantId) {\r\n        params.tid = auth.tenantId;\r\n    }\r\n    // TODO: maybe set eid as endipointId\r\n    // TODO: maybe set fw as Frameworks.join(\",\")\r\n    const paramsDict = params;\r\n    for (const key of Object.keys(paramsDict)) {\r\n        if (paramsDict[key] === undefined) {\r\n            delete paramsDict[key];\r\n        }\r\n    }\r\n    // Sets the App Check token to pass to the widget\r\n    const appCheckToken = await auth._getAppCheckToken();\r\n    const appCheckTokenFragment = appCheckToken\r\n        ? `#${FIREBASE_APP_CHECK_FRAGMENT_ID}=${encodeURIComponent(appCheckToken)}`\r\n        : '';\r\n    // Start at index 1 to skip the leading '&' in the query string\r\n    return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(1)}${appCheckTokenFragment}`;\r\n}\r\nfunction getHandlerBase({ config }) {\r\n    if (!config.emulator) {\r\n        return `https://${config.authDomain}/${WIDGET_PATH}`;\r\n    }\r\n    return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The special web storage event\r\n *\r\n */\r\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\r\nclass BrowserPopupRedirectResolver {\r\n    constructor() {\r\n        this.eventManagers = {};\r\n        this.iframes = {};\r\n        this.originValidationPromises = {};\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    // Wrapping in async even though we don't await anywhere in order\r\n    // to make sure errors are raised as promise rejections\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        var _a;\r\n        debugAssert((_a = this.eventManagers[auth._key()]) === null || _a === void 0 ? void 0 : _a.manager, '_initialize() not called before _openPopup()');\r\n        const url = await _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId);\r\n        return _open(auth, url, _generateEventId());\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this._originValidation(auth);\r\n        const url = await _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId);\r\n        _setWindowLocation(url);\r\n        return new Promise(() => { });\r\n    }\r\n    _initialize(auth) {\r\n        const key = auth._key();\r\n        if (this.eventManagers[key]) {\r\n            const { manager, promise } = this.eventManagers[key];\r\n            if (manager) {\r\n                return Promise.resolve(manager);\r\n            }\r\n            else {\r\n                debugAssert(promise, 'If manager is not set, promise should be');\r\n                return promise;\r\n            }\r\n        }\r\n        const promise = this.initAndGetManager(auth);\r\n        this.eventManagers[key] = { promise };\r\n        // If the promise is rejected, the key should be removed so that the\r\n        // operation can be retried later.\r\n        promise.catch(() => {\r\n            delete this.eventManagers[key];\r\n        });\r\n        return promise;\r\n    }\r\n    async initAndGetManager(auth) {\r\n        const iframe = await _openIframe(auth);\r\n        const manager = new AuthEventManager(auth);\r\n        iframe.register('authEvent', (iframeEvent) => {\r\n            _assert(iframeEvent === null || iframeEvent === void 0 ? void 0 : iframeEvent.authEvent, auth, \"invalid-auth-event\" /* AuthErrorCode.INVALID_AUTH_EVENT */);\r\n            // TODO: Consider splitting redirect and popup events earlier on\r\n            const handled = manager.onEvent(iframeEvent.authEvent);\r\n            return { status: handled ? \"ACK\" /* GapiOutcome.ACK */ : \"ERROR\" /* GapiOutcome.ERROR */ };\r\n        }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\r\n        this.eventManagers[auth._key()] = { manager };\r\n        this.iframes[auth._key()] = iframe;\r\n        return manager;\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        const iframe = this.iframes[auth._key()];\r\n        iframe.send(WEB_STORAGE_SUPPORT_KEY, { type: WEB_STORAGE_SUPPORT_KEY }, result => {\r\n            var _a;\r\n            const isSupported = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a[WEB_STORAGE_SUPPORT_KEY];\r\n            if (isSupported !== undefined) {\r\n                cb(!!isSupported);\r\n            }\r\n            _fail(auth, \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    get _shouldInitProactively() {\r\n        // Mobile browsers and Safari need to optimistically initialize\r\n        return _isMobileBrowser() || _isSafari() || _isIOS();\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for browser\r\n * based applications.\r\n *\r\n * @remarks\r\n * This method does not work in a Node.js environment.\r\n *\r\n * @public\r\n */\r\nconst browserPopupRedirectResolver = BrowserPopupRedirectResolver;\n\nclass MultiFactorAssertionImpl {\r\n    constructor(factorId) {\r\n        this.factorId = factorId;\r\n    }\r\n    _process(auth, session, displayName) {\r\n        switch (session.type) {\r\n            case \"enroll\" /* MultiFactorSessionType.ENROLL */:\r\n                return this._finalizeEnroll(auth, session.credential, displayName);\r\n            case \"signin\" /* MultiFactorSessionType.SIGN_IN */:\r\n                return this._finalizeSignIn(auth, session.credential);\r\n            default:\r\n                return debugFail('unexpected MultiFactorSessionType');\r\n        }\r\n    }\r\n}\n\n/**\r\n * {@inheritdoc PhoneMultiFactorAssertion}\r\n *\r\n * @public\r\n */\r\nclass PhoneMultiFactorAssertionImpl extends MultiFactorAssertionImpl {\r\n    constructor(credential) {\r\n        super(\"phone\" /* FactorId.PHONE */);\r\n        this.credential = credential;\r\n    }\r\n    /** @internal */\r\n    static _fromCredential(credential) {\r\n        return new PhoneMultiFactorAssertionImpl(credential);\r\n    }\r\n    /** @internal */\r\n    _finalizeEnroll(auth, idToken, displayName) {\r\n        return finalizeEnrollPhoneMfa(auth, {\r\n            idToken,\r\n            displayName,\r\n            phoneVerificationInfo: this.credential._makeVerificationRequest()\r\n        });\r\n    }\r\n    /** @internal */\r\n    _finalizeSignIn(auth, mfaPendingCredential) {\r\n        return finalizeSignInPhoneMfa(auth, {\r\n            mfaPendingCredential,\r\n            phoneVerificationInfo: this.credential._makeVerificationRequest()\r\n        });\r\n    }\r\n}\r\n/**\r\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\r\n *\r\n * @public\r\n */\r\nclass PhoneMultiFactorGenerator {\r\n    constructor() { }\r\n    /**\r\n     * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\r\n     *\r\n     * @remarks\r\n     * This method does not work in a Node.js environment.\r\n     *\r\n     * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\r\n     * @returns A {@link PhoneMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorResolver.resolveSignIn}\r\n     */\r\n    static assertion(credential) {\r\n        return PhoneMultiFactorAssertionImpl._fromCredential(credential);\r\n    }\r\n}\r\n/**\r\n * The identifier of the phone second factor: `phone`.\r\n */\r\nPhoneMultiFactorGenerator.FACTOR_ID = 'phone';\n\n/**\r\n * Provider for generating a {@link TotpMultiFactorAssertion}.\r\n *\r\n * @public\r\n */\r\nclass TotpMultiFactorGenerator {\r\n    /**\r\n     * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\r\n     * the TOTP (time-based one-time password) second factor.\r\n     * This assertion is used to complete enrollment in TOTP second factor.\r\n     *\r\n     * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\r\n     * @param oneTimePassword One-time password from TOTP App.\r\n     * @returns A {@link TotpMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorUser.enroll}.\r\n     */\r\n    static assertionForEnrollment(secret, oneTimePassword) {\r\n        return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\r\n    }\r\n    /**\r\n     * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\r\n     * This assertion is used to complete signIn with TOTP as the second factor.\r\n     *\r\n     * @param enrollmentId identifies the enrolled TOTP second factor.\r\n     * @param oneTimePassword One-time password from TOTP App.\r\n     * @returns A {@link TotpMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorResolver.resolveSignIn}.\r\n     */\r\n    static assertionForSignIn(enrollmentId, oneTimePassword) {\r\n        return TotpMultiFactorAssertionImpl._fromEnrollmentId(enrollmentId, oneTimePassword);\r\n    }\r\n    /**\r\n     * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\r\n     * Creates a TOTP secret as part of enrolling a TOTP second factor.\r\n     * Used for generating a QR code URL or inputting into a TOTP app.\r\n     * This method uses the auth instance corresponding to the user in the multiFactorSession.\r\n     *\r\n     * @param session The {@link MultiFactorSession} that the user is part of.\r\n     * @returns A promise to {@link TotpSecret}.\r\n     */\r\n    static async generateSecret(session) {\r\n        var _a;\r\n        const mfaSession = session;\r\n        _assert(typeof ((_a = mfaSession.user) === null || _a === void 0 ? void 0 : _a.auth) !== 'undefined', \"internal-error\" /* AuthErrorCode.INTERNAL_ERROR */);\r\n        const response = await startEnrollTotpMfa(mfaSession.user.auth, {\r\n            idToken: mfaSession.credential,\r\n            totpEnrollmentInfo: {}\r\n        });\r\n        return TotpSecret._fromStartTotpMfaEnrollmentResponse(response, mfaSession.user.auth);\r\n    }\r\n}\r\n/**\r\n * The identifier of the TOTP second factor: `totp`.\r\n */\r\nTotpMultiFactorGenerator.FACTOR_ID = \"totp\" /* FactorId.TOTP */;\r\nclass TotpMultiFactorAssertionImpl extends MultiFactorAssertionImpl {\r\n    constructor(otp, enrollmentId, secret) {\r\n        super(\"totp\" /* FactorId.TOTP */);\r\n        this.otp = otp;\r\n        this.enrollmentId = enrollmentId;\r\n        this.secret = secret;\r\n    }\r\n    /** @internal */\r\n    static _fromSecret(secret, otp) {\r\n        return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\r\n    }\r\n    /** @internal */\r\n    static _fromEnrollmentId(enrollmentId, otp) {\r\n        return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\r\n    }\r\n    /** @internal */\r\n    async _finalizeEnroll(auth, idToken, displayName) {\r\n        _assert(typeof this.secret !== 'undefined', auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        return finalizeEnrollTotpMfa(auth, {\r\n            idToken,\r\n            displayName,\r\n            totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\r\n        });\r\n    }\r\n    /** @internal */\r\n    async _finalizeSignIn(auth, mfaPendingCredential) {\r\n        _assert(this.enrollmentId !== undefined && this.otp !== undefined, auth, \"argument-error\" /* AuthErrorCode.ARGUMENT_ERROR */);\r\n        const totpVerificationInfo = { verificationCode: this.otp };\r\n        return finalizeSignInTotpMfa(auth, {\r\n            mfaPendingCredential,\r\n            mfaEnrollmentId: this.enrollmentId,\r\n            totpVerificationInfo\r\n        });\r\n    }\r\n}\r\n/**\r\n * Provider for generating a {@link TotpMultiFactorAssertion}.\r\n *\r\n * Stores the shared secret key and other parameters to generate time-based OTPs.\r\n * Implements methods to retrieve the shared secret key and generate a QR code URL.\r\n * @public\r\n */\r\nclass TotpSecret {\r\n    // The public members are declared outside the constructor so the docs can be generated.\r\n    constructor(secretKey, hashingAlgorithm, codeLength, codeIntervalSeconds, enrollmentCompletionDeadline, sessionInfo, auth) {\r\n        this.sessionInfo = sessionInfo;\r\n        this.auth = auth;\r\n        this.secretKey = secretKey;\r\n        this.hashingAlgorithm = hashingAlgorithm;\r\n        this.codeLength = codeLength;\r\n        this.codeIntervalSeconds = codeIntervalSeconds;\r\n        this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\r\n    }\r\n    /** @internal */\r\n    static _fromStartTotpMfaEnrollmentResponse(response, auth) {\r\n        return new TotpSecret(response.totpSessionInfo.sharedSecretKey, response.totpSessionInfo.hashingAlgorithm, response.totpSessionInfo.verificationCodeLength, response.totpSessionInfo.periodSec, new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(), response.totpSessionInfo.sessionInfo, auth);\r\n    }\r\n    /** @internal */\r\n    _makeTotpVerificationInfo(otp) {\r\n        return { sessionInfo: this.sessionInfo, verificationCode: otp };\r\n    }\r\n    /**\r\n     * Returns a QR code URL as described in\r\n     * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\r\n     * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\r\n     * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\r\n     *\r\n     * @param accountName the name of the account/app along with a user identifier.\r\n     * @param issuer issuer of the TOTP (likely the app name).\r\n     * @returns A QR code URL string.\r\n     */\r\n    generateQrCodeUrl(accountName, issuer) {\r\n        var _a;\r\n        let useDefaults = false;\r\n        if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\r\n            useDefaults = true;\r\n        }\r\n        if (useDefaults) {\r\n            if (_isEmptyString(accountName)) {\r\n                accountName = ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.email) || 'unknownuser';\r\n            }\r\n            if (_isEmptyString(issuer)) {\r\n                issuer = this.auth.name;\r\n            }\r\n        }\r\n        return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\r\n    }\r\n}\r\n/** @internal */\r\nfunction _isEmptyString(input) {\r\n    return typeof input === 'undefined' || (input === null || input === void 0 ? void 0 : input.length) === 0;\r\n}\n\nvar name = \"@firebase/auth\";\nvar version = \"1.3.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthInterop {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.internalListeners = new Map();\r\n    }\r\n    getUid() {\r\n        var _a;\r\n        this.assertAuthConfigured();\r\n        return ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.uid) || null;\r\n    }\r\n    async getToken(forceRefresh) {\r\n        this.assertAuthConfigured();\r\n        await this.auth._initializationPromise;\r\n        if (!this.auth.currentUser) {\r\n            return null;\r\n        }\r\n        const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\r\n        return { accessToken };\r\n    }\r\n    addAuthTokenListener(listener) {\r\n        this.assertAuthConfigured();\r\n        if (this.internalListeners.has(listener)) {\r\n            return;\r\n        }\r\n        const unsubscribe = this.auth.onIdTokenChanged(user => {\r\n            listener((user === null || user === void 0 ? void 0 : user.stsTokenManager.accessToken) || null);\r\n        });\r\n        this.internalListeners.set(listener, unsubscribe);\r\n        this.updateProactiveRefresh();\r\n    }\r\n    removeAuthTokenListener(listener) {\r\n        this.assertAuthConfigured();\r\n        const unsubscribe = this.internalListeners.get(listener);\r\n        if (!unsubscribe) {\r\n            return;\r\n        }\r\n        this.internalListeners.delete(listener);\r\n        unsubscribe();\r\n        this.updateProactiveRefresh();\r\n    }\r\n    assertAuthConfigured() {\r\n        _assert(this.auth._initializationPromise, \"dependent-sdk-initialized-before-auth\" /* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */);\r\n    }\r\n    updateProactiveRefresh() {\r\n        if (this.internalListeners.size > 0) {\r\n            this.auth._startProactiveRefresh();\r\n        }\r\n        else {\r\n            this.auth._stopProactiveRefresh();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getVersionForPlatform(clientPlatform) {\r\n    switch (clientPlatform) {\r\n        case \"Node\" /* ClientPlatform.NODE */:\r\n            return 'node';\r\n        case \"ReactNative\" /* ClientPlatform.REACT_NATIVE */:\r\n            return 'rn';\r\n        case \"Worker\" /* ClientPlatform.WORKER */:\r\n            return 'webworker';\r\n        case \"Cordova\" /* ClientPlatform.CORDOVA */:\r\n            return 'cordova';\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n/** @internal */\r\nfunction registerAuth(clientPlatform) {\r\n    _registerComponent(new Component(\"auth\" /* _ComponentName.AUTH */, (container, { options: deps }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const heartbeatServiceProvider = container.getProvider('heartbeat');\r\n        const appCheckServiceProvider = container.getProvider('app-check-internal');\r\n        const { apiKey, authDomain } = app.options;\r\n        _assert(apiKey && !apiKey.includes(':'), \"invalid-api-key\" /* AuthErrorCode.INVALID_API_KEY */, { appName: app.name });\r\n        const config = {\r\n            apiKey,\r\n            authDomain,\r\n            clientPlatform,\r\n            apiHost: \"identitytoolkit.googleapis.com\" /* DefaultConfig.API_HOST */,\r\n            tokenApiHost: \"securetoken.googleapis.com\" /* DefaultConfig.TOKEN_API_HOST */,\r\n            apiScheme: \"https\" /* DefaultConfig.API_SCHEME */,\r\n            sdkClientVersion: _getClientVersion(clientPlatform)\r\n        };\r\n        const authInstance = new AuthImpl(app, heartbeatServiceProvider, appCheckServiceProvider, config);\r\n        _initializeAuthInstance(authInstance, deps);\r\n        return authInstance;\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        /**\r\n         * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\r\n         * For why we do this, See go/firebase-next-auth-init\r\n         */\r\n        .setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */)\r\n        /**\r\n         * Because all firebase products that depend on auth depend on auth-internal directly,\r\n         * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\r\n         */\r\n        .setInstanceCreatedCallback((container, _instanceIdentifier, _instance) => {\r\n        const authInternalProvider = container.getProvider(\"auth-internal\" /* _ComponentName.AUTH_INTERNAL */);\r\n        authInternalProvider.initialize();\r\n    }));\r\n    _registerComponent(new Component(\"auth-internal\" /* _ComponentName.AUTH_INTERNAL */, container => {\r\n        const auth = _castAuth(container.getProvider(\"auth\" /* _ComponentName.AUTH */).getImmediate());\r\n        return (auth => new AuthInterop(auth))(auth);\r\n    }, \"PRIVATE\" /* ComponentType.PRIVATE */).setInstantiationMode(\"EXPLICIT\" /* InstantiationMode.EXPLICIT */));\r\n    registerVersion(name, version, getVersionForPlatform(clientPlatform));\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\r\nconst authIdTokenMaxAge = getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\r\nlet lastPostedIdToken = null;\r\nconst mintCookieFactory = (url) => async (user) => {\r\n    const idTokenResult = user && (await user.getIdTokenResult());\r\n    const idTokenAge = idTokenResult &&\r\n        (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1000;\r\n    if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\r\n        return;\r\n    }\r\n    // Specifically trip null => undefined when logged out, to delete any existing cookie\r\n    const idToken = idTokenResult === null || idTokenResult === void 0 ? void 0 : idTokenResult.token;\r\n    if (lastPostedIdToken === idToken) {\r\n        return;\r\n    }\r\n    lastPostedIdToken = idToken;\r\n    await fetch(url, {\r\n        method: idToken ? 'POST' : 'DELETE',\r\n        headers: idToken\r\n            ? {\r\n                'Authorization': `Bearer ${idToken}`\r\n            }\r\n            : {}\r\n    });\r\n};\r\n/**\r\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\r\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\r\n *\r\n * @param app - The Firebase App.\r\n *\r\n * @public\r\n */\r\nfunction getAuth(app = getApp()) {\r\n    const provider = _getProvider(app, 'auth');\r\n    if (provider.isInitialized()) {\r\n        return provider.getImmediate();\r\n    }\r\n    const auth = initializeAuth(app, {\r\n        popupRedirectResolver: browserPopupRedirectResolver,\r\n        persistence: [\r\n            indexedDBLocalPersistence,\r\n            browserLocalPersistence,\r\n            browserSessionPersistence\r\n        ]\r\n    });\r\n    const authTokenSyncUrl = getExperimentalSetting('authTokenSyncURL');\r\n    if (authTokenSyncUrl) {\r\n        const mintCookie = mintCookieFactory(authTokenSyncUrl);\r\n        beforeAuthStateChanged(auth, mintCookie, () => mintCookie(auth.currentUser));\r\n        onIdTokenChanged(auth, user => mintCookie(user));\r\n    }\r\n    const authEmulatorHost = getDefaultEmulatorHost('auth');\r\n    if (authEmulatorHost) {\r\n        connectAuthEmulator(auth, `http://${authEmulatorHost}`);\r\n    }\r\n    return auth;\r\n}\r\nregisterAuth(\"Browser\" /* ClientPlatform.BROWSER */);\n\nexport { signInAnonymously as $, ActionCodeOperation as A, updateCurrentUser as B, signOut as C, deleteUser as D, debugErrorMap as E, FactorId as F, prodErrorMap as G, AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as H, initializeAuth as I, connectAuthEmulator as J, AuthCredential as K, EmailAuthCredential as L, OAuthCredential as M, PhoneAuthCredential as N, OperationType as O, PhoneAuthProvider as P, inMemoryPersistence as Q, RecaptchaVerifier as R, SignInMethod as S, TotpMultiFactorGenerator as T, EmailAuthProvider as U, FacebookAuthProvider as V, GoogleAuthProvider as W, GithubAuthProvider as X, OAuthProvider as Y, SAMLAuthProvider as Z, TwitterAuthProvider as _, browserSessionPersistence as a, signInWithCredential as a0, linkWithCredential as a1, reauthenticateWithCredential as a2, signInWithCustomToken as a3, sendPasswordResetEmail as a4, confirmPasswordReset as a5, applyActionCode as a6, checkActionCode as a7, verifyPasswordResetCode as a8, createUserWithEmailAndPassword as a9, _createError as aA, _assert as aB, AuthEventManager as aC, _getInstance as aD, _persistenceKeyName as aE, _getRedirectResult as aF, _overrideRedirectResult as aG, _clearRedirectOutcomes as aH, _castAuth as aI, UserImpl as aJ, AuthImpl as aK, _getClientVersion as aL, _generateEventId as aM, AuthPopup as aN, FetchProvider as aO, SAMLAuthCredential as aP, signInWithEmailAndPassword as aa, sendSignInLinkToEmail as ab, isSignInWithEmailLink as ac, signInWithEmailLink as ad, fetchSignInMethodsForEmail as ae, sendEmailVerification as af, verifyBeforeUpdateEmail as ag, ActionCodeURL as ah, parseActionCodeURL as ai, updateProfile as aj, updateEmail as ak, updatePassword as al, getIdToken as am, getIdTokenResult as an, unlink as ao, getAdditionalUserInfo as ap, reload as aq, getMultiFactorResolver as ar, multiFactor as as, debugAssert as at, _isIOS as au, _isAndroid as av, _fail as aw, _getRedirectUrl as ax, _getProjectConfig as ay, _isIOS7Or8 as az, browserLocalPersistence as b, signInWithPopup as c, linkWithPopup as d, reauthenticateWithPopup as e, signInWithRedirect as f, linkWithRedirect as g, reauthenticateWithRedirect as h, indexedDBLocalPersistence as i, getRedirectResult as j, browserPopupRedirectResolver as k, linkWithPhoneNumber as l, PhoneMultiFactorGenerator as m, TotpSecret as n, getAuth as o, ProviderId as p, setPersistence as q, reauthenticateWithPhoneNumber as r, signInWithPhoneNumber as s, initializeRecaptchaConfig as t, updatePhoneNumber as u, validatePassword as v, onIdTokenChanged as w, beforeAuthStateChanged as x, onAuthStateChanged as y, useDeviceLanguage as z };\n//# sourceMappingURL=index-94e5f531.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(options = {}) {\n    this.name = InboundFilters.id;\n    this._options = options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_addGlobaleventProcessor, _getCurrentHub) {\n    // noop\n  }\n\n  /** @inheritDoc */\n   processEvent(event, _eventHint, client) {\n    const clientOptions = client.getOptions();\n    const options = _mergeOptions(this._options, clientOptions);\n    return _shouldDropEvent(event, options) ? null : event;\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = FunctionToString.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function ( ...args) {\n        const context = getOriginalFunction(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch (e) {\n      // ignore errors here, just don't patch this\n    }\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","import { arrayify, logger } from '@sentry/utils';\nimport { addGlobalEventProcessor } from './eventProcessors.js';\nimport { getCurrentHub } from './hub.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = getCurrentHub().getClient();\n\n  if (!client || !client.addIntegration) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport { addIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations, setupIntegration } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations(forceInitialize) {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._integrations = setupIntegrations(this, this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    setupIntegration(this, integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n    void this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      // If a trace context is not set on the event, we use the propagationContext set on the event to\n      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we\n      // also generate one for it.\n      const { propagationContext } = evt.sdkProcessingMetadata || {};\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext ;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { BaseClient, SDK_VERSION } from '@sentry/core';\nimport { getSDKSource, logger, createClientReportEnvelope, dsnToString } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: `${sdkSource}:@sentry/browser`,\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n    void this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n    void this._sendEnvelope(envelope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n\n  /** JSDoc */\n   constructor(options) {\n    this.name = GlobalHandlers.id;\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n\n    this._installFunc = {\n      onerror: _installGlobalOnErrorHandler,\n      onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {\n    this.name = TryCatch.id;\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    if (this._options.setTimeout) {\n      fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        .replace(':80', '')\n        .replace(':443', '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, getEventDescription, severityLevelFromString, safeJoin, SENTRY_XHR_DATA_KEY, parseUrl, logger, htmlTreeAsString } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Breadcrumbs';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {\n    this.name = Breadcrumbs.id;\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n    if (this.options.sentry) {\n      const client = getCurrentHub().getClient();\n      client && client.on && client.on('beforeSendEvent', addSentryBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction addSentryBreadcrumb(event) {\n  getCurrentHub().addBreadcrumb(\n    {\n      category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n      event_id: event.event_id,\n      level: event.level,\n      message: getEventDescription(event),\n    },\n    {\n      event,\n    },\n  );\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      target = _isEvent(event)\n        ? htmlTreeAsString(event.target, { keyAttrs, maxStringLength })\n        : htmlTreeAsString(event, { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n  // We only capture complete, non-sentry requests\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return;\n  }\n\n  const { method, url, status_code, body } = sentryXhrData;\n\n  const data = {\n    method,\n    url,\n    status_code,\n  };\n\n  const hint = {\n    xhr: handlerData.xhr,\n    input: body,\n    startTimestamp,\n    endTimestamp,\n  };\n\n  getCurrentHub().addBreadcrumb(\n    {\n      category: 'xhr',\n      data,\n      type: 'http',\n    },\n    hint,\n  );\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  // We only capture complete fetch requests\n  if (!endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    const data = handlerData.fetchData;\n    const hint = {\n      data: handlerData.error,\n      input: handlerData.args,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      },\n      hint,\n    );\n  } else {\n    const data = {\n      ...handlerData.fetchData,\n      status_code: handlerData.response && handlerData.response.status,\n    };\n    const hint = {\n      input: handlerData.args,\n      response: handlerData.response,\n      startTimestamp,\n      endTimestamp,\n    };\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = parseUrl(WINDOW.location.href);\n  let parsedFrom = parseUrl(from);\n  const parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    is_exception_group: true,\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = LinkedErrors.id;\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /** @inheritdoc */\n   setupOnce() {\n    // noop\n  }\n\n  /**\n   * @inheritDoc\n   */\n   preprocessEvent(event, hint, client) {\n    const options = client.getOptions();\n\n    applyAggregateErrorsToEvent(\n      exceptionFromError,\n      options.stackParser,\n      options.maxValueLength,\n      this._key,\n      this._limit,\n      event,\n      hint,\n    );\n  }\n} LinkedErrors.__initStatic();\n\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map\n","import { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = HttpContext.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // noop\n  }\n\n  /** @inheritDoc */\n   preprocessEvent(event) {\n    // if none of the information we want exists, don't bother\n    if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n      return;\n    }\n\n    // grab as much info as exists and add it to the event\n    const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n    const { referrer } = WINDOW.document || {};\n    const { userAgent } = WINDOW.navigator || {};\n\n    const headers = {\n      ...(event.request && event.request.headers),\n      ...(referrer && { Referer: referrer }),\n      ...(userAgent && { 'User-Agent': userAgent }),\n    };\n    const request = { ...event.request, ...(url && { url }), headers };\n\n    event.request = request;\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = Dedupe.id;\n  }\n\n  /** @inheritDoc */\n   setupOnce(_addGlobaleventProcessor, _getCurrentHub) {\n    // noop\n  }\n\n  /**\n   * @inheritDoc\n   */\n   processEvent(currentEvent) {\n    // We want to ignore any non-error type events, e.g. transactions or replays\n    // These should never be deduped, and also not be compared against as _previousEvent.\n    if (currentEvent.type) {\n      return currentEvent;\n    }\n\n    // Juuust in case something goes wrong\n    try {\n      if (_shouldDropEvent(currentEvent, this._previousEvent)) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n        return null;\n      }\n    } catch (_oO) {} // eslint-disable-line no-empty\n\n    return (this._previousEvent = currentEvent);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { isNativeFetch, logger } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\nexport { clearCachedFetchImplementation, getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport { getNativeFetchImplementation, clearCachedFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getReportDialogEndpoint, getCurrentHub } from '@sentry/core';\nimport { stackParserFromStackParserOptions, supportsFetch, logger, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { WINDOW, wrap as wrap$1 } from './helpers.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nconst defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, defaultIntegrations, forceLoad, init, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { getGlobalSingleton, SyncPromise, logger, isThenable } from '@sentry/utils';\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        processor.id &&\n        result === null &&\n        logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\nexport { addGlobalEventProcessor, getGlobalEventProcessors, notifyEventProcessors };\n//# sourceMappingURL=eventProcessors.js.map\n","import { logger, uuid4, timestampInSeconds, isThenable } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, close, configureScope, flush, lastEventId, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withMonitor, withScope };\n//# sourceMappingURL=exports.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      const client = this.getClient();\n      if (!client) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { isPlainObject, dateTimestampInSeconds, arrayify, uuid4 } from '@sentry/utils';\nimport { notifyEventProcessors, getGlobalEventProcessors } from './eventProcessors.js';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(\n    event,\n    hint = {},\n    additionalEventProcessors,\n  ) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    const scopeBreadcrumbs = this._getBreadcrumbs();\n    const breadcrumbs = [...(event.breadcrumbs || []), ...scopeBreadcrumbs];\n    event.breadcrumbs = breadcrumbs.length > 0 ? breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    return notifyEventProcessors(\n      [...(additionalEventProcessors || []), ...getGlobalEventProcessors(), ...this._eventProcessors],\n      event,\n      hint,\n    );\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * Get the breadcrumbs for this scope.\n   */\n   _getBreadcrumbs() {\n    return this._breadcrumbs;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n\nexport { Scope };\n//# sourceMappingURL=scope.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatchs the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\nexport { getDynamicSamplingContextFromClient };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","import { uuid4, dateTimestampInSeconds, resolvedSyncPromise, truncate, GLOBAL_OBJ, normalize } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { notifyEventProcessors, getGlobalEventProcessors } from '../eventProcessors.js';\nimport { Scope } from '../scope.js';\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise(prepared);\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint, clientEventProcessors);\n  } else {\n    // Apply client & global event processors even if there is no scope\n    // TODO (v8): Update the order to be Global > Client\n    result = notifyEventProcessors([...clientEventProcessors, ...getGlobalEventProcessors()], prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nexport { applyDebugIds, applyDebugMeta, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","const SDK_VERSION = '7.76.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { isString } from './is.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    // eslint-disable-next-line no-console\n    console.error(`Invalid Sentry Dsn: ${str}`);\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  // TODO: This is a temporary workaround until we have a proper data category for metrics\n  statsd: 'unknown',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { getGlobalObject } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { isString } from './is.js';\nimport { logger, CONSOLE_LEVELS, originalConsoleMethods } from './logger.js';\nimport { fill, addNonEnumerableProperty } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch } from './supports.js';\nimport { getGlobalObject, GLOBAL_OBJ } from './worldwide.js';\nimport { supportsHistory } from './vendor/supportsHistory.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = Date.now();\n\n      const url = args[1];\n      const xhrInfo = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args ,\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          } );\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs ;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst DEBOUNCE_DURATION = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Check whether two DOM events are similar to eachother. For example, two click events on the same button.\n */\nfunction areSimilarDomEvents(a, b) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (a.target !== b.target) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (lastCapturedEvent === undefined || !areSimilarDomEvents(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEvent = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, instrumentDOM, instrumentXHR, parseFetchArgs, resetInstrumentationHandlers };\n//# sourceMappingURL=instrument.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable, isVueViewModel };\n//# sourceMappingURL=is.js.map\n","import { GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger, originalConsoleMethods };\n//# sourceMappingURL=logger.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => crypto.getRandomValues(new Uint8Array(1))[0];\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { isNaN, isVueViewModel, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { logger } from './logger.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { node } from './node-stack-trace.js';\nexport { filenameIsInApp } from './node-stack-trace.js';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { isVueViewModel, isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict';\n\n/**\n * Module dependenices\n */\n\nconst clone = require('shallow-clone');\nconst typeOf = require('kind-of');\nconst isPlainObject = require('is-plain-object');\n\nfunction cloneDeep(val, instanceClone) {\n  switch (typeOf(val)) {\n    case 'object':\n      return cloneObjectDeep(val, instanceClone);\n    case 'array':\n      return cloneArrayDeep(val, instanceClone);\n    default: {\n      return clone(val);\n    }\n  }\n}\n\nfunction cloneObjectDeep(val, instanceClone) {\n  if (typeof instanceClone === 'function') {\n    return instanceClone(val);\n  }\n  if (instanceClone || isPlainObject(val)) {\n    const res = new val.constructor();\n    for (let key in val) {\n      res[key] = cloneDeep(val[key], instanceClone);\n    }\n    return res;\n  }\n  return val;\n}\n\nfunction cloneArrayDeep(val, instanceClone) {\n  const res = new val.constructor(val.length);\n  for (let i = 0; i < val.length; i++) {\n    res[i] = cloneDeep(val[i], instanceClone);\n  }\n  return res;\n}\n\n/**\n * Expose `cloneDeep`\n */\n\nmodule.exports = cloneDeep;\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return require(\"private-next-pages/_app.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  ","export default {\"src\":\"/_next/static/media/error.75e32b6c.svg\",\"height\":512,\"width\":512,\"blurWidth\":0,\"blurHeight\":0};","export const mapError = (error: any): string => {\n  if (error && typeof error === 'string') {\n    if (error === 'Login') {\n      return 'Your login have expired...'\n    } else if (\n      // This only occurs when the auth server is down and the websocket client cannot refresh the token\n      error === 'Spotty' ||\n      error === 'start received before the connection is initialised' ||\n      error.includes('Malformed Authorization header')\n    ) {\n      return 'Your connection is spotty...'\n    }\n  }\n  return 'An error occurred!'\n}\n","import { css } from '@emotion/react'\nimport { useStoreon } from 'storeon/react'\nimport ErrorImage from '../../assets/common/error.svg'\nimport { clearCache } from '../../helpers/clearCache'\nimport { clearLoginState } from '../../helpers/clearLoginState'\nimport { isBrowser } from '../../helpers/isBrowser'\nimport { logout } from '../../helpers/logout'\nimport { mapError } from '../../helpers/mapError'\nimport { NavbarState } from '../../store/navbar/types'\nimport { colors } from '../../theme'\nimport { Explanation } from '../explanation/Explanation'\nimport { Image } from '../image/Image'\n\nexport const Error = () => {\n  const {\n    navbar,\n  }: {\n    navbar: NavbarState\n  } = useStoreon('navbar')\n\n  const { error } = navbar\n\n  const errorStyling = css`\n    .jumbo {\n      background-color: white;\n      border: 1px solid ${colors.mediumgrey};\n      border-radius: 5px;\n      max-width: 500px;\n      padding: 30px 0;\n      width: 95%;\n    }\n  `\n\n  return (\n    <div css={errorStyling} className={`fcc w100 h100 z3 absolute`}>\n      <div className=\"jumbo fcc\">\n        {/* The images */}\n        <Image width={50} height={50} alt=\"Error\" src={ErrorImage} />\n\n        <div className=\"fcc w100\">\n          {/* The title */}\n          <h2 className=\"mt20 mb15\">{mapError(error)}</h2>\n\n          {/* The subtitle */}\n          <div className=\"mb30 w100\">\n            <div>\n              <h3 className=\"mb10 normal center tcenter w95\">\n                The developers have been notified.\n              </h3>\n              <h3 className=\"mb0 normal center tcenter w95\">\n                Click the refresh button. It may fix it.\n              </h3>\n            </div>\n          </div>\n\n          {/* The button groups */}\n\n          {/* Generic error buttons */}\n          <div className=\"fr\">\n            <button\n              onClick={() => {\n                if (isBrowser()) {\n                  clearCache()\n                  clearLoginState()\n                  window.location.reload()\n                }\n              }}\n              className={` purple normal`}\n            >\n              Refresh the app\n            </button>\n            <button\n              onClick={() => {\n                if (isBrowser()) {\n                  logout()\n                }\n              }}\n              className={`background normal ml10`}\n            >\n              Logout\n            </button>\n          </div>\n\n          {/* Additional error message */}\n          <div>\n            <div className=\"mt30\">\n              <Explanation color=\"blue\">\n                <div className=\"tcenter no-wrap\">\n                  <strong>Still stuck?</strong> Open an issue on{' '}\n                  <a\n                    target=\"_blank\"\n                    href=\"https://github.com/paulzakin/cleanslate/issues/new/choose\"\n                    rel=\"noreferrer\"\n                  >\n                    GitHub.com\n                  </a>\n                </div>\n              </Explanation>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { css, SerializedStyles } from '@emotion/react'\nimport React from 'react'\nimport { colors, Colors } from '../../theme'\n\nexport const Explanation: React.FC<{\n  children: React.ReactChild\n  color: Colors\n  styles?: SerializedStyles\n  className?: string\n}> = ({ children, className, color, styles }) => {\n  const explanation = css`\n    background-color: ${colors[color]};\n    border-radius: 5px;\n    line-height: 1.6;\n    margin: 0 auto;\n    margin-top: 15px;\n    padding: 20px 20px;\n    width: 100%;\n  `\n\n  return (\n    <div className={className} css={[explanation, styles]}>\n      {children}\n    </div>\n  )\n}\n","/* eslint-disable @next/next/no-img-element */\ntype props = {\n  width: number\n  height: number\n  alt: string\n  src: any\n  className?: string\n}\n\nexport const Image: React.FC<props> = ({\n  alt,\n  className,\n  height,\n  src,\n  width,\n}) => {\n  return (\n    <img\n      className={className}\n      src={src.src}\n      alt={alt}\n      style={{ height, width }}\n    />\n  )\n}\n","export const modals = [\n  'navbar.addIngredientModalVisibility',\n  'navbar.alertVisibility',\n  'navbar.bodyFatPercentageModalVisibility',\n  'navbar.barcodeModalVisibility',\n  'navbar.errorVisibility',\n  'navbar.exerciseModalVisibility',\n  'navbar.foodFormModalVisibility',\n  'navbar.foodModalVisibility',\n  'navbar.helpModalVisibility',\n  'navbar.informationModalVisibility',\n  'navbar.itemModalVisibility',\n  'navbar.menuVisibility',\n  'navbar.modalVisibility',\n  'navbar.pwaPromptVisibility',\n  'navbar.quickAddModalVisibility',\n  'navbar.recipeFormModalVisibility',\n  'navbar.recipeModalVisibility',\n  'navbar.settingsModalVisibility',\n  'navbar.supportModalVisibility',\n  'navbar.targetModalVisibility',\n  'navbar.therapyModalVisibility',\n  'navbar.unitModalVisibility',\n  'navbar.voiceModalVisibility',\n] as const\n\nexport type Modals = (typeof modals)[number]\n","import { gql } from '../helpers/gql'\n\nexport const FOOD_FRAGMENT = gql`\n  fragment food on foods {\n    id\n    basicFoodId\n    name\n    countName\n    containerName\n    group\n    category\n    alias\n    caloriesPerGram\n    proteinPerGram\n    caloriesPerCount\n    proteinPerCount\n    countToGram\n    countToTbsp\n    tbspToGram\n    servingPerContainer\n    preferredVolumeUnit\n    preferredWeightUnit\n    createdAt\n    updatedAt\n    type\n    profile\n    foodToProfile {\n      id\n      authId\n      showDensities\n    }\n  }\n`\n\nexport const CREATE_FOOD = gql`\n  mutation CREATE_FOOD($object: foods_insert_input!) {\n    insert_foods_one(object: $object) {\n      id\n    }\n  }\n`\n\nexport const UPDATE_FOOD = gql`\n  mutation UPDATE_FOOD(\n    $pk_columns: foods_pk_columns_input!\n    $set: foods_set_input\n  ) {\n    update_foods_by_pk(pk_columns: $pk_columns, _set: $set) {\n      id\n    }\n  }\n`\n\nexport const DELETE_FOOD = gql`\n  mutation DELETE_FOOD($id: uuid!) {\n    delete_foods_by_pk(id: $id) {\n      id\n    }\n  }\n`\n\nexport const HANDLE_MISSING_BASIC_FOODS = gql`\n  mutation HandlingMissingBasicFoods($ids: [uuid!]) {\n    delete_ingredients(where: { basicFood: { _in: $ids } }) {\n      returning {\n        id\n      }\n    }\n    delete_logs(where: { basicFood: { _in: $ids } }) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nexport const SUBSCRIBE_TO_BASIC_FOOD = gql`\n  subscription SUBSCRIBE_TO_BASIC_FOOD {\n    foods(\n      where: { basicFoodId: { _is_null: false } }\n      limit: 1\n      order_by: { updatedAt: desc }\n    ) {\n      ...food\n    }\n  }\n`\n","import { gql } from '../helpers/gql'\n\nexport const LOG_FRAGMENT = gql`\n  fragment log on logs {\n    id\n    alias\n    amount\n    unit\n    barcode\n    createdAt\n    type\n    consumed\n    meal\n    basicFood\n\n    logToFood {\n      ...food\n    }\n\n    logToRecipe {\n      ...recipe\n    }\n  }\n`\n\nexport const CREATE_LOG = gql`\n  mutation CREATE_LOG($object: logs_insert_input!) {\n    insert_logs_one(object: $object) {\n      ...log\n    }\n  }\n`\n\nexport const CREATE_LOGS = gql`\n  mutation CREATE_LOGS($objects: [logs_insert_input!]!) {\n    insert_logs(objects: $objects) {\n      returning {\n        ...log\n      }\n    }\n  }\n`\n\nexport const UPDATE_LOG = gql`\n  mutation UPDATE_LOG(\n    $pk_columns: logs_pk_columns_input!\n    $set: logs_set_input\n  ) {\n    update_logs_by_pk(pk_columns: $pk_columns, _set: $set) {\n      ...log\n    }\n  }\n`\n\nexport const DELETE_LOG = gql`\n  mutation DELETE_LOG($id: uuid!) {\n    delete_logs_by_pk(id: $id) {\n      id\n    }\n  }\n`\nexport const DELETE_LOGS = gql`\n  mutation DELETE_LOGS($id: [uuid!] = \"\") {\n    delete_logs(where: { id: { _in: $id } }) {\n      returning {\n        id\n      }\n    }\n  }\n`\n","import { gql } from '../helpers/gql'\n\nexport const PROFILE_FRAGMENT = gql`\n  fragment profile on profiles {\n    id\n    authId\n    apiToken\n    timezone\n    updatedAt\n    createdAt\n    type\n    calorieTarget\n    proteinTarget\n    showCalories\n    startTime\n    hidePWAPrompt\n    showDensities\n    countDown\n    enablePlanning\n    metricSystem\n    convertBetweenUnits\n  }\n`\n\nexport const GET_PROFILE = gql`\n  query GetProfiles($token: String) {\n    profiles(where: { authId: { _eq: $token } }) {\n      authId\n      id\n    }\n  }\n`\n\nexport const UPDATE_PROFILE = gql`\n  mutation UPDATE_PROFILE($id: uuid!, $set: profiles_set_input) {\n    update_profiles(where: { id: { _eq: $id } }, _set: $set) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_ALL_PROFILES = gql`\n  mutation DELETE_PROFILES {\n    delete_profiles(where: {}) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nexport const DELETE_PROFILE = gql`\n  mutation DELETE_PROFILE($authId: String!) {\n    delete_profiles(where: { authId: { _eq: $authId } }) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nexport const SUBSCRIBE_TO_DATA = gql`\n  subscription SUBSCRIBE_TO_DATA($today: timestamptz, $tomorrow: timestamptz) {\n    profiles {\n      ...profile\n\n      foods {\n        ...food\n      }\n\n      logs(where: { createdAt: { _gte: $today, _lte: $tomorrow } }) {\n        ...log\n      }\n\n      recipes {\n        ...recipe\n      }\n    }\n  }\n`\n","import { gql } from '../helpers/gql'\n\nexport const RECIPE_BASE_FRAGMENT = gql`\n  fragment recipe_base on recipes {\n    containerName\n    countName\n    countToGram\n    countToTbsp\n    createdAt\n    id\n    name\n    preferredVolumeUnit\n    preferredWeightUnit\n    profile\n    servingPerContainer\n    servingPerContainer\n    type\n    recipeToProfile {\n      id\n      authId\n      showDensities\n    }\n  }\n`\n\nexport const INGREDIENT_BASE_FRAGMENT = gql`\n  fragment ingredient_base on ingredients {\n    amount\n    barcode\n    basicFood\n    createdAt\n    food\n    id\n    profile\n    recipe\n    type\n    unit\n    ingredientToFood {\n      ...food\n    }\n    ingredientToProfile {\n      id\n      authId\n      showDensities\n    }\n  }\n`\n\nexport const RECIPE_FRAGMENT = gql`\n  fragment recipe on recipes {\n    ...recipe_base\n    ingredients {\n      ...ingredient\n    }\n  }\n`\n\nexport const CREATE_RECIPE = gql`\n  mutation CREATE_RECIPE($object: recipes_insert_input!) {\n    insert_recipes_one(object: $object) {\n      id\n    }\n  }\n`\n\nexport const UPDATE_RECIPE = gql`\n  mutation UPDATE_RECIPE(\n    $pk_columns: recipes_pk_columns_input!\n    $set: recipes_set_input\n    $ingredients_to_delete: [uuid!] = \"\"\n    $ingredients_to_insert: [ingredients_insert_input!]!\n  ) {\n    delete_ingredients(where: { id: { _in: $ingredients_to_delete } }) {\n      returning {\n        id\n      }\n    }\n\n    insert_ingredients(objects: $ingredients_to_insert) {\n      returning {\n        id\n      }\n    }\n\n    update_recipes_by_pk(pk_columns: $pk_columns, _set: $set) {\n      id\n    }\n  }\n`\n\nexport const DELETE_RECIPE = gql`\n  mutation DELETE_RECIPE($id: uuid!) {\n    delete_recipes_by_pk(id: $id) {\n      id\n    }\n  }\n`\n","import basicFoodsJson from '../../basicFoods.json'\nimport { Food } from '../../models/food'\n\nexport const getBasicFoods = () => {\n  const basicFoods = basicFoodsJson as unknown as Food[]\n  const basicFoodsManifest: Record<string, Food> = {}\n  basicFoods.map((food) => {\n    const { basicFoodId } = food\n    if (basicFoodId) {\n      basicFoodsManifest[basicFoodId] = food\n    }\n  })\n  return { basicFoods, basicFoodsManifest }\n}\n","import { basicFoodsKey, fetchBasicFoodsKey, profileKey } from './constants'\nimport { getStore } from './getStore'\n\nexport const clearCache = () => {\n  localStorage.setItem(profileKey, 'null')\n  localStorage.setItem(basicFoodsKey, 'null')\n  localStorage.setItem(fetchBasicFoodsKey, 'null')\n  getStore().dispatch('clearData', null)\n}\n","import { loginKey, tokenKey } from './constants'\n\nexport const clearLoginState = () => {\n  // Remove any query parameters from the URL to prevent accidentally being logged back in\n  window.history.replaceState(null, 'null', window.location.pathname)\n\n  localStorage.setItem(loginKey, 'null')\n  localStorage.setItem(tokenKey, 'null')\n\n  // Tell the other tab that the user has logged out\n  window.dispatchEvent(new Event('storage'))\n}\n","import { store } from '../store/store'\n\nexport const closeAllModals = () => {\n  store.dispatch('closeAllModals')\n}\n","import { isProduction } from './isProduction'\n\nexport const getApiUrl = () => {\n  const domain = process.env.NEXT_PUBLIC_HASURA_DOMAIN\n  const cypress = process.env.NEXT_PUBLIC_CYPRESS\n  if (isProduction()) {\n    return [`https://${domain}/v1/graphql`, `wss://${domain}/v1/graphql`]\n  } else if (cypress) {\n    return [\n      'http://localhost:8080/v1/graphql',\n      'ws://localhost:8080/v1/graphql',\n    ]\n  } else {\n    return [\n      `https://${window.location.host}/v1/graphql`,\n      `wss://${window.location.host}/v1/graphql`,\n    ]\n  }\n}\n","import { getApiUrl } from './getApiUrl'\n\nexport type Configuration = {\n  resourceServerUri: string\n  resourceServerUriWs: string\n}\n\n/** Return the configuration for the project */\nexport const getConfig = (): Configuration => {\n  const [resourceServerUri, resourceServerUriWs] = getApiUrl()\n  return {\n    resourceServerUri,\n    resourceServerUriWs,\n  }\n}\n","export const basicFoodsKey = `basicFoods`\nexport const fetchBasicFoodsKey = 'fetched-basic-foods'\nexport const loginKey = `logged-in`\nexport const tokenKey = `token`\nexport const lastedOpened = `lasted-opened`\nexport const profileKey = `profile`\nexport const versionKey = `version`\n","export const firebaseEnabled = process.env.NEXT_PUBLIC_USE_FIREBASE === 'true'\n\nexport const getFirebaseConfig = () => {\n  const config = JSON.parse(process.env.NEXT_PUBLIC_FIREBASE_CONFIG || '{}')\n  return config\n}\n","import axios from 'axios'\n\nexport const ax = () => {\n  const client = axios.create({\n    withCredentials: true,\n  }) as typeof axios\n\n  client.interceptors.request.use(\n    (request) => {\n      return request\n    },\n    (error) => {\n      throw error\n    }\n  )\n\n  client.interceptors.response.use(\n    (response) => {\n      return response\n    },\n    (error) => {\n      const message = error?.response?.data?.error\n      error.message = message || error.message\n      throw error\n    }\n  )\n  return client\n}\n","import toast from 'react-hot-toast'\nimport { store } from '../store/store'\nimport { closeAllModals } from './closeAllModals'\nimport { isOffline } from './isOffline'\n\nexport const offlineMessage =\n  'Your device currently has no Internet connection. Please try again when you reconnect!'\n\nexport type Request = (\n  query: string,\n  variables?: Record<string, any>,\n  headers?: Record<string, any>\n) => Promise<any>\n\nexport type Client = {\n  request: Request\n}\n\nexport type PendingClient = Promise<Client>\n\nexport const stopRequestIfOffline = async (\n  showMessage = true,\n  closeModals = true\n) => {\n  if (isOffline()) {\n    closeModals ? closeAllModals() : store.dispatch('closeError')\n    showMessage && toast.error(offlineMessage)\n    throw new Error('You are offline!')\n  } else {\n    return 'You are online!'\n  }\n}\n","import { ax } from './axios'\nimport { getConfig } from './config'\nimport { getJWT } from './getJWT'\nimport { handleError } from './handleError'\nimport {\n  Client,\n  PendingClient,\n  stopRequestIfOffline,\n} from './stopRequestIfOffline'\n\nexport const getHasuraClient = (JWT = ''): PendingClient => {\n  return stopRequestIfOffline()\n    .then(() => {\n      if (JWT) {\n        return JWT\n      } else {\n        return getJWT()\n      }\n    })\n    .then((token) => {\n      const request: Client = {\n        request: (query, variables) => {\n          const headers = token\n            ? { Authorization: `Bearer ${token}` }\n            : { Authorization: '' }\n          return ax()\n            .post(\n              getConfig().resourceServerUri,\n              { query, variables },\n              { headers }\n            )\n            .then((response) => {\n              const { data } = response\n              if (data.errors && data.errors.length >= 1) {\n                const message = data.errors[0].message\n                handleError(message)\n              } else {\n                // Hasura return data, as does Axios, hence double data!\n                return data.data\n              }\n            })\n            .catch((error) => {\n              handleError(error)\n              return error\n            })\n        },\n      }\n      return request\n    })\n}\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n","import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n","import { JOSENotSupported } from '../util/errors.js';\nexport const inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nexport const deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n","const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n","import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n","import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n","import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n","import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n","import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport generateIv from './iv.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = generateIv(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: base64url(iv), tag: base64url(tag) };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n","import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                try {\n                    partyUInfo = base64url(joseHeader.apu);\n                }\n                catch (_a) {\n                    throw new JWEInvalid('Failed to base64url decode the apu');\n                }\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                try {\n                    partyVInfo = base64url(joseHeader.apv);\n                }\n                catch (_b) {\n                    throw new JWEInvalid('Failed to base64url decode the apv');\n                }\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            let p2s;\n            try {\n                p2s = base64url(joseHeader.p2s);\n            }\n            catch (_c) {\n                throw new JWEInvalid('Failed to base64url decode the p2s');\n            }\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            let iv;\n            try {\n                iv = base64url(joseHeader.iv);\n            }\n            catch (_d) {\n                throw new JWEInvalid('Failed to base64url decode the iv');\n            }\n            let tag;\n            try {\n                tag = base64url(joseHeader.tag);\n            }\n            catch (_e) {\n                throw new JWEInvalid('Failed to base64url decode the tag');\n            }\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = base64url(jwe.encrypted_key);\n        }\n        catch (_c) {\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    let iv;\n    let tag;\n    try {\n        iv = base64url(jwe.iv);\n    }\n    catch (_d) {\n        throw new JWEInvalid('Failed to base64url decode the iv');\n    }\n    try {\n        tag = base64url(jwe.tag);\n    }\n    catch (_e) {\n        throw new JWEInvalid('Failed to base64url decode the tag');\n    }\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = base64url(jwe.ciphertext);\n    }\n    catch (_f) {\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\n    }\n    let plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n        }\n        catch (_g) {\n            throw new JWEInvalid('Failed to base64url decode the aad');\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n","import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n","import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = generateCek(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch (_c) {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch (_d) {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined)\n        requiredClaims.push('iat');\n    if (audience !== undefined)\n        requiredClaims.push('aud');\n    if (subject !== undefined)\n        requiredClaims.push('sub');\n    if (issuer !== undefined)\n        requiredClaims.push('iss');\n    for (const claim of new Set(requiredClaims.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nexport class ProduceJWT {\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\n","import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n","import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n","import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n","import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token === null || token === void 0 ? void 0 : token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch (_a) {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n","import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\nimport { isJWKSLike, LocalJWKSet } from './local.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nclass RemoteJWKSet extends LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            if (!isJWKSLike(json)) {\n                throw new JWKSInvalid('JSON Web Key Set malformed');\n            }\n            this._jwks = { keys: json.keys };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n","import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n","import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch (_a) {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch (_b) {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    var _a, _b, _c;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA':\n            keyUsages = ['sign', 'verify'];\n            const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages));\n}\n","import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n","import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n","export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nimport * as errors_1 from './util/errors.js';\nexport { errors_1 as errors };\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nimport * as base64url_1 from './util/base64url.js';\nexport { base64url_1 as base64url };\nexport { default as cryptoRuntime } from './util/runtime.js';\n","import firebase from 'firebase/compat/app'\nimport * as jose from 'jose'\nimport { tokenKey } from './constants'\nimport { firebaseEnabled } from './getFirebaseConfig'\nimport { handleError } from './handleError'\n\n// The token is a glorified API token but Hasura requires it in the format of a JWT\n// Hence, this JWT is a pointless (and insecure) wrapper around the very secure API token\n\nexport const SIGNING_KEY = 'd374e7c8-912c-4871-bac2-7dde6afc2b55'\n\nexport const getJWT = async function (token = ''): Promise<string> {\n  if (firebaseEnabled) {\n    try {\n      const JWT = await firebase.auth().currentUser?.getIdToken()\n      return JWT || ''\n    } catch (error) {\n      handleError(error as Error)\n      return ''\n    }\n  } else {\n    const tokenToUse = token || localStorage.getItem(tokenKey)\n    const customClaims = {\n      'https://hasura.io/jwt/claims': {\n        'x-hasura-allowed-roles': ['user', 'admin'],\n        'x-hasura-default-role': 'user',\n        'x-hasura-user-id': tokenToUse,\n        'x-hasura-username': tokenToUse,\n      },\n    }\n    const secret = new TextEncoder().encode(SIGNING_KEY)\n    const alg = 'HS256'\n    const JWT = await new jose.SignJWT(customClaims)\n      .setProtectedHeader({ alg })\n      .sign(secret)\n\n    return JWT\n  }\n}\n","import { store } from '../store/store'\n\nexport const getStore = () => store\n","export const gql = (query: TemplateStringsArray): string => {\n  return query[0]\n}\n","import * as Sentry from '@sentry/react'\nimport { toast } from 'react-hot-toast'\nimport { store } from '../store/store'\nimport { logout } from './logout'\nimport { dsn } from './startSentry'\n\nexport const handleError = (\n  error: Error | string,\n  options: {\n    showModal?: boolean\n    hideFromSentry?: boolean\n    objectToReturn?: 0\n    params?: Record<string, any>\n  } = { objectToReturn: 0, params: {}, showModal: true }\n) => {\n  const { hideFromSentry, objectToReturn } = options\n  const e = String(error)\n  const sameEmail = 'An account already exists with the same email address'\n  const logoutMessage = 'Your login has expired. Please login again.'\n  if (e.includes('foods_profile_name_key')) {\n    toast.error('Custom food with that name already exists!')\n  } else if (e.includes('recipes_profile_name_key')) {\n    toast.error('Recipe with that name already exists!')\n  } else if (e.includes(sameEmail)) {\n    toast.error(sameEmail)\n  } else if (\n    // Example: (reading 'insert_logs_one')\n    e.includes('Cannot read properties of undefined (reading') ||\n    e.includes('the operation is insecure') ||\n    // Example: undefined is not an object (evaluating 'e.insert_logs.returning')\n    e.includes('e.insert_logs.returning')\n  ) {\n    toast.error(logoutMessage)\n    logout(false)\n    return 0\n  }\n\n  if (dsn && hideFromSentry !== true) {\n    try {\n      Sentry.setUser({ id: store.get().data.profiles[0].authId })\n    } catch (e) {\n      console.log('Storeon not configured yet. Skipping.')\n    }\n    Sentry.setExtra('version', process.env.NEXT_PUBLIC_VERSION || 'Unknown')\n    Sentry.captureException(error)\n  }\n  return objectToReturn || 0\n}\n","export const isBrowser = () => {\n  return typeof window !== 'undefined' && window.localStorage\n}\n","import { store } from '../store/store'\nimport { isBrowser } from './isBrowser'\n\nexport const isOffline = (offline?: boolean) =>\n  isBrowser() &&\n  (offline !== undefined\n    ? undefined\n    : store.get().navbar.offline === true || window.navigator.onLine === false)\n","export const isProduction = () => {\n  return process.env.NODE_ENV === 'production'\n}\n","import firebase from 'firebase/compat/app'\nimport toast from 'react-hot-toast'\nimport { clearCache } from './clearCache'\nimport { clearLoginState } from './clearLoginState'\nimport { closeAllModals } from './closeAllModals'\nimport { firebaseEnabled } from './getFirebaseConfig'\nimport { getStore } from './getStore'\nimport { isBrowser } from './isBrowser'\n\nexport const logout = async (alert = true) => {\n  // This resets the logged-in flag\n  if (isBrowser()) {\n    clearCache()\n    clearLoginState()\n  }\n\n  // Close the Websocket connections to save bandwidth\n  const store = getStore()\n  const client = store.get().currentWebsocketClient\n  if (client) {\n    client.unsubscribeAll()\n    client.close(true, true)\n  }\n  try {\n    // Log out of Firebase\n    if (firebaseEnabled) {\n      await firebase.auth().signOut()\n    }\n    closeAllModals()\n    store.dispatch('updateUser', null)\n    if (isBrowser() && alert) {\n      toast.success(\"You've been logged out!\")\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n","import { produce } from 'immer'\nimport { Ingredient } from '../../models/ingredient'\nimport { Profile } from '../../models/profile'\nimport { getBasicFoods } from '../Food/getBasicFoods'\n\nconst { basicFoodsManifest } = getBasicFoods()\n\n// We need a placeholder for the deleted log so calculateMetric does not error\nconst WATER = basicFoodsManifest['fc85e08d-f76a-4f4e-98ef-8a8d33e600fd']\n\nexport const addBasicFoodsToProfile = (profiles: Profile[]) => {\n  const missingBasicFoods: string[] = []\n\n  const processIngredient = (ingredient: Ingredient) => {\n    const basicFoodId = ingredient.basicFood\n    if (basicFoodId) {\n      const basicFood = basicFoodsManifest[basicFoodId]\n      ingredient.basicFood = basicFoodId\n      if (basicFood) {\n        ingredient.ingredientToFood = basicFoodsManifest[basicFoodId]\n      } else {\n        missingBasicFoods.push(basicFoodId)\n        ingredient.ingredientToFood = WATER\n      }\n    }\n    const childRecipe = ingredient.ingredientToChildRecipe\n    if (childRecipe) {\n      childRecipe.ingredients.map(processIngredient)\n    }\n    return ingredient\n  }\n\n  const logsWithBasicFoods = profiles[0].logs\n\n    .map((log) => {\n      const basicFoodId = log.basicFood\n      // Map every basicFoodId in a food in a log to a fully fledged food\n      if (basicFoodId) {\n        const basicFood = basicFoodsManifest[basicFoodId]\n        if (basicFood) {\n          log.basicFood = basicFoodId\n          log.logToFood = basicFoodsManifest[basicFoodId]\n        } else {\n          missingBasicFoods.push(basicFoodId)\n          log.logToFood = WATER\n        }\n      }\n      // Map every basicFoodId in a food or childRecipe in an ingredient to a fully fledged food\n      // Just changing the recipe object below is not enough\n      const recipe = log.logToRecipe\n      if (recipe) {\n        recipe.ingredients.map(processIngredient)\n      }\n      return log\n    })\n    .filter((log) => {\n      // In the event that basic foods are missing, we want to hide the dependent logs\n      // Until handleMissingBasicFoods has had a chance to run.\n      // That way, we avoid a flicker of the log as water\n      const basicFoodId = log.basicFood\n      return (basicFoodId && basicFoodsManifest[basicFoodId]) || !basicFoodId\n    })\n\n  const recipesWithBasicFoods = profiles[0].recipes.map((recipe) => {\n    // Map every basicFoodId in a food or childRecipe in an ingredient to a fully fledged food\n    recipe.ingredients = recipe.ingredients.map((ingredient) => {\n      return processIngredient(ingredient)\n    })\n    return recipe\n  })\n\n  const profilesWithBasicFoods = produce(profiles, (draft) => {\n    draft[0].logs = logsWithBasicFoods\n    draft[0].recipes = recipesWithBasicFoods\n  })\n\n  return { missingBasicFoods, profiles: profilesWithBasicFoods }\n}\n","import { SDK_VERSION, init as init$1 } from '@sentry/browser';\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  const opts = {\n    _metadata: {} ,\n    ...options,\n  };\n\n  opts._metadata.sdk = opts._metadata.sdk || {\n    name: 'sentry.javascript.react',\n    packages: [\n      {\n        name: 'npm:@sentry/react',\n        version: SDK_VERSION,\n      },\n    ],\n    version: SDK_VERSION,\n  };\n  init$1(opts);\n}\n\nexport { init };\n//# sourceMappingURL=sdk.js.map\n","import { isString } from './is.js';\nimport { logger } from './logger.js';\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n","import { baggageHeaderToDynamicSamplingContext } from './baggage.js';\nimport { uuid4 } from './misc.js';\n\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n */\nfunction tracingContextFromHeaders(\n  sentryTrace,\n  baggage,\n)\n\n {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  const propagationContext = {\n    traceId: traceId || uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: parentSampled,\n  };\n\n  if (parentSpanId) {\n    propagationContext.parentSpanId = parentSpanId;\n  }\n\n  if (dynamicSamplingContext) {\n    propagationContext.dsc = dynamicSamplingContext ;\n  }\n\n  return {\n    traceparentData,\n    dynamicSamplingContext,\n    propagationContext,\n  };\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = uuid4(),\n  spanId = uuid4().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData, generateSentryTraceHeader, tracingContextFromHeaders };\n//# sourceMappingURL=tracing.js.map\n","import { uuid4, timestampInSeconds, logger, generateSentryTraceHeader, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n\n   constructor(maxlen = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * The instrumenter that created this span.\n   */\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this.traceId = spanContext.traceId || uuid4();\n    this.spanId = spanContext.spanId || uuid4().substring(16);\n    this.startTimestamp = spanContext.startTimestamp || timestampInSeconds();\n    this.tags = spanContext.tags || {};\n    this.data = spanContext.data || {};\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n    this.origin = spanContext.origin || 'manual';\n\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.name) {\n      this.description = spanContext.name;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /** An alias for `description` of the Span. */\n   get name() {\n    return this.description || '';\n  }\n  /** Update the name of the span. */\n   set name(name) {\n    this.setName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    this.setData('http.response.status_code', httpStatus);\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setName(name) {\n    this.description = name;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampInSeconds();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    return generateSentryTraceHeader(this.traceId, this.spanId, this.sampled);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext() {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n      origin: this.origin,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n","import { dropUndefinedKeys, logger } from '@sentry/utils';\nimport { getCurrentHub } from '../hub.js';\nimport { getDynamicSamplingContextFromClient } from './dynamicSamplingContext.js';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);\n    // We need to delete description since it's set by the Span class constructor\n    // but not needed for transactions.\n    delete this.description;\n\n    this._measurements = {};\n    this._contexts = {};\n\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    const transaction = this._finishTransaction(endTimestamp);\n    if (!transaction) {\n      return undefined;\n    }\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || getCurrentHub();\n    const client = hub.getClient();\n\n    if (!client) return {};\n\n    const scope = hub.getScope();\n    const dsc = getDynamicSamplingContextFromClient(this.traceId, client, scope);\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    if (maybeSampleRate !== undefined) {\n      dsc.sample_rate = `${maybeSampleRate}`;\n    }\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const source = this.metadata.source;\n    if (source && source !== 'url') {\n      dsc.transaction = this.name;\n    }\n\n    if (this.sampled !== undefined) {\n      dsc.sampled = String(this.sampled);\n    }\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n   setHub(hub) {\n    this._hub = hub;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _finishTransaction(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return transaction;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { logger, timestampInSeconds } from '@sentry/utils';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampInSeconds();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n\n  // We should not use heartbeat if we finished a transaction\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = TRACING_DEFAULTS.finalTimeout,\n      _heartbeatInterval = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._restartIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = timestampInSeconds()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.op === 'ui.action.click') {\n      this.setTag(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const spanStartedBeforeTransactionFinish = span.startTimestamp < endTimestamp;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = span.endTimestamp - this.startTimestamp < timeoutWithMarginOfError;\n\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      const scope = this._idleHub.getScope();\n      if (scope.getTransaction() === this) {\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n   cancelIdleTimeout(\n    endTimestamp,\n    {\n      restartOnChildSpanChange,\n    }\n\n = {\n      restartOnChildSpanChange: true,\n    },\n  ) {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n   setFinishReason(reason) {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n   _restartIdleTimeout(endTimestamp) {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampInSeconds();\n      if (this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\nexport { IdleTransaction, IdleTransactionSpanRecorder, TRACING_DEFAULTS };\n//# sourceMappingURL=idletransaction.js.map\n","import { getCurrentHub } from '../hub.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope.getTransaction() ;\n}\n\nexport { getActiveTransaction };\n//# sourceMappingURL=utils.js.map\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { getCurrentHub } from '../hub.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getCurrentHub().getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nexport { hasTracingEnabled };\n//# sourceMappingURL=hasTracingEnabled.js.map\n","import { logger, isNaN } from '@sentry/utils';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nfunction sampleTransaction(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nexport { sampleTransaction };\n//# sourceMappingURL=sampling.js.map\n","import { logger } from '@sentry/utils';\nimport { getMainCarrier } from '../hub.js';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { sampleTransaction } from './sampling.js';\nimport { Transaction } from './transaction.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': span.toTraceparent(),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sampleTransaction(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n\nexport { addTracingExtensions, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","import { getActiveTransaction } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { WINDOW } from './types.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() ;\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","const bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","import { WINDOW } from '../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key ] ) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry ;\n};\n\nconst getNavigationEntry = () => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import { WINDOW } from '../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if (WINDOW.document.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() );\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { WINDOW } from '../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst onHidden = (cb, once) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport) => {\n  const metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = () => {\n      handleEntries(po.takeRecords() );\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n\nexport { onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { WINDOW } from '../../types.js';\nimport { onHidden } from './onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nconst getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport) => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntry = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries) => {\n    (entries ).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() );\n      po.disconnect();\n    }, true);\n  }\n};\n\nexport { onFID };\n//# sourceMappingURL=getFID.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nconst onLCP = (onReport) => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report;\n\n  const handleEntries = (entries) => {\n    const lastEntry = entries[entries.length - 1] ;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n\nexport { onLCP };\n//# sourceMappingURL=getLCP.js.map\n","import { logger, getFunctionName } from '@sentry/utils';\nimport { onCLS } from './web-vitals/getCLS.js';\nimport { onFID } from './web-vitals/getFID.js';\nimport { onLCP } from './web-vitals/getLCP.js';\nimport { observe } from './web-vitals/lib/observe.js';\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addClsInstrumentationHandler(callback) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addLcpInstrumentationHandler(callback) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  onCLS(metric => {\n    triggerHandlers('cls', {\n      metric,\n    });\n    _previousCls = metric;\n  });\n}\n\nfunction instrumentFid() {\n  onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(type, callback) {\n  return () => {\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\nexport { addClsInstrumentationHandler, addFidInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\nexport { _startChild, isMeasurementValue };\n//# sourceMappingURL=utils.js.map\n","import { getActiveTransaction } from '@sentry/core';\nimport { browserPerformanceTimeOrigin, htmlTreeAsString, logger } from '@sentry/utils';\nimport { addPerformanceInstrumentationHandler, addClsInstrumentationHandler, addLcpInstrumentationHandler, addFidInstrumentationHandler } from '../instrument.js';\nimport { WINDOW } from '../types.js';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher.js';\nimport { _startChild, isMeasurementValue } from './utils.js';\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n\n    return () => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      const transaction = getActiveTransaction() ;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      const transaction = getActiveTransaction() ;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        transaction.startChild({\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        });\n      }\n    }\n  });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  });\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        const resourceName = (entry.name ).replace(WINDOW.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data = {};\n  if ('transferSize' in entry) {\n    data['http.response_transfer_size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['http.response_content_length'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['http.decoded_response_content_length'] = entry.decodedBodySize;\n  }\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingInteractions, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=index.js.map\n","import { hasTracingEnabled, getCurrentHub, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport { addInstrumentationHandler, generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, isInstanceOf, BAGGAGE_HEADER_NAME, SENTRY_XHR_DATA_KEY, browserPerformanceTimeOrigin, stringMatchesSomePattern } from '@sentry/utils';\nimport { addPerformanceInstrumentationHandler } from './instrument.js';\n\n/* eslint-disable max-lines */\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData) => {\n      const createdSpan = fetchCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData) => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const url = span.data.url;\n\n  if (!url) {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setData(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track fetch request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (!hasTracingEnabled() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n\n        const contentLength =\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n        const contentLengthNum = parseInt(contentLength);\n        if (contentLengthNum > 0) {\n          span.setData('http.response_content_length', contentLengthNum);\n        }\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  const parentSpan = scope.getSpan();\n\n  const { method, url } = handlerData.fetchData;\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n          },\n          description: `${method} ${url}`,\n          op: 'http.client',\n          origin: 'auto.http.browser',\n        })\n      : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nfunction addTracingHeadersToFetchRequest(\n  request, // unknown is actually type Request but we can't export DOM types from this package,\n  client,\n  scope,\n  options\n\n,\n  requestSpan,\n) {\n  const span = requestSpan || scope.getSpan();\n\n  const transaction = span && span.transaction;\n\n  const { traceId, sampled, dsc } = scope.getPropagationContext();\n\n  const sentryTraceHeader = span ? span.toTraceparent() : generateSentryTraceHeader(traceId, undefined, sampled);\n  const dynamicSamplingContext = transaction\n    ? transaction.getDynamicSamplingContext()\n    : dsc\n    ? dsc\n    : getDynamicSamplingContextFromClient(traceId, client, scope);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n  const headers =\n    typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request ).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!hasTracingEnabled() || (xhr && xhr.__sentry_own_request__) || !xhr || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(sentryXhrData.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const parentSpan = scope.getSpan();\n\n  const span =\n    shouldCreateSpanResult && parentSpan\n      ? parentSpan.startChild({\n          data: {\n            ...sentryXhrData.data,\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            url: sentryXhrData.url,\n          },\n          description: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          op: 'http.client',\n          origin: 'auto.http.browser',\n        })\n      : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url)) {\n    if (span) {\n      const transaction = span && span.transaction;\n      const dynamicSamplingContext = transaction && transaction.getDynamicSamplingContext();\n      const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, span.toTraceparent(), sentryBaggageHeader);\n    } else {\n      const client = hub.getClient();\n      const { traceId, sampled, dsc } = scope.getPropagationContext();\n      const sentryTraceHeader = generateSentryTraceHeader(traceId, undefined, sampled);\n      const dynamicSamplingContext =\n        dsc || (client ? getDynamicSamplingContextFromClient(traceId, client, scope) : undefined);\n      const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n      setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n    }\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nexport { DEFAULT_TRACE_PROPAGATION_TARGETS, addTracingHeadersToFetchRequest, defaultRequestInstrumentationOptions, extractNetworkProtocol, fetchCallback, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { logger, browserPerformanceTimeOrigin, addInstrumentationHandler } from '@sentry/utils';\nimport { WINDOW } from './types.js';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!WINDOW || !WINDOW.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { TRACING_DEFAULTS, addTracingExtensions, startIdleTransaction, getActiveTransaction } from '@sentry/core';\nimport { logger, tracingContextFromHeaders, getDomElement } from '@sentry/utils';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, startTrackingLongTasks, startTrackingInteractions, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\nimport { WINDOW } from './types.js';\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(_options) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    addTracingExtensions();\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n    const baggage = isPageloadTransaction ? getMetaContent('baggage') : '';\n    const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n      sentryTrace,\n      baggage,\n    );\n\n    const expandedContext = {\n      ...context,\n      ...traceparentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceparentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = finalContext.metadata && finalContext.metadata.source;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n\n    const scope = hub.getScope();\n\n    // If it's a pageload and there is a meta tag set\n    // use the traceparentData as the propagation context\n    if (isPageloadTransaction && traceparentData) {\n      scope.setPropagationContext(propagationContext);\n    } else {\n      // Navigation transactions should set a new propagation context based on the\n      // created idle transaction.\n      scope.setPropagationContext({\n        traceId: idleTransaction.traceId,\n        spanId: idleTransaction.spanId,\n        parentSpanId: idleTransaction.parentSpanId,\n        sampled: idleTransaction.sampled,\n      });\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      const currentTransaction = getActiveTransaction();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, hub) {\n  const client = hub.getClient();\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n","import { isNodeEnv } from './node.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ ).process !== undefined && ((GLOBAL_OBJ ).process ).type === 'renderer'\n  );\n}\n\nexport { isBrowser };\n//# sourceMappingURL=isBrowser.js.map\n","import { getCurrentHub, isSentryRequestUrl, addGlobalEventProcessor, prepareEvent, setContext, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, normalize, fill, htmlTreeAsString, browserPerformanceTimeOrigin, logger, uuid4, SENTRY_XHR_DATA_KEY, dropUndefinedKeys, stringMatchesSomePattern, addInstrumentationHandler, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, isBrowser } from '@sentry/utils';\nimport { addPerformanceInstrumentationHandler, addLcpInstrumentationHandler } from '@sentry-internal/tracing';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\n/** The max. length of a replay. */\nconst MAX_REPLAY_DURATION = 3600000; // 60 minutes in ms;\n\nvar NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement$1(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = n === null || n === void 0 ? void 0 : n.host;\n    return Boolean((host === null || host === void 0 ? void 0 : host.shadowRoot) === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n    if (cssText.includes(' background-clip: text;') &&\n        !cssText.includes(' -webkit-background-clip: text;')) {\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\n    }\n    return cssText;\n}\nfunction escapeImportStatement(rule) {\n    const { cssText } = rule;\n    if (cssText.split('\"').length < 3)\n        return cssText;\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\n    if (rule.layerName === '') {\n        statement.push(`layer`);\n    }\n    else if (rule.layerName) {\n        statement.push(`layer(${rule.layerName})`);\n    }\n    if (rule.supportsText) {\n        statement.push(`supports(${rule.supportsText})`);\n    }\n    if (rule.media.length) {\n        statement.push(rule.media.mediaText);\n    }\n    return statement.join(' ') + ';';\n}\nfunction stringifyStylesheet(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\n            : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction stringifyRule(rule) {\n    let importStringified;\n    if (isCSSImportRule(rule)) {\n        try {\n            importStringified =\n                stringifyStylesheet(rule.styleSheet) ||\n                    escapeImportStatement(rule);\n        }\n        catch (error) {\n        }\n    }\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\n        return fixSafariColons(rule.cssText);\n    }\n    return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n    return cssStringified.replace(regex, '$1\\\\$2');\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction isCSSStyleRule(rule) {\n    return 'selectorText' in rule;\n}\nclass Mirror {\n    constructor() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n    getId(n) {\n        var _a;\n        if (!n)\n            return -1;\n        const id = (_a = this.getMeta(n)) === null || _a === void 0 ? void 0 : _a.id;\n        return id !== null && id !== void 0 ? id : -1;\n    }\n    getNode(id) {\n        return this.idNodeMap.get(id) || null;\n    }\n    getIds() {\n        return Array.from(this.idNodeMap.keys());\n    }\n    getMeta(n) {\n        return this.nodeMetaMap.get(n) || null;\n    }\n    removeNodeFromMap(n) {\n        const id = this.getId(n);\n        this.idNodeMap.delete(id);\n        if (n.childNodes) {\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n        }\n    }\n    has(id) {\n        return this.idNodeMap.has(id);\n    }\n    hasNode(node) {\n        return this.nodeMetaMap.has(node);\n    }\n    add(n, meta) {\n        const id = meta.id;\n        this.idNodeMap.set(id, n);\n        this.nodeMetaMap.set(n, meta);\n    }\n    replace(id, n) {\n        const oldNode = this.getNode(id);\n        if (oldNode) {\n            const meta = this.nodeMetaMap.get(oldNode);\n            if (meta)\n                this.nodeMetaMap.set(n, meta);\n        }\n        this.idNodeMap.set(id, n);\n    }\n    reset() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n}\nfunction createMirror() {\n    return new Mirror();\n}\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\n    if (tagName === 'OPTION') {\n        tagName = 'SELECT';\n    }\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\n        (type && maskInputOptions[type]) ||\n        type === 'password' ||\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\n}\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\n    let text = value || '';\n    if (!isMasked) {\n        return text;\n    }\n    if (maskInputFn) {\n        text = maskInputFn(text, element);\n    }\n    return '*'.repeat(text.length);\n}\nfunction toLowerCase(str) {\n    return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ?\n                toLowerCase(type)\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = toLowerCase(element.tagName);\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        const match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    const output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                const c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' ||\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    if (typeof maskAttributeFn === 'function') {\n        return maskAttributeFn(name, value, element);\n    }\n    return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    try {\n        if (unblockSelector && element.matches(unblockSelector)) {\n            return false;\n        }\n        if (typeof blockClass === 'string') {\n            if (element.classList.contains(blockClass)) {\n                return true;\n            }\n        }\n        else {\n            for (let eIndex = element.classList.length; eIndex--;) {\n                const className = element.classList[eIndex];\n                if (blockClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (blockSelector) {\n            return element.matches(blockSelector);\n        }\n    }\n    catch (e) {\n    }\n    return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        if (className) {\n            if (typeof className === 'string') {\n                if (el.matches(`.${className}`))\n                    return true;\n            }\n            else if (elementClassMatchesRegex(el, className)) {\n                return true;\n            }\n        }\n        if (selector && el.matches(selector))\n            return true;\n        return false;\n    };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n    try {\n        const el = node.nodeType === node.ELEMENT_NODE\n            ? node\n            : node.parentElement;\n        if (el === null)\n            return false;\n        let maskDistance = -1;\n        let unmaskDistance = -1;\n        if (maskAllText) {\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\n            if (unmaskDistance < 0) {\n                return true;\n            }\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\n        }\n        else {\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\n            if (maskDistance < 0) {\n                return false;\n            }\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\n        }\n        return maskDistance >= 0\n            ? unmaskDistance >= 0\n                ? maskDistance <= unmaskDistance\n                : true\n            : unmaskDistance >= 0\n                ? false\n                : !!maskAllText;\n    }\n    catch (e) {\n    }\n    return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return iframeEl.addEventListener('load', listener);\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n    let fired = false;\n    let styleSheetLoaded;\n    try {\n        styleSheetLoaded = link.sheet;\n    }\n    catch (error) {\n        return;\n    }\n    if (styleSheetLoaded)\n        return;\n    const timer = setTimeout(() => {\n        if (!fired) {\n            listener();\n            fired = true;\n        }\n    }, styleSheetLoadTimeout);\n    link.addEventListener('load', () => {\n        clearTimeout(timer);\n        fired = true;\n        listener();\n    });\n}\nfunction serializeNode(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\n    const rootId = getRootId(doc, mirror);\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            return serializeElementNode(n, {\n                doc,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                inlineStylesheet,\n                maskAttributeFn,\n                maskInputOptions,\n                maskInputFn,\n                dataURLOptions,\n                inlineImages,\n                recordCanvas,\n                keepIframeSrcFn,\n                newlyAddedElement,\n                rootId,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n            });\n        case n.TEXT_NODE:\n            return serializeTextNode(n, {\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskTextFn,\n                maskInputOptions,\n                maskInputFn,\n                rootId,\n            });\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction getRootId(doc, mirror) {\n    if (!mirror.hasNode(doc))\n        return undefined;\n    const docId = mirror.getId(doc);\n    return docId === 1 ? undefined : docId;\n}\nfunction serializeTextNode(n, options) {\n    var _a;\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\n    const parentTagName = n.parentNode && n.parentNode.tagName;\n    let textContent = n.textContent;\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\n    if (isStyle && textContent) {\n        try {\n            if (n.nextSibling || n.previousSibling) {\n            }\n            else if ((_a = n.parentNode.sheet) === null || _a === void 0 ? void 0 : _a.cssRules) {\n                textContent = stringifyStylesheet(n.parentNode.sheet);\n            }\n        }\n        catch (err) {\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n    }\n    if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n    }\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n        textContent = maskTextFn\n            ? maskTextFn(textContent)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n        textContent = maskInputFn\n            ? maskInputFn(textContent, n.parentNode)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (parentTagName === 'OPTION' && textContent) {\n        const isInputMasked = shouldMaskInput({\n            type: null,\n            tagName: parentTagName,\n            maskInputOptions,\n        });\n        textContent = maskInputValue({\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\n            element: n,\n            value: textContent,\n            maskInputFn,\n        });\n    }\n    return {\n        type: NodeType$1.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n    };\n}\nfunction serializeElementNode(n, options) {\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n    const tagName = getValidTagName(n);\n    let attributes = {};\n    const len = n.attributes.length;\n    for (let i = 0; i < len; i++) {\n        const attr = n.attributes[i];\n        if (!ignoreAttribute(tagName, attr.name, attr.value)) {\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\n        }\n    }\n    if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n            return s.href === n.href;\n        });\n        let cssText = null;\n        if (stylesheet) {\n            cssText = stringifyStylesheet(stylesheet);\n        }\n        if (cssText) {\n            delete attributes.rel;\n            delete attributes.href;\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n    }\n    if (tagName === 'style' &&\n        n.sheet &&\n        !(n.innerText || n.textContent || '').trim().length) {\n        const cssText = stringifyStylesheet(n.sheet);\n        if (cssText) {\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n    }\n    if (tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select' ||\n        tagName === 'option') {\n        const el = n;\n        const type = getInputType(el);\n        const value = getInputValue(el, toUpperCase(tagName), type);\n        const checked = el.checked;\n        if (type !== 'submit' && type !== 'button' && value) {\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\n                type,\n                tagName: toUpperCase(tagName),\n                maskInputOptions,\n            }));\n            attributes.value = maskInputValue({\n                isMasked: forceMask,\n                element: el,\n                value,\n                maskInputFn,\n            });\n        }\n        if (checked) {\n            attributes.checked = checked;\n        }\n    }\n    if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n            attributes.selected = true;\n        }\n        else {\n            delete attributes.selected;\n        }\n    }\n    if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n            if (!is2DCanvasBlank(n)) {\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n        }\n        else if (!('__context' in n)) {\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            const blankCanvas = document.createElement('canvas');\n            blankCanvas.width = n.width;\n            blankCanvas.height = n.height;\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            if (canvasDataURL !== blankCanvasDataURL) {\n                attributes.rr_dataURL = canvasDataURL;\n            }\n        }\n    }\n    if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n            canvasService = doc.createElement('canvas');\n            canvasCtx = canvasService.getContext('2d');\n        }\n        const image = n;\n        const oldValue = image.crossOrigin;\n        image.crossOrigin = 'anonymous';\n        const recordInlineImage = () => {\n            image.removeEventListener('load', recordInlineImage);\n            try {\n                canvasService.width = image.naturalWidth;\n                canvasService.height = image.naturalHeight;\n                canvasCtx.drawImage(image, 0, 0);\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n            catch (err) {\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n            }\n            oldValue\n                ? (attributes.crossOrigin = oldValue)\n                : image.removeAttribute('crossorigin');\n        };\n        if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n        else\n            image.addEventListener('load', recordInlineImage);\n    }\n    if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = n.paused\n            ? 'paused'\n            : 'played';\n        attributes.rr_mediaCurrentTime = n.currentTime;\n    }\n    if (!newlyAddedElement) {\n        if (n.scrollLeft) {\n            attributes.rr_scrollLeft = n.scrollLeft;\n        }\n        if (n.scrollTop) {\n            attributes.rr_scrollTop = n.scrollTop;\n        }\n    }\n    if (needBlock) {\n        const { width, height } = n.getBoundingClientRect();\n        attributes = {\n            class: attributes.class,\n            rr_width: `${width}px`,\n            rr_height: `${height}px`,\n        };\n    }\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n        if (!n.contentDocument) {\n            attributes.rr_src = attributes.src;\n        }\n        delete attributes.src;\n    }\n    let isCustomElement;\n    try {\n        if (customElements.get(tagName))\n            isCustomElement = true;\n    }\n    catch (e) {\n    }\n    return {\n        type: NodeType$1.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock,\n        rootId,\n        isCustom: isCustomElement,\n    };\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        mirror,\n        blockClass,\n        blockSelector,\n        maskAllText,\n        unblockSelector,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if (mirror.hasNode(n)) {\n        id = mirror.getId(n);\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    mirror.add(n, serializedNode);\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        const shadowRoot = n.shadowRoot;\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            serializedNode.type === NodeType$1.Element &&\n            serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            maskAllText,\n            unblockSelector,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement$1(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    isNativeShadowDom(n.shadowRoot) &&\n                        (serializedChildNode.isShadow = true);\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode &&\n        isShadowRoot(n.parentNode) &&\n        isNativeShadowDom(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'link' &&\n        serializedNode.attributes.rel === 'stylesheet') {\n        onceStylesheetLoaded(n, () => {\n            if (onStylesheetLoad) {\n                const serializedLinkNode = serializeNodeWithId(n, {\n                    doc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedLinkNode) {\n                    onStylesheetLoad(n, serializedLinkNode);\n                }\n            }\n        }, stylesheetLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return serializeNodeWithId(n, {\n        doc: n,\n        mirror,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        skipChild: false,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        slimDOMOptions,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        preserveWhiteSpace,\n        onSerialize,\n        onIframeLoad,\n        iframeLoadTimeout,\n        onStylesheetLoad,\n        stylesheetLoadTimeout,\n        keepIframeSrcFn,\n        newlyAddedElement: false,\n    });\n}\n\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (...args) {\n        const now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        const context = this;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (_a) {\n        return () => {\n        };\n    }\n}\nlet nowTimestamp = Date.now;\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\n    nowTimestamp = () => new Date().getTime();\n}\nfunction getWindowScroll(win) {\n    var _a, _b, _c, _d, _e, _f;\n    const doc = win.document;\n    return {\n        left: doc.scrollingElement\n            ? doc.scrollingElement.scrollLeft\n            : win.pageXOffset !== undefined\n                ? win.pageXOffset\n                : (doc === null || doc === void 0 ? void 0 : doc.documentElement.scrollLeft) ||\n                    ((_b = (_a = doc === null || doc === void 0 ? void 0 : doc.body) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.scrollLeft) ||\n                    ((_c = doc === null || doc === void 0 ? void 0 : doc.body) === null || _c === void 0 ? void 0 : _c.scrollLeft) ||\n                    0,\n        top: doc.scrollingElement\n            ? doc.scrollingElement.scrollTop\n            : win.pageYOffset !== undefined\n                ? win.pageYOffset\n                : (doc === null || doc === void 0 ? void 0 : doc.documentElement.scrollTop) ||\n                    ((_e = (_d = doc === null || doc === void 0 ? void 0 : doc.body) === null || _d === void 0 ? void 0 : _d.parentElement) === null || _e === void 0 ? void 0 : _e.scrollTop) ||\n                    ((_f = doc === null || doc === void 0 ? void 0 : doc.body) === null || _f === void 0 ? void 0 : _f.scrollTop) ||\n                    0,\n    };\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    if (!el)\n        return false;\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nfunction isSerialized(n, mirror) {\n    return mirror.getId(n) !== -1;\n}\nfunction isIgnored(n, mirror) {\n    return mirror.getId(n) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction legacy_isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = (...args) => {\n            let node = args[0];\n            if (!(0 in args)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isSerializedIframe(n, mirror) {\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\n}\nfunction isSerializedStylesheet(n, mirror) {\n    return Boolean(n.nodeName === 'LINK' &&\n        n.nodeType === n.ELEMENT_NODE &&\n        n.getAttribute &&\n        n.getAttribute('rel') === 'stylesheet' &&\n        mirror.getMeta(n));\n}\nfunction hasShadowRoot(n) {\n    return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\nclass StyleSheetMirror {\n    constructor() {\n        this.id = 1;\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n    }\n    getId(stylesheet) {\n        var _a;\n        return (_a = this.styleIDMap.get(stylesheet)) !== null && _a !== void 0 ? _a : -1;\n    }\n    has(stylesheet) {\n        return this.styleIDMap.has(stylesheet);\n    }\n    add(stylesheet, id) {\n        if (this.has(stylesheet))\n            return this.getId(stylesheet);\n        let newId;\n        if (id === undefined) {\n            newId = this.id++;\n        }\n        else\n            newId = id;\n        this.styleIDMap.set(stylesheet, newId);\n        this.idStyleMap.set(newId, stylesheet);\n        return newId;\n    }\n    getStyle(id) {\n        return this.idStyleMap.get(id) || null;\n    }\n    reset() {\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n        this.id = 1;\n    }\n    generateId() {\n        return this.id++;\n    }\n}\nfunction getShadowHost(n) {\n    var _a, _b;\n    let shadowHost = null;\n    if (((_b = (_a = n.getRootNode) === null || _a === void 0 ? void 0 : _a.call(n)) === null || _b === void 0 ? void 0 : _b.nodeType) === Node.DOCUMENT_FRAGMENT_NODE &&\n        n.getRootNode().host)\n        shadowHost = n.getRootNode().host;\n    return shadowHost;\n}\nfunction getRootShadowHost(n) {\n    let rootShadowHost = n;\n    let shadowHost;\n    while ((shadowHost = getShadowHost(rootShadowHost)))\n        rootShadowHost = shadowHost;\n    return rootShadowHost;\n}\nfunction shadowHostInDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    const shadowHost = getRootShadowHost(n);\n    return doc.contains(shadowHost);\n}\nfunction inDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    return doc.contains(n) || shadowHostInDom(n);\n}\n\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\n\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = (current === null || current === void 0 ? void 0 : current.next) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        if (node.next === null) {\n            this.tail = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n            else {\n                this.tail = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n            else {\n                this.tail = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addedIds = new Set();\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                if (!n.parentNode || !inDom(n)) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(getShadowHost(n))\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                const sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    mirror: this.mirror,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    maskAllText: this.maskAllText,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    unmaskTextClass: this.unmaskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    skipChild: true,\n                    newlyAddedElement: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskInputOptions: this.maskInputOptions,\n                    maskAttributeFn: this.maskAttributeFn,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    dataURLOptions: this.dataURLOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isSerializedIframe(currentN, this.mirror)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\n                            this.stylesheetManager.trackLinkElement(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                    onStylesheetLoad: (link, childSn) => {\n                        this.stylesheetManager.attachLinkElement(link, childSn);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                    addedIds.add(sn.id);\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    let tailNode = addList.tail;\n                    while (tailNode) {\n                        const _node = tailNode;\n                        tailNode = tailNode.previous;\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (nextId === -1)\n                                continue;\n                            else if (parentId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                            else {\n                                const unhandledNode = _node.value;\n                                if (unhandledNode.parentNode &&\n                                    unhandledNode.parentNode.nodeType ===\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\n                                    const shadowHost = unhandledNode.parentNode\n                                        .host;\n                                    const parentId = this.mirror.getId(shadowHost);\n                                    if (parentId !== -1) {\n                                        node = _node;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => !addedIds.has(text.id))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => {\n                    const { attributes } = attribute;\n                    if (typeof attributes.style === 'string') {\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n                        if (diffAsStr.length < attributes.style.length) {\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\n                                attributes.style.split('var(').length) {\n                                attributes.style = attribute.styleDiff;\n                            }\n                        }\n                    }\n                    return {\n                        id: this.mirror.getId(attribute.node),\n                        attributes: attributes,\n                    };\n                })\n                    .filter((attribute) => !addedIds.has(attribute.id))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target, this.mirror)) {\n                return;\n            }\n            let unattachedDoc;\n            try {\n                unattachedDoc = document.implementation.createHTMLDocument();\n            }\n            catch (e) {\n                unattachedDoc = this.doc;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\n                        value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value)\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let attributeName = m.attributeName;\n                    let value = m.target.getAttribute(attributeName);\n                    if (attributeName === 'value') {\n                        const type = getInputType(target);\n                        const tagName = target.tagName;\n                        value = getInputValue(target, tagName, type);\n                        const isInputMasked = shouldMaskInput({\n                            maskInputOptions: this.maskInputOptions,\n                            tagName,\n                            type,\n                        });\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\n                        value = maskInputValue({\n                            isMasked: forceMask,\n                            element: target,\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                        value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributes.find((a) => a.node === m.target);\n                    if (target.tagName === 'IFRAME' &&\n                        attributeName === 'src' &&\n                        !this.keepIframeSrcFn(value)) {\n                        if (!target.contentDocument) {\n                            attributeName = 'rr_src';\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                            styleDiff: {},\n                            _unchangedStyles: {},\n                        };\n                        this.attributes.push(item);\n                    }\n                    if (attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\n                        if (attributeName === 'style') {\n                            const old = unattachedDoc.createElement('span');\n                            if (m.oldValue) {\n                                old.setAttribute('style', m.oldValue);\n                            }\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        item.styleDiff[pname] = newValue;\n                                    }\n                                    else {\n                                        item.styleDiff[pname] = [newValue, newPriority];\n                                    }\n                                }\n                                else {\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    item.styleDiff[pname] = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'childList': {\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\n                        return;\n                    }\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                            isIgnored(n, this.mirror) ||\n                            !isSerialized(n, this.mirror)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\n                                    ? true\n                                    : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (this.processedNodeManager.inOtherBuffer(n, this))\n                return;\n            if (this.addedSet.has(n) || this.movedSet.has(n))\n                return;\n            if (this.mirror.hasNode(n)) {\n                if (isIgnored(n, this.mirror)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && this.mirror.hasNode(target)) {\n                    targetId = this.mirror.getId(target);\n                }\n                if (targetId && targetId !== -1) {\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n                if (hasShadowRoot(n)) {\n                    n.shadowRoot.childNodes.forEach((childN) => {\n                        this.processedNodeManager.add(childN, this);\n                        this.genAdds(childN, n);\n                    });\n                }\n            }\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskAllText',\n            'maskTextClass',\n            'unmaskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskAttributeFn',\n            'maskTextFn',\n            'maskInputFn',\n            'keepIframeSrcFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'dataURLOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'stylesheetManager',\n            'shadowDomManager',\n            'canvasManager',\n            'processedNodeManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    if (removes.length === 0)\n        return false;\n    return _isParentRemoved(removes, n, mirror);\n}\nfunction _isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return _isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    if (set.size === 0)\n        return false;\n    return _isAncestorInSet(set, n);\n}\nfunction _isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return _isAncestorInSet(set, parentNode);\n}\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n    errorHandler = undefined;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (_a) {\n    }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    var _a, _b;\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = (_b = (_a = window === null || window === void 0 ? void 0 : window.Zone) === null || _a === void 0 ? void 0 : _a.__symbol__) === null || _b === void 0 ? void 0 : _b.call(_a, 'MutationObserver');\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => {\n        };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1(callbackWrapper((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }), callbackThreshold);\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = nowTimestamp();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: nowTimestamp() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }), threshold, {\n        trailing: false,\n    }));\n    const handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => {\n        };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    let currentPointerType = null;\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n                return;\n            }\n            let pointerType = null;\n            let thisEventKey = eventKey;\n            if ('pointerType' in event) {\n                switch (event.pointerType) {\n                    case 'mouse':\n                        pointerType = PointerTypes.Mouse;\n                        break;\n                    case 'touch':\n                        pointerType = PointerTypes.Touch;\n                        break;\n                    case 'pen':\n                        pointerType = PointerTypes.Pen;\n                        break;\n                }\n                if (pointerType === PointerTypes.Touch) {\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n                        thisEventKey = 'TouchStart';\n                    }\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n                        thisEventKey = 'TouchEnd';\n                    }\n                }\n                else if (pointerType === PointerTypes.Pen) ;\n            }\n            else if (legacy_isTouchEvent(event)) {\n                pointerType = PointerTypes.Touch;\n            }\n            if (pointerType !== null) {\n                currentPointerType = pointerType;\n                if ((thisEventKey.startsWith('Touch') &&\n                    pointerType === PointerTypes.Touch) ||\n                    (thisEventKey.startsWith('Mouse') &&\n                        pointerType === PointerTypes.Mouse)) {\n                    pointerType = null;\n                }\n            }\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n                pointerType = currentPointerType;\n                currentPointerType = null;\n            }\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)(Object.assign({ type: MouseInteractions[thisEventKey], id, x: clientX, y: clientY }, (pointerType !== null && { pointerType })));\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        let eventName = toLowerCase(eventKey);\n        const handler = getHandler(eventKey);\n        if (window.PointerEvent) {\n            switch (MouseInteractions[eventKey]) {\n                case MouseInteractions.MouseDown:\n                case MouseInteractions.MouseUp:\n                    eventName = eventName.replace('mouse', 'pointer');\n                    break;\n                case MouseInteractions.TouchStart:\n                case MouseInteractions.TouchEnd:\n                    return;\n            }\n        }\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc && doc.defaultView) {\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\n            scrollCb({\n                id,\n                x: scrollLeftTop.left,\n                y: scrollLeftTop.top,\n            });\n        }\n        else {\n            scrollCb({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), sampling.scroll || 100));\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = callbackWrapper(throttle$1(callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }), 200));\n    return on('resize', updateDimension, win);\n}\nfunction wrapEventWithUserTriggeredFlag(v, enable) {\n    const value = Object.assign({}, v);\n    if (!enable)\n        delete value.userTriggered;\n    return value;\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        const tagName = target && toUpperCase(target.tagName);\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const el = target;\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        const type = getInputType(target);\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        const isInputMasked = shouldMaskInput({\n            maskInputOptions,\n            tagName,\n            type,\n        });\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        text = maskInputValue({\n            isMasked: forceMask,\n            element: target,\n            value: text,\n            maskInputFn,\n        });\n        cbWithDedup(target, callbackWrapper(wrapEventWithUserTriggeredFlag)({ text, isChecked, userTriggered }, userTriggeredOnInput));\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        isMasked: forceMask,\n                        element: el,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, callbackWrapper(wrapEventWithUserTriggeredFlag)({\n                        text,\n                        isChecked: !isChecked,\n                        userTriggered: false,\n                    }, userTriggeredOnInput));\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            callbackWrapper(inputCb)(Object.assign(Object.assign({}, v), { id }));\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const currentWindow = doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [currentWindow.HTMLInputElement.prototype, 'value'],\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({\n                    target: this,\n                    isTrusted: false,\n                });\n            },\n        }, false, currentWindow)));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else if (childRule.parentStyleSheet) {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\n    let id, styleId;\n    if (!sheet)\n        return {};\n    if (sheet.ownerNode)\n        id = mirror.getId(sheet.ownerNode);\n    else\n        styleId = styleMirror.getId(sheet);\n    return {\n        styleId,\n        id,\n    };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => {\n        };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    let replace;\n    if (win.CSSStyleSheet.prototype.replace) {\n        replace = win.CSSStyleSheet.prototype.replace;\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replace: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    let replaceSync;\n    if (win.CSSStyleSheet.prototype.replaceSync) {\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replaceSync: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\n    var _a, _b, _c;\n    let hostId = null;\n    if (host.nodeName === '#document')\n        hostId = mirror.getId(host);\n    else\n        hostId = mirror.getId(host.host);\n    const patchTarget = host.nodeName === '#document'\n        ? (_a = host.defaultView) === null || _a === void 0 ? void 0 : _a.Document\n        : (_c = (_b = host.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView) === null || _c === void 0 ? void 0 : _c.ShadowRoot;\n    const originalPropertyDescriptor = (patchTarget === null || patchTarget === void 0 ? void 0 : patchTarget.prototype)\n        ? Object.getOwnPropertyDescriptor(patchTarget === null || patchTarget === void 0 ? void 0 : patchTarget.prototype, 'adoptedStyleSheets')\n        : undefined;\n    if (hostId === null ||\n        hostId === -1 ||\n        !patchTarget ||\n        !originalPropertyDescriptor)\n        return () => {\n        };\n    Object.defineProperty(host, 'adoptedStyleSheets', {\n        configurable: originalPropertyDescriptor.configurable,\n        enumerable: originalPropertyDescriptor.enumerable,\n        get() {\n            var _a;\n            return (_a = originalPropertyDescriptor.get) === null || _a === void 0 ? void 0 : _a.call(this);\n        },\n        set(sheets) {\n            var _a;\n            const result = (_a = originalPropertyDescriptor.set) === null || _a === void 0 ? void 0 : _a.call(this, sheets);\n            if (hostId !== null && hostId !== -1) {\n                try {\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\n                }\n                catch (e) {\n                }\n            }\n            return result;\n        },\n    });\n    return callbackWrapper(() => {\n        Object.defineProperty(host, 'adoptedStyleSheets', {\n            configurable: originalPropertyDescriptor.configurable,\n            enumerable: originalPropertyDescriptor.enumerable,\n            get: originalPropertyDescriptor.get,\n            set: originalPropertyDescriptor.set,\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a;\n            const [property, value, priority] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return setProperty.apply(thisArg, [property, value, priority]);\n            }\n            const { id, styleId } = getIdAndStyleId((_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a;\n            const [property] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return removeProperty.apply(thisArg, [property]);\n            }\n            const { id, styleId } = getIdAndStyleId((_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\n    const handler = callbackWrapper((type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n            playbackRate,\n        });\n    }), sampling.media || 500));\n    const handlers = [\n        on('play', handler(0), doc),\n        on('pause', handler(1), doc),\n        on('seeked', handler(2), doc),\n        on('volumechange', handler(3), doc),\n        on('ratechange', handler(4), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => {\n        };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                : JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout(callbackWrapper(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }), 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initSelectionObserver(param) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\n    let collapsed = true;\n    const updateSelection = callbackWrapper(() => {\n        const selection = doc.getSelection();\n        if (!selection || (collapsed && (selection === null || selection === void 0 ? void 0 : selection.isCollapsed)))\n            return;\n        collapsed = selection.isCollapsed || false;\n        const ranges = [];\n        const count = selection.rangeCount || 0;\n        for (let i = 0; i < count; i++) {\n            const range = selection.getRangeAt(i);\n            const { startContainer, startOffset, endContainer, endOffset } = range;\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\n            if (blocked)\n                continue;\n            ranges.push({\n                start: mirror.getId(startContainer),\n                startOffset,\n                end: mirror.getId(endContainer),\n                endOffset,\n            });\n        }\n        selectionCb({ ranges });\n    });\n    updateSelection();\n    return on('selectionchange', updateSelection);\n}\nfunction initCustomElementObserver({ doc, customElementCb, }) {\n    const win = doc.defaultView;\n    if (!win || !win.customElements) {\n        return () => {\n        };\n    }\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\n        return function (name, constructor, options) {\n            try {\n                customElementCb({\n                    define: {\n                        name,\n                    },\n                });\n            }\n            catch (e) {\n            }\n            return original.apply(this, [name, constructor, options]);\n        };\n    });\n    return restoreHandler;\n}\nfunction mergeHooks(o, hooks) {\n    const { mutationCb, mousemoveCb, mouseInteractionCb, scrollCb, viewportResizeCb, inputCb, mediaInteractionCb, styleSheetRuleCb, styleDeclarationCb, canvasMutationCb, fontCb, selectionCb, customElementCb, } = o;\n    o.mutationCb = (...p) => {\n        if (hooks.mutation) {\n            hooks.mutation(...p);\n        }\n        mutationCb(...p);\n    };\n    o.mousemoveCb = (...p) => {\n        if (hooks.mousemove) {\n            hooks.mousemove(...p);\n        }\n        mousemoveCb(...p);\n    };\n    o.mouseInteractionCb = (...p) => {\n        if (hooks.mouseInteraction) {\n            hooks.mouseInteraction(...p);\n        }\n        mouseInteractionCb(...p);\n    };\n    o.scrollCb = (...p) => {\n        if (hooks.scroll) {\n            hooks.scroll(...p);\n        }\n        scrollCb(...p);\n    };\n    o.viewportResizeCb = (...p) => {\n        if (hooks.viewportResize) {\n            hooks.viewportResize(...p);\n        }\n        viewportResizeCb(...p);\n    };\n    o.inputCb = (...p) => {\n        if (hooks.input) {\n            hooks.input(...p);\n        }\n        inputCb(...p);\n    };\n    o.mediaInteractionCb = (...p) => {\n        if (hooks.mediaInteaction) {\n            hooks.mediaInteaction(...p);\n        }\n        mediaInteractionCb(...p);\n    };\n    o.styleSheetRuleCb = (...p) => {\n        if (hooks.styleSheetRule) {\n            hooks.styleSheetRule(...p);\n        }\n        styleSheetRuleCb(...p);\n    };\n    o.styleDeclarationCb = (...p) => {\n        if (hooks.styleDeclaration) {\n            hooks.styleDeclaration(...p);\n        }\n        styleDeclarationCb(...p);\n    };\n    o.canvasMutationCb = (...p) => {\n        if (hooks.canvasMutation) {\n            hooks.canvasMutation(...p);\n        }\n        canvasMutationCb(...p);\n    };\n    o.fontCb = (...p) => {\n        if (hooks.font) {\n            hooks.font(...p);\n        }\n        fontCb(...p);\n    };\n    o.selectionCb = (...p) => {\n        if (hooks.selection) {\n            hooks.selection(...p);\n        }\n        selectionCb(...p);\n    };\n    o.customElementCb = (...c) => {\n        if (hooks.customElement) {\n            hooks.customElement(...c);\n        }\n        customElementCb(...c);\n    };\n}\nfunction initObservers(o, hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n        };\n    }\n    mergeHooks(o, hooks);\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o, {\n        win: currentWindow,\n    });\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts\n        ? initFontObserver(o)\n        : () => {\n        };\n    const selectionObserver = initSelectionObserver(o);\n    const customElementObserver = initCustomElementObserver(o);\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        adoptedStyleSheetObserver();\n        styleDeclarationObserver();\n        fontObserver();\n        selectionObserver();\n        customElementObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass CrossOriginIframeMirror {\n    constructor(generateIdFn) {\n        this.generateIdFn = generateIdFn;\n        this.iframeIdToRemoteIdMap = new WeakMap();\n        this.iframeRemoteIdToIdMap = new WeakMap();\n    }\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n        let id = idToRemoteIdMap.get(remoteId);\n        if (!id) {\n            id = this.generateIdFn();\n            idToRemoteIdMap.set(remoteId, id);\n            remoteIdToIdMap.set(id, remoteId);\n        }\n        return id;\n    }\n    getIds(iframe, remoteId) {\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\n    }\n    getRemoteId(iframe, id, map) {\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n        if (typeof id !== 'number')\n            return id;\n        const remoteId = remoteIdToIdMap.get(id);\n        if (!remoteId)\n            return -1;\n        return remoteId;\n    }\n    getRemoteIds(iframe, ids) {\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n    }\n    reset(iframe) {\n        if (!iframe) {\n            this.iframeIdToRemoteIdMap = new WeakMap();\n            this.iframeRemoteIdToIdMap = new WeakMap();\n            return;\n        }\n        this.iframeIdToRemoteIdMap.delete(iframe);\n        this.iframeRemoteIdToIdMap.delete(iframe);\n    }\n    getIdToRemoteIdMap(iframe) {\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n        if (!idToRemoteIdMap) {\n            idToRemoteIdMap = new Map();\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n        }\n        return idToRemoteIdMap;\n    }\n    getRemoteIdToIdMap(iframe) {\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n        if (!remoteIdToIdMap) {\n            remoteIdToIdMap = new Map();\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n        }\n        return remoteIdToIdMap;\n    }\n}\n\nclass IframeManagerNoop {\n    constructor() {\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n    }\n    addIframe() {\n    }\n    addLoadListener() {\n    }\n    attachIframe() {\n    }\n}\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.crossOriginIframeMap = new WeakMap();\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n        this.mutationCb = options.mutationCb;\n        this.wrappedEmit = options.wrappedEmit;\n        this.stylesheetManager = options.stylesheetManager;\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\n        this.mirror = options.mirror;\n        if (this.recordCrossOriginIframes) {\n            window.addEventListener('message', this.handleMessage.bind(this));\n        }\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n        if (iframeEl.contentWindow)\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        var _a;\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: this.mirror.getId(iframeEl),\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        (_a = this.loadListener) === null || _a === void 0 ? void 0 : _a.call(this, iframeEl);\n        if (iframeEl.contentDocument &&\n            iframeEl.contentDocument.adoptedStyleSheets &&\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\n    }\n    handleMessage(message) {\n        const crossOriginMessageEvent = message;\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n            return;\n        const iframeSourceWindow = message.source;\n        if (!iframeSourceWindow)\n            return;\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\n        if (!iframeEl)\n            return;\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\n        if (transformedEvent)\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\n    }\n    transformCrossOriginEvent(iframeEl, e) {\n        var _a;\n        switch (e.type) {\n            case EventType.FullSnapshot: {\n                this.crossOriginIframeMirror.reset(iframeEl);\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\n                this.replaceIdOnNode(e.data.node, iframeEl);\n                const rootId = e.data.node.id;\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n                this.patchRootIdOnNode(e.data.node, rootId);\n                return {\n                    timestamp: e.timestamp,\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Mutation,\n                        adds: [\n                            {\n                                parentId: this.mirror.getId(iframeEl),\n                                nextId: null,\n                                node: e.data.node,\n                            },\n                        ],\n                        removes: [],\n                        texts: [],\n                        attributes: [],\n                        isAttachIframe: true,\n                    },\n                };\n            }\n            case EventType.Meta:\n            case EventType.Load:\n            case EventType.DomContentLoaded: {\n                return false;\n            }\n            case EventType.Plugin: {\n                return e;\n            }\n            case EventType.Custom: {\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\n                return e;\n            }\n            case EventType.IncrementalSnapshot: {\n                switch (e.data.source) {\n                    case IncrementalSource.Mutation: {\n                        e.data.adds.forEach((n) => {\n                            this.replaceIds(n, iframeEl, [\n                                'parentId',\n                                'nextId',\n                                'previousId',\n                            ]);\n                            this.replaceIdOnNode(n.node, iframeEl);\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\n                        });\n                        e.data.removes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\n                        });\n                        e.data.attributes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        e.data.texts.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.Drag:\n                    case IncrementalSource.TouchMove:\n                    case IncrementalSource.MouseMove: {\n                        e.data.positions.forEach((p) => {\n                            this.replaceIds(p, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.ViewportResize: {\n                        return false;\n                    }\n                    case IncrementalSource.MediaInteraction:\n                    case IncrementalSource.MouseInteraction:\n                    case IncrementalSource.Scroll:\n                    case IncrementalSource.CanvasMutation:\n                    case IncrementalSource.Input: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        return e;\n                    }\n                    case IncrementalSource.StyleSheetRule:\n                    case IncrementalSource.StyleDeclaration: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\n                        return e;\n                    }\n                    case IncrementalSource.Font: {\n                        return e;\n                    }\n                    case IncrementalSource.Selection: {\n                        e.data.ranges.forEach((range) => {\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.AdoptedStyleSheet: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\n                        (_a = e.data.styles) === null || _a === void 0 ? void 0 : _a.forEach((style) => {\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\n                        });\n                        return e;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    replace(iframeMirror, obj, iframeEl, keys) {\n        for (const key of keys) {\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\n                continue;\n            if (Array.isArray(obj[key])) {\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\n            }\n            else {\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n            }\n        }\n        return obj;\n    }\n    replaceIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n    }\n    replaceStyleIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n    }\n    replaceIdOnNode(node, iframeEl) {\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.replaceIdOnNode(child, iframeEl);\n            });\n        }\n    }\n    patchRootIdOnNode(node, rootId) {\n        if (node.type !== NodeType$1.Document && !node.rootId)\n            node.rootId = rootId;\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.patchRootIdOnNode(child, rootId);\n            });\n        }\n    }\n}\n\nclass ShadowDomManagerNoop {\n    init() {\n    }\n    addShadowRoot() {\n    }\n    observeAttachShadow() {\n    }\n    reset() {\n    }\n}\nclass ShadowDomManager {\n    constructor(options) {\n        this.shadowDoms = new WeakSet();\n        this.restoreHandlers = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        this.init();\n    }\n    init() {\n        this.reset();\n        this.patchAttachShadow(Element, document);\n    }\n    addShadowRoot(shadowRoot, doc) {\n        if (!isNativeShadowDom(shadowRoot))\n            return;\n        if (this.shadowDoms.has(shadowRoot))\n            return;\n        this.shadowDoms.add(shadowRoot);\n        const observer = initMutationObserver(Object.assign(Object.assign({}, this.bypassOptions), { doc, mutationCb: this.mutationCb, mirror: this.mirror, shadowDomManager: this }), shadowRoot);\n        this.restoreHandlers.push(() => observer.disconnect());\n        this.restoreHandlers.push(initScrollObserver(Object.assign(Object.assign({}, this.bypassOptions), { scrollCb: this.scrollCb, doc: shadowRoot, mirror: this.mirror })));\n        setTimeout(() => {\n            if (shadowRoot.adoptedStyleSheets &&\n                shadowRoot.adoptedStyleSheets.length > 0)\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\n                mirror: this.mirror,\n                stylesheetManager: this.bypassOptions.stylesheetManager,\n            }, shadowRoot));\n        }, 0);\n    }\n    observeAttachShadow(iframeElement) {\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\n            return;\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\n    }\n    patchAttachShadow(element, doc) {\n        const manager = this;\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\n            return function (option) {\n                const shadowRoot = original.call(this, option);\n                if (this.shadowRoot && inDom(this))\n                    manager.addShadowRoot(this.shadowRoot, doc);\n                return shadowRoot;\n            };\n        }));\n    }\n    reset() {\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.shadowDoms = new WeakSet();\n    }\n}\n\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\n\n/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\n\nconst canvasVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    let contextMap = canvasVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        canvasVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map((arg) => serializeArg(arg, win, ctx));\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        const name = value.constructor.name;\n        const base64 = encode(value);\n        return {\n            rr_type: name,\n            base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        const name = value.constructor.name;\n        const { src } = value;\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof HTMLCanvasElement) {\n        const name = 'HTMLImageElement';\n        const src = value.toDataURL();\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        const name = value.constructor.name;\n        const index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name,\n            index: index,\n        };\n    }\n    return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n    return [...args].map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\n};\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function (...args) {\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        setTimeout(() => {\n                            const recordArgs = serializeArgs([...args], win, this);\n                            cb(this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction getNormalizedContextName(contextType) {\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\n}\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\n    const handlers = [];\n    try {\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType, ...args) {\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\n                    const ctxName = getNormalizedContextName(contextType);\n                    if (!('__context' in this))\n                        this.__context = ctxName;\n                    if (setPreserveDrawingBufferToTrue &&\n                        ['webgl', 'webgl2'].includes(ctxName)) {\n                        if (args[0] && typeof args[0] === 'object') {\n                            const contextAttributes = args[0];\n                            if (!contextAttributes.preserveDrawingBuffer) {\n                                contextAttributes.preserveDrawingBuffer = true;\n                            }\n                        }\n                        else {\n                            args.splice(0, 1, {\n                                preserveDrawingBuffer: true,\n                            });\n                        }\n                    }\n                }\n                return original.apply(this, [contextType, ...args]);\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (_a) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n        if ([\n            'isContextLost',\n            'canvas',\n            'drawingBufferWidth',\n            'drawingBufferHeight',\n        ].includes(prop)) {\n            continue;\n        }\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(prototype, prop, function (original) {\n                return function (...args) {\n                    const result = original.apply(this, args);\n                    saveWebGLVar(result, win, this);\n                    if ('tagName' in this.canvas &&\n                        !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        const recordArgs = serializeArgs([...args], win, this);\n                        const mutation = {\n                            type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction decodeBase64(base64, enableUnicode) {\n    var binaryString = atob(base64);\n    if (enableUnicode) {\n        var binaryView = new Uint8Array(binaryString.length);\n        for (var i = 0, n = binaryString.length; i < n; ++i) {\n            binaryView[i] = binaryString.charCodeAt(i);\n        }\n        return String.fromCharCode.apply(null, new Uint16Array(binaryView.buffer));\n    }\n    return binaryString;\n}\n\nfunction createURL(base64, sourcemapArg, enableUnicodeArg) {\n    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;\n    var enableUnicode = enableUnicodeArg === undefined ? false : enableUnicodeArg;\n    var source = decodeBase64(base64, enableUnicode);\n    var start = source.indexOf('\\n', 10) + 1;\n    var body = source.substring(start) + (sourcemap ? '\\/\\/# sourceMappingURL=' + sourcemap : '');\n    var blob = new Blob([body], { type: 'application/javascript' });\n    return URL.createObjectURL(blob);\n}\n\nfunction createBase64WorkerFactory(base64, sourcemapArg, enableUnicodeArg) {\n    var url;\n    return function WorkerFactory(options) {\n        url = url || createURL(base64, sourcemapArg, enableUnicodeArg);\n        return new Worker(url, options);\n    };\n}\n\nvar WorkerFactory = createBase64WorkerFactory('Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwooZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIC8qISAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KICAgIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLg0KDQogICAgUGVybWlzc2lvbiB0byB1c2UsIGNvcHksIG1vZGlmeSwgYW5kL29yIGRpc3RyaWJ1dGUgdGhpcyBzb2Z0d2FyZSBmb3IgYW55DQogICAgcHVycG9zZSB3aXRoIG9yIHdpdGhvdXQgZmVlIGlzIGhlcmVieSBncmFudGVkLg0KDQogICAgVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIgQU5EIFRIRSBBVVRIT1IgRElTQ0xBSU1TIEFMTCBXQVJSQU5USUVTIFdJVEgNCiAgICBSRUdBUkQgVE8gVEhJUyBTT0ZUV0FSRSBJTkNMVURJTkcgQUxMIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkNCiAgICBBTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsDQogICAgSU5ESVJFQ1QsIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBPUiBBTlkgREFNQUdFUyBXSEFUU09FVkVSIFJFU1VMVElORyBGUk9NDQogICAgTE9TUyBPRiBVU0UsIERBVEEgT1IgUFJPRklUUywgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1INCiAgICBPVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SDQogICAgUEVSRk9STUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS4NCiAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLw0KDQogICAgZnVuY3Rpb24gX19hd2FpdGVyKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikgew0KICAgICAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH0NCiAgICAgICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7DQogICAgICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9DQogICAgICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvclsidGhyb3ciXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9DQogICAgICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfQ0KICAgICAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpOw0KICAgICAgICB9KTsNCiAgICB9CgogICAgLyoKICAgICAqIGJhc2U2NC1hcnJheWJ1ZmZlciAxLjAuMSA8aHR0cHM6Ly9naXRodWIuY29tL25pa2xhc3ZoL2Jhc2U2NC1hcnJheWJ1ZmZlcj4KICAgICAqIENvcHlyaWdodCAoYykgMjAyMSBOaWtsYXMgdm9uIEhlcnR6ZW4gPGh0dHBzOi8vaGVydHplbi5jb20+CiAgICAgKiBSZWxlYXNlZCB1bmRlciBNSVQgTGljZW5zZQogICAgICovCiAgICB2YXIgY2hhcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLyc7CiAgICAvLyBVc2UgYSBsb29rdXAgdGFibGUgdG8gZmluZCB0aGUgaW5kZXguCiAgICB2YXIgbG9va3VwID0gdHlwZW9mIFVpbnQ4QXJyYXkgPT09ICd1bmRlZmluZWQnID8gW10gOiBuZXcgVWludDhBcnJheSgyNTYpOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGFycy5sZW5ndGg7IGkrKykgewogICAgICAgIGxvb2t1cFtjaGFycy5jaGFyQ29kZUF0KGkpXSA9IGk7CiAgICB9CiAgICB2YXIgZW5jb2RlID0gZnVuY3Rpb24gKGFycmF5YnVmZmVyKSB7CiAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXlidWZmZXIpLCBpLCBsZW4gPSBieXRlcy5sZW5ndGgsIGJhc2U2NCA9ICcnOwogICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gMykgewogICAgICAgICAgICBiYXNlNjQgKz0gY2hhcnNbYnl0ZXNbaV0gPj4gMl07CiAgICAgICAgICAgIGJhc2U2NCArPSBjaGFyc1soKGJ5dGVzW2ldICYgMykgPDwgNCkgfCAoYnl0ZXNbaSArIDFdID4+IDQpXTsKICAgICAgICAgICAgYmFzZTY0ICs9IGNoYXJzWygoYnl0ZXNbaSArIDFdICYgMTUpIDw8IDIpIHwgKGJ5dGVzW2kgKyAyXSA+PiA2KV07CiAgICAgICAgICAgIGJhc2U2NCArPSBjaGFyc1tieXRlc1tpICsgMl0gJiA2M107CiAgICAgICAgfQogICAgICAgIGlmIChsZW4gJSAzID09PSAyKSB7CiAgICAgICAgICAgIGJhc2U2NCA9IGJhc2U2NC5zdWJzdHJpbmcoMCwgYmFzZTY0Lmxlbmd0aCAtIDEpICsgJz0nOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChsZW4gJSAzID09PSAxKSB7CiAgICAgICAgICAgIGJhc2U2NCA9IGJhc2U2NC5zdWJzdHJpbmcoMCwgYmFzZTY0Lmxlbmd0aCAtIDIpICsgJz09JzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGJhc2U2NDsKICAgIH07CgogICAgY29uc3QgbGFzdEJsb2JNYXAgPSBuZXcgTWFwKCk7DQogICAgY29uc3QgdHJhbnNwYXJlbnRCbG9iTWFwID0gbmV3IE1hcCgpOw0KICAgIGZ1bmN0aW9uIGdldFRyYW5zcGFyZW50QmxvYkZvcih3aWR0aCwgaGVpZ2h0LCBkYXRhVVJMT3B0aW9ucykgew0KICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgew0KICAgICAgICAgICAgY29uc3QgaWQgPSBgJHt3aWR0aH0tJHtoZWlnaHR9YDsNCiAgICAgICAgICAgIGlmICgnT2Zmc2NyZWVuQ2FudmFzJyBpbiBnbG9iYWxUaGlzKSB7DQogICAgICAgICAgICAgICAgaWYgKHRyYW5zcGFyZW50QmxvYk1hcC5oYXMoaWQpKQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNwYXJlbnRCbG9iTWFwLmdldChpZCk7DQogICAgICAgICAgICAgICAgY29uc3Qgb2Zmc2NyZWVuID0gbmV3IE9mZnNjcmVlbkNhbnZhcyh3aWR0aCwgaGVpZ2h0KTsNCiAgICAgICAgICAgICAgICBvZmZzY3JlZW4uZ2V0Q29udGV4dCgnMmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBibG9iID0geWllbGQgb2Zmc2NyZWVuLmNvbnZlcnRUb0Jsb2IoZGF0YVVSTE9wdGlvbnMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFycmF5QnVmZmVyID0geWllbGQgYmxvYi5hcnJheUJ1ZmZlcigpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJhc2U2NCA9IGVuY29kZShhcnJheUJ1ZmZlcik7DQogICAgICAgICAgICAgICAgdHJhbnNwYXJlbnRCbG9iTWFwLnNldChpZCwgYmFzZTY0KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gYmFzZTY0Ow0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICB9DQogICAgY29uc3Qgd29ya2VyID0gc2VsZjsNCiAgICB3b3JrZXIub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsNCiAgICAgICAgICAgIGlmICgnT2Zmc2NyZWVuQ2FudmFzJyBpbiBnbG9iYWxUaGlzKSB7DQogICAgICAgICAgICAgICAgY29uc3QgeyBpZCwgYml0bWFwLCB3aWR0aCwgaGVpZ2h0LCBkYXRhVVJMT3B0aW9ucyB9ID0gZS5kYXRhOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zcGFyZW50QmFzZTY0ID0gZ2V0VHJhbnNwYXJlbnRCbG9iRm9yKHdpZHRoLCBoZWlnaHQsIGRhdGFVUkxPcHRpb25zKTsNCiAgICAgICAgICAgICAgICBjb25zdCBvZmZzY3JlZW4gPSBuZXcgT2Zmc2NyZWVuQ2FudmFzKHdpZHRoLCBoZWlnaHQpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGN0eCA9IG9mZnNjcmVlbi5nZXRDb250ZXh0KCcyZCcpOw0KICAgICAgICAgICAgICAgIGN0eC5kcmF3SW1hZ2UoYml0bWFwLCAwLCAwKTsNCiAgICAgICAgICAgICAgICBiaXRtYXAuY2xvc2UoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBibG9iID0geWllbGQgb2Zmc2NyZWVuLmNvbnZlcnRUb0Jsb2IoZGF0YVVSTE9wdGlvbnMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSBibG9iLnR5cGU7DQogICAgICAgICAgICAgICAgY29uc3QgYXJyYXlCdWZmZXIgPSB5aWVsZCBibG9iLmFycmF5QnVmZmVyKCk7DQogICAgICAgICAgICAgICAgY29uc3QgYmFzZTY0ID0gZW5jb2RlKGFycmF5QnVmZmVyKTsNCiAgICAgICAgICAgICAgICBpZiAoIWxhc3RCbG9iTWFwLmhhcyhpZCkgJiYgKHlpZWxkIHRyYW5zcGFyZW50QmFzZTY0KSA9PT0gYmFzZTY0KSB7DQogICAgICAgICAgICAgICAgICAgIGxhc3RCbG9iTWFwLnNldChpZCwgYmFzZTY0KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdvcmtlci5wb3N0TWVzc2FnZSh7IGlkIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAobGFzdEJsb2JNYXAuZ2V0KGlkKSA9PT0gYmFzZTY0KQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gd29ya2VyLnBvc3RNZXNzYWdlKHsgaWQgfSk7DQogICAgICAgICAgICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsNCiAgICAgICAgICAgICAgICAgICAgaWQsDQogICAgICAgICAgICAgICAgICAgIHR5cGUsDQogICAgICAgICAgICAgICAgICAgIGJhc2U2NCwNCiAgICAgICAgICAgICAgICAgICAgd2lkdGgsDQogICAgICAgICAgICAgICAgICAgIGhlaWdodCwNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICBsYXN0QmxvYk1hcC5zZXQoaWQsIGJhc2U2NCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gd29ya2VyLnBvc3RNZXNzYWdlKHsgaWQ6IGUuZGF0YS5pZCB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgfTsKCn0pKCk7Cgo=', null, false);\n\nclass CanvasManagerNoop {\n    reset() {\n    }\n    freeze() {\n    }\n    unfreeze() {\n    }\n    lock() {\n    }\n    unlock() {\n    }\n}\nclass CanvasManager {\n    reset() {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    }\n    freeze() {\n        this.frozen = true;\n    }\n    unfreeze() {\n        this.frozen = false;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    constructor(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = (target, mutation) => {\n            const newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, recordCanvas, dataURLOptions, } = options;\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        if (recordCanvas && sampling === 'all')\n            this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\n        if (recordCanvas && typeof sampling === 'number')\n            this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, {\n                dataURLOptions,\n            });\n    }\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, options) {\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\n        const snapshotInProgressMap = new Map();\n        const worker = new WorkerFactory();\n        worker.onmessage = (e) => {\n            const { id } = e.data;\n            snapshotInProgressMap.set(id, false);\n            if (!('base64' in e.data))\n                return;\n            const { base64, type, width, height } = e.data;\n            this.mutationCb({\n                id,\n                type: CanvasContext['2D'],\n                commands: [\n                    {\n                        property: 'clearRect',\n                        args: [0, 0, width, height],\n                    },\n                    {\n                        property: 'drawImage',\n                        args: [\n                            {\n                                rr_type: 'ImageBitmap',\n                                args: [\n                                    {\n                                        rr_type: 'Blob',\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\n                                        type,\n                                    },\n                                ],\n                            },\n                            0,\n                            0,\n                        ],\n                    },\n                ],\n            });\n        };\n        const timeBetweenSnapshots = 1000 / fps;\n        let lastSnapshotTime = 0;\n        let rafId;\n        const getCanvas = () => {\n            const matchedCanvas = [];\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\n                    matchedCanvas.push(canvas);\n                }\n            });\n            return matchedCanvas;\n        };\n        const takeCanvasSnapshots = (timestamp) => {\n            if (lastSnapshotTime &&\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\n                rafId = requestAnimationFrame(takeCanvasSnapshots);\n                return;\n            }\n            lastSnapshotTime = timestamp;\n            getCanvas()\n                .forEach((canvas) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const id = this.mirror.getId(canvas);\n                if (snapshotInProgressMap.get(id))\n                    return;\n                snapshotInProgressMap.set(id, true);\n                if (['webgl', 'webgl2'].includes(canvas.__context)) {\n                    const context = canvas.getContext(canvas.__context);\n                    if (((_a = context === null || context === void 0 ? void 0 : context.getContextAttributes()) === null || _a === void 0 ? void 0 : _a.preserveDrawingBuffer) === false) {\n                        context.clear(context.COLOR_BUFFER_BIT);\n                    }\n                }\n                const bitmap = yield createImageBitmap(canvas);\n                worker.postMessage({\n                    id,\n                    bitmap,\n                    width: canvas.width,\n                    height: canvas.height,\n                    dataURLOptions: options.dataURLOptions,\n                }, [bitmap]);\n            }));\n            rafId = requestAnimationFrame(takeCanvasSnapshots);\n        };\n        rafId = requestAnimationFrame(takeCanvasSnapshots);\n        this.resetObservers = () => {\n            canvasContextReset();\n            cancelAnimationFrame(rafId);\n        };\n    }\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        this.resetObservers = () => {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    }\n    startPendingCanvasMutationFlusher() {\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n        const setLatestRAFTimestamp = (timestamp) => {\n            this.rafStamps.latestId = timestamp;\n            requestAnimationFrame(setLatestRAFTimestamp);\n        };\n        requestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n        this.pendingCanvasMutations.forEach((values, canvas) => {\n            const id = this.mirror.getId(canvas);\n            this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        const values = valuesWithType.map((value) => {\n            const rest = __rest(value, [\"type\"]);\n            return rest;\n        });\n        const { type } = valuesWithType[0];\n        this.mutationCb({ id, type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    }\n}\n\nclass StylesheetManager {\n    constructor(options) {\n        this.trackedLinkElements = new WeakSet();\n        this.styleMirror = new StyleSheetMirror();\n        this.mutationCb = options.mutationCb;\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n    }\n    attachLinkElement(linkEl, childSn) {\n        if ('_cssText' in childSn.attributes)\n            this.mutationCb({\n                adds: [],\n                removes: [],\n                texts: [],\n                attributes: [\n                    {\n                        id: childSn.id,\n                        attributes: childSn\n                            .attributes,\n                    },\n                ],\n            });\n        this.trackLinkElement(linkEl);\n    }\n    trackLinkElement(linkEl) {\n        if (this.trackedLinkElements.has(linkEl))\n            return;\n        this.trackedLinkElements.add(linkEl);\n        this.trackStylesheetInLinkElement(linkEl);\n    }\n    adoptStyleSheets(sheets, hostId) {\n        if (sheets.length === 0)\n            return;\n        const adoptedStyleSheetData = {\n            id: hostId,\n            styleIds: [],\n        };\n        const styles = [];\n        for (const sheet of sheets) {\n            let styleId;\n            if (!this.styleMirror.has(sheet)) {\n                styleId = this.styleMirror.add(sheet);\n                styles.push({\n                    styleId,\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\n                        rule: stringifyRule(r),\n                        index,\n                    })),\n                });\n            }\n            else\n                styleId = this.styleMirror.getId(sheet);\n            adoptedStyleSheetData.styleIds.push(styleId);\n        }\n        if (styles.length > 0)\n            adoptedStyleSheetData.styles = styles;\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\n    }\n    reset() {\n        this.styleMirror.reset();\n        this.trackedLinkElements = new WeakSet();\n    }\n    trackStylesheetInLinkElement(linkEl) {\n    }\n}\n\nclass ProcessedNodeManager {\n    constructor() {\n        this.nodeMap = new WeakMap();\n        this.loop = true;\n        this.periodicallyClear();\n    }\n    periodicallyClear() {\n        requestAnimationFrame(() => {\n            this.clear();\n            if (this.loop)\n                this.periodicallyClear();\n        });\n    }\n    inOtherBuffer(node, thisBuffer) {\n        const buffers = this.nodeMap.get(node);\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\n    }\n    add(node, buffer) {\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\n    }\n    clear() {\n        this.nodeMap = new WeakMap();\n    }\n    destroy() {\n        this.loop = false;\n    }\n}\n\nfunction wrapEvent(e) {\n    return Object.assign(Object.assign({}, e), { timestamp: nowTimestamp() });\n}\nlet wrappedEmit;\nlet takeFullSnapshot;\nlet canvasManager;\nlet recording = false;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, hooks, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\n        ? options.recordAfter\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, } = options;\n    registerErrorHandler(errorHandler);\n    const inEmittingFrame = recordCrossOriginIframes\n        ? window.parent === window\n        : true;\n    let passEmitsToParent = false;\n    if (!inEmittingFrame) {\n        try {\n            if (window.parent.document) {\n                passEmitsToParent = false;\n            }\n        }\n        catch (e) {\n            passEmitsToParent = true;\n        }\n    }\n    if (inEmittingFrame && !emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    mirror.reset();\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn &&\n            !passEmitsToParent) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (e, isCheckout) => {\n        var _a;\n        if (((_a = mutationBuffers[0]) === null || _a === void 0 ? void 0 : _a.isFrozen()) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        if (inEmittingFrame) {\n            emit === null || emit === void 0 ? void 0 : emit(eventProcessor(e), isCheckout);\n        }\n        else if (passEmitsToParent) {\n            const message = {\n                type: 'rrweb',\n                event: eventProcessor(e),\n                origin: window.location.origin,\n                isCheckout,\n            };\n            window.parent.postMessage(message, '*');\n        }\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: Object.assign({ source: IncrementalSource.Mutation }, m),\n        }));\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.Scroll }, p),\n    }));\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.CanvasMutation }, p),\n    }));\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.AdoptedStyleSheet }, a),\n    }));\n    const stylesheetManager = new StylesheetManager({\n        mutationCb: wrappedMutationEmit,\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\n    });\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\n        ? new IframeManagerNoop()\n        : new IframeManager({\n            mirror,\n            mutationCb: wrappedMutationEmit,\n            stylesheetManager: stylesheetManager,\n            recordCrossOriginIframes,\n            wrappedEmit,\n        });\n    for (const plugin of plugins || []) {\n        if (plugin.getMirror)\n            plugin.getMirror({\n                nodeMirror: mirror,\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\n            });\n    }\n    const processedNodeManager = new ProcessedNodeManager();\n    canvasManager =\n        typeof __RRWEB_EXCLUDE_CANVAS__ === 'boolean' && __RRWEB_EXCLUDE_CANVAS__\n            ? new CanvasManagerNoop()\n            : new CanvasManager({\n                recordCanvas,\n                mutationCb: wrappedCanvasMutationEmit,\n                win: window,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                mirror,\n                sampling: sampling.canvas,\n                dataURLOptions,\n            });\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\n        __RRWEB_EXCLUDE_SHADOW_DOM__\n        ? new ShadowDomManagerNoop()\n        : new ShadowDomManager({\n            mutationCb: wrappedMutationEmit,\n            scrollCb: wrappedScrollEmit,\n            bypassOptions: {\n                onMutation,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                inlineStylesheet,\n                maskInputOptions,\n                dataURLOptions,\n                maskAttributeFn,\n                maskTextFn,\n                maskInputFn,\n                recordCanvas,\n                inlineImages,\n                sampling,\n                slimDOMOptions,\n                iframeManager,\n                stylesheetManager,\n                canvasManager,\n                keepIframeSrcFn,\n                processedNodeManager,\n            },\n            mirror,\n        });\n    takeFullSnapshot = (isCheckout = false) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }), isCheckout);\n        stylesheetManager.reset();\n        shadowDomManager.init();\n        mutationBuffers.forEach((buf) => buf.lock());\n        const node = snapshot(document, {\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskAttributeFn,\n            maskInputFn,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            dataURLOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isSerializedIframe(n, mirror)) {\n                    iframeManager.addIframe(n);\n                }\n                if (isSerializedStylesheet(n, mirror)) {\n                    stylesheetManager.trackLinkElement(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            onStylesheetLoad: (linkEl, childSn) => {\n                stylesheetManager.attachLinkElement(linkEl, childSn);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        wrappedEmit(wrapEvent({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: getWindowScroll(window),\n            },\n        }), isCheckout);\n        mutationBuffers.forEach((buf) => buf.unlock());\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\n    };\n    try {\n        const handlers = [];\n        const observe = (doc) => {\n            var _a;\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                })),\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MouseInteraction }, d),\n                })),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.ViewportResize }, d),\n                })),\n                inputCb: (v) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Input }, v),\n                })),\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MediaInteraction }, p),\n                })),\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleSheetRule }, r),\n                })),\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleDeclaration }, r),\n                })),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Font }, p),\n                })),\n                selectionCb: (p) => {\n                    wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: Object.assign({ source: IncrementalSource.Selection }, p),\n                    }));\n                },\n                customElementCb: (c) => {\n                    wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: Object.assign({ source: IncrementalSource.CustomElement }, c),\n                    }));\n                },\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAttributeFn,\n                maskInputFn,\n                maskTextFn,\n                keepIframeSrcFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                dataURLOptions,\n                mirror,\n                iframeManager,\n                stylesheetManager,\n                shadowDomManager,\n                processedNodeManager,\n                canvasManager,\n                ignoreCSSAttributes,\n                plugins: ((_a = plugins === null || plugins === void 0 ? void 0 : plugins.filter((p) => p.observer)) === null || _a === void 0 ? void 0 : _a.map((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit(wrapEvent({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    })),\n                }))) || [],\n            }, hooks);\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n            recording = true;\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('DOMContentLoaded', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.DomContentLoaded,\n                    data: {},\n                }));\n                if (recordAfter === 'DOMContentLoaded')\n                    init();\n            }));\n            handlers.push(on('load', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.Load,\n                    data: {},\n                }));\n                if (recordAfter === 'load')\n                    init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n            processedNodeManager.destroy();\n            recording = false;\n            unregisterErrorHandler();\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nrecord.addCustomEvent = (tag, payload) => {\n    if (!recording) {\n        throw new Error('please add custom event after start recording');\n    }\n    wrappedEmit(wrapEvent({\n        type: EventType.Custom,\n        data: {\n            tag,\n            payload,\n        },\n    }));\n};\nrecord.freezePage = () => {\n    mutationBuffers.forEach((buf) => buf.freeze());\n};\nrecord.takeFullSnapshot = (isCheckout) => {\n    if (!recording) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    takeFullSnapshot(isCheckout);\n};\nrecord.mirror = mirror;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    void replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  const closestInteractive = target.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || target;\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  fill(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const mutationHandler = () => {\n      this._lastMutation = nowInSeconds();\n    };\n\n    const scrollHandler = () => {\n      this._lastScroll = nowInSeconds();\n    };\n\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    const clickHandler = (event) => {\n      if (!event.target) {\n        return;\n      }\n\n      const node = getClickTargetNode(event);\n      if (node) {\n        this._handleMultiClick(node );\n      }\n    };\n\n    const obs = new MutationObserver(mutationHandler);\n\n    obs.observe(WINDOW.document.documentElement, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n\n    WINDOW.addEventListener('scroll', scrollHandler, { passive: true });\n    WINDOW.addEventListener('click', clickHandler, { passive: true });\n\n    this._teardown = () => {\n      WINDOW.removeEventListener('scroll', scrollHandler);\n      WINDOW.removeEventListener('click', clickHandler);\n      cleanupWindowOpen();\n\n      obs.disconnect();\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** Handle a click */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick && (handlerData.event );\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text ).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event) : getTargetNode(handlerData.event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node) {\n  return node.type === NodeType.Element;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES\n\n = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nfunction getLargestContentfulPaint(metric\n\n) {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] ;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nfunction setupPerformanceObserver(replay) {\n  function addPerformanceEntry(entry) {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }) {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks = [];\n\n  (['navigation', 'paint', 'resource'] ).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n\nconst r = `var t={},e={};function a(t){let e=t.length;for(;--e>=0;)t[e]=0}const s=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),r=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),n=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),i=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),_=new Array(576);a(_);const l=new Array(60);a(l);const h=new Array(512);a(h);const o=new Array(256);a(o);const d=new Array(29);a(d);const u=new Array(30);function f(t,e,a,s,r){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=s,this.max_length=r,this.has_stree=t&&t.length}let c,p,g;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}a(u);const m=t=>t<256?h[t]:h[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},y=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},v=(t,e,a)=>{y(t,a[2*e],a[2*e+1])},z=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},k=(t,e,a)=>{const s=new Array(16);let r,n,i=0;for(r=1;r<=15;r++)i=i+a[r-1]<<1,s[r]=i;for(n=0;n<=e;n++){let e=t[2*n+1];0!==e&&(t[2*n]=z(s[e]++,e))}},x=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},A=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},E=(t,e,a,s)=>{const r=2*e,n=2*a;return t[r]<t[n]||t[r]===t[n]&&s[e]<=s[a]},Z=(t,e,a)=>{const s=t.heap[a];let r=a<<1;for(;r<=t.heap_len&&(r<t.heap_len&&E(e,t.heap[r+1],t.heap[r],t.depth)&&r++,!E(e,s,t.heap[r],t.depth));)t.heap[a]=t.heap[r],a=r,r<<=1;t.heap[a]=s},S=(t,e,a)=>{let n,i,_,l,h=0;if(0!==t.sym_next)do{n=255&t.pending_buf[t.sym_buf+h++],n+=(255&t.pending_buf[t.sym_buf+h++])<<8,i=t.pending_buf[t.sym_buf+h++],0===n?v(t,i,e):(_=o[i],v(t,_+256+1,e),l=s[_],0!==l&&(i-=d[_],y(t,i,l)),n--,_=m(n),v(t,_,a),l=r[_],0!==l&&(n-=u[_],y(t,n,l)))}while(h<t.sym_next);v(t,256,e)},U=(t,e)=>{const a=e.dyn_tree,s=e.stat_desc.static_tree,r=e.stat_desc.has_stree,n=e.stat_desc.elems;let i,_,l,h=-1;for(t.heap_len=0,t.heap_max=573,i=0;i<n;i++)0!==a[2*i]?(t.heap[++t.heap_len]=h=i,t.depth[i]=0):a[2*i+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,r&&(t.static_len-=s[2*l+1]);for(e.max_code=h,i=t.heap_len>>1;i>=1;i--)Z(t,a,i);l=n;do{i=t.heap[1],t.heap[1]=t.heap[t.heap_len--],Z(t,a,1),_=t.heap[1],t.heap[--t.heap_max]=i,t.heap[--t.heap_max]=_,a[2*l]=a[2*i]+a[2*_],t.depth[l]=(t.depth[i]>=t.depth[_]?t.depth[i]:t.depth[_])+1,a[2*i+1]=a[2*_+1]=l,t.heap[1]=l++,Z(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,s=e.max_code,r=e.stat_desc.static_tree,n=e.stat_desc.has_stree,i=e.stat_desc.extra_bits,_=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,o,d,u,f,c,p=0;for(u=0;u<=15;u++)t.bl_count[u]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)o=t.heap[h],u=a[2*a[2*o+1]+1]+1,u>l&&(u=l,p++),a[2*o+1]=u,o>s||(t.bl_count[u]++,f=0,o>=_&&(f=i[o-_]),c=a[2*o],t.opt_len+=c*(u+f),n&&(t.static_len+=c*(r[2*o+1]+f)));if(0!==p){do{for(u=l-1;0===t.bl_count[u];)u--;t.bl_count[u]--,t.bl_count[u+1]+=2,t.bl_count[l]--,p-=2}while(p>0);for(u=l;0!==u;u--)for(o=t.bl_count[u];0!==o;)d=t.heap[--h],d>s||(a[2*d+1]!==u&&(t.opt_len+=(u-a[2*d+1])*a[2*d],a[2*d+1]=u),o--)}})(t,e),k(a,h,t.bl_count)},R=(t,e,a)=>{let s,r,n=-1,i=e[1],_=0,l=7,h=4;for(0===i&&(l=138,h=3),e[2*(a+1)+1]=65535,s=0;s<=a;s++)r=i,i=e[2*(s+1)+1],++_<l&&r===i||(_<h?t.bl_tree[2*r]+=_:0!==r?(r!==n&&t.bl_tree[2*r]++,t.bl_tree[32]++):_<=10?t.bl_tree[34]++:t.bl_tree[36]++,_=0,n=r,0===i?(l=138,h=3):r===i?(l=6,h=3):(l=7,h=4))},L=(t,e,a)=>{let s,r,n=-1,i=e[1],_=0,l=7,h=4;for(0===i&&(l=138,h=3),s=0;s<=a;s++)if(r=i,i=e[2*(s+1)+1],!(++_<l&&r===i)){if(_<h)do{v(t,r,t.bl_tree)}while(0!=--_);else 0!==r?(r!==n&&(v(t,r,t.bl_tree),_--),v(t,16,t.bl_tree),y(t,_-3,2)):_<=10?(v(t,17,t.bl_tree),y(t,_-3,3)):(v(t,18,t.bl_tree),y(t,_-11,7));_=0,n=r,0===i?(l=138,h=3):r===i?(l=6,h=3):(l=7,h=4)}};let T=!1;const F=(t,e,a,s)=>{y(t,0+(s?1:0),3),A(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};e._tr_init=t=>{T||((()=>{let t,e,a,i,w;const m=new Array(16);for(a=0,i=0;i<28;i++)for(d[i]=a,t=0;t<1<<s[i];t++)o[a++]=i;for(o[a-1]=i,w=0,i=0;i<16;i++)for(u[i]=w,t=0;t<1<<r[i];t++)h[w++]=i;for(w>>=7;i<30;i++)for(u[i]=w<<7,t=0;t<1<<r[i]-7;t++)h[256+w++]=i;for(e=0;e<=15;e++)m[e]=0;for(t=0;t<=143;)_[2*t+1]=8,t++,m[8]++;for(;t<=255;)_[2*t+1]=9,t++,m[9]++;for(;t<=279;)_[2*t+1]=7,t++,m[7]++;for(;t<=287;)_[2*t+1]=8,t++,m[8]++;for(k(_,287,m),t=0;t<30;t++)l[2*t+1]=5,l[2*t]=z(t,5);c=new f(_,s,257,286,15),p=new f(l,r,0,30,15),g=new f(new Array(0),n,0,19,7)})(),T=!0),t.l_desc=new w(t.dyn_ltree,c),t.d_desc=new w(t.dyn_dtree,p),t.bl_desc=new w(t.bl_tree,g),t.bi_buf=0,t.bi_valid=0,x(t)},e._tr_stored_block=F,e._tr_flush_block=(t,e,a,s)=>{let r,n,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),U(t,t.l_desc),U(t,t.d_desc),h=(t=>{let e;for(R(t,t.dyn_ltree,t.l_desc.max_code),R(t,t.dyn_dtree,t.d_desc.max_code),U(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*i[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),r=t.opt_len+3+7>>>3,n=t.static_len+3+7>>>3,n<=r&&(r=n)):r=n=a+5,a+4<=r&&-1!==e?F(t,e,a,s):4===t.strategy||n===r?(y(t,2+(s?1:0),3),S(t,_,l)):(y(t,4+(s?1:0),3),((t,e,a,s)=>{let r;for(y(t,e-257,5),y(t,a-1,5),y(t,s-4,4),r=0;r<s;r++)y(t,t.bl_tree[2*i[r]+1],3);L(t,t.dyn_ltree,e-1),L(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),S(t,t.dyn_ltree,t.dyn_dtree)),x(t),s&&A(t)},e._tr_tally=(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(o[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),e._tr_align=t=>{y(t,2,3),v(t,256,_),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)};var O=(t,e,a,s)=>{let r=65535&t|0,n=t>>>16&65535|0,i=0;for(;0!==a;){i=a>2e3?2e3:a,a-=i;do{r=r+e[s++]|0,n=n+r|0}while(--i);r%=65521,n%=65521}return r|n<<16|0};const D=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var s=0;s<8;s++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,s)=>{const r=D,n=s+a;t^=-1;for(let a=s;a<n;a++)t=t>>>8^r[255&(t^e[a])];return-1^t},C={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},I={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:H,_tr_stored_block:B,_tr_flush_block:M,_tr_tally:P,_tr_align:Y}=e,K=O,j=N,G=C,{Z_NO_FLUSH:X,Z_PARTIAL_FLUSH:W,Z_FULL_FLUSH:q,Z_FINISH:J,Z_BLOCK:Q,Z_OK:V,Z_STREAM_END:$,Z_STREAM_ERROR:tt,Z_DATA_ERROR:et,Z_BUF_ERROR:at,Z_DEFAULT_COMPRESSION:st,Z_FILTERED:rt,Z_HUFFMAN_ONLY:nt,Z_RLE:it,Z_FIXED:_t,Z_DEFAULT_STRATEGY:lt,Z_UNKNOWN:ht,Z_DEFLATED:ot}=I,dt=(t,e)=>(t.msg=G[e],e),ut=t=>2*t-(t>4?9:0),ft=t=>{let e=t.length;for(;--e>=0;)t[e]=0},ct=t=>{let e,a,s,r=t.w_size;e=t.hash_size,s=e;do{a=t.head[--s],t.head[s]=a>=r?a-r:0}while(--e);e=r,s=e;do{a=t.prev[--s],t.prev[s]=a>=r?a-r:0}while(--e)};let pt=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const gt=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},wt=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,gt(t.strm)},mt=(t,e)=>{t.pending_buf[t.pending++]=e},bt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},yt=(t,e,a,s)=>{let r=t.avail_in;return r>s&&(r=s),0===r?0:(t.avail_in-=r,e.set(t.input.subarray(t.next_in,t.next_in+r),a),1===t.state.wrap?t.adler=K(t.adler,e,r,a):2===t.state.wrap&&(t.adler=j(t.adler,e,r,a)),t.next_in+=r,t.total_in+=r,r)},vt=(t,e)=>{let a,s,r=t.max_chain_length,n=t.strstart,i=t.prev_length,_=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,o=t.w_mask,d=t.prev,u=t.strstart+258;let f=h[n+i-1],c=h[n+i];t.prev_length>=t.good_match&&(r>>=2),_>t.lookahead&&(_=t.lookahead);do{if(a=e,h[a+i]===c&&h[a+i-1]===f&&h[a]===h[n]&&h[++a]===h[n+1]){n+=2,a++;do{}while(h[++n]===h[++a]&&h[++n]===h[++a]&&h[++n]===h[++a]&&h[++n]===h[++a]&&h[++n]===h[++a]&&h[++n]===h[++a]&&h[++n]===h[++a]&&h[++n]===h[++a]&&n<u);if(s=258-(u-n),n=u-258,s>i){if(t.match_start=e,i=s,s>=_)break;f=h[n+i-1],c=h[n+i]}}}while((e=d[e&o])>l&&0!=--r);return i<=t.lookahead?i:t.lookahead},zt=t=>{const e=t.w_size;let a,s,r;do{if(s=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-s),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),ct(t),s+=e),0===t.strm.avail_in)break;if(a=yt(t.strm,t.window,t.strstart+t.lookahead,s),t.lookahead+=a,t.lookahead+t.insert>=3)for(r=t.strstart-t.insert,t.ins_h=t.window[r],t.ins_h=pt(t,t.ins_h,t.window[r+1]);t.insert&&(t.ins_h=pt(t,t.ins_h,t.window[r+3-1]),t.prev[r&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=r,r++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,s,r,n=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,i=0,_=t.strm.avail_in;do{if(a=65535,r=t.bi_valid+42>>3,t.strm.avail_out<r)break;if(r=t.strm.avail_out-r,s=t.strstart-t.block_start,a>s+t.strm.avail_in&&(a=s+t.strm.avail_in),a>r&&(a=r),a<n&&(0===a&&e!==J||e===X||a!==s+t.strm.avail_in))break;i=e===J&&a===s+t.strm.avail_in?1:0,B(t,0,0,i),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,gt(t.strm),s&&(s>a&&(s=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+s),t.strm.next_out),t.strm.next_out+=s,t.strm.avail_out-=s,t.strm.total_out+=s,t.block_start+=s,a-=s),a&&(yt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===i);return _-=t.strm.avail_in,_&&(_>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=_&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-_,t.strm.next_in),t.strstart),t.strstart+=_,t.insert+=_>t.w_size-t.insert?t.w_size-t.insert:_),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),i?4:e!==X&&e!==J&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(r=t.window_size-t.strstart,t.strm.avail_in>r&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,r+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),r>t.strm.avail_in&&(r=t.strm.avail_in),r&&(yt(t.strm,t.window,t.strstart,r),t.strstart+=r,t.insert+=r>t.w_size-t.insert?t.w_size-t.insert:r),t.high_water<t.strstart&&(t.high_water=t.strstart),r=t.bi_valid+42>>3,r=t.pending_buf_size-r>65535?65535:t.pending_buf_size-r,n=r>t.w_size?t.w_size:r,s=t.strstart-t.block_start,(s>=n||(s||e===J)&&e!==X&&0===t.strm.avail_in&&s<=r)&&(a=s>r?r:s,i=e===J&&0===t.strm.avail_in&&a===s?1:0,B(t,t.block_start,a,i),t.block_start+=a,gt(t.strm)),i?3:1)},xt=(t,e)=>{let a,s;for(;;){if(t.lookahead<262){if(zt(t),t.lookahead<262&&e===X)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=pt(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=vt(t,a)),t.match_length>=3)if(s=P(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=pt(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=pt(t,t.ins_h,t.window[t.strstart+1]);else s=P(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(s&&(wt(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===J?(wt(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(wt(t,!1),0===t.strm.avail_out)?1:2},At=(t,e)=>{let a,s,r;for(;;){if(t.lookahead<262){if(zt(t),t.lookahead<262&&e===X)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=pt(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=vt(t,a),t.match_length<=5&&(t.strategy===rt||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){r=t.strstart+t.lookahead-3,s=P(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=r&&(t.ins_h=pt(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,s&&(wt(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(s=P(t,0,t.window[t.strstart-1]),s&&wt(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(s=P(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===J?(wt(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(wt(t,!1),0===t.strm.avail_out)?1:2};function Et(t,e,a,s,r){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=s,this.func=r}const Zt=[new Et(0,0,0,0,kt),new Et(4,4,8,4,xt),new Et(4,5,16,8,xt),new Et(4,6,32,32,xt),new Et(4,4,16,16,At),new Et(8,16,32,32,At),new Et(8,16,128,128,At),new Et(8,32,128,256,At),new Et(32,128,258,1024,At),new Et(32,258,258,4096,At)];function St(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),ft(this.dyn_ltree),ft(this.dyn_dtree),ft(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),ft(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),ft(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Ut=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Ut(t))return dt(t,tt);t.total_in=t.total_out=0,t.data_type=ht;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,H(e),V},Lt=t=>{const e=Rt(t);var a;return e===V&&((a=t.state).window_size=2*a.w_size,ft(a.head),a.max_lazy_match=Zt[a.level].max_lazy,a.good_match=Zt[a.level].good_length,a.nice_match=Zt[a.level].nice_length,a.max_chain_length=Zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Tt=(t,e,a,s,r,n)=>{if(!t)return tt;let i=1;if(e===st&&(e=6),s<0?(i=0,s=-s):s>15&&(i=2,s-=16),r<1||r>9||a!==ot||s<8||s>15||e<0||e>9||n<0||n>_t||8===s&&1!==i)return dt(t,tt);8===s&&(s=9);const _=new St;return t.state=_,_.strm=t,_.status=42,_.wrap=i,_.gzhead=null,_.w_bits=s,_.w_size=1<<_.w_bits,_.w_mask=_.w_size-1,_.hash_bits=r+7,_.hash_size=1<<_.hash_bits,_.hash_mask=_.hash_size-1,_.hash_shift=~~((_.hash_bits+3-1)/3),_.window=new Uint8Array(2*_.w_size),_.head=new Uint16Array(_.hash_size),_.prev=new Uint16Array(_.w_size),_.lit_bufsize=1<<r+6,_.pending_buf_size=4*_.lit_bufsize,_.pending_buf=new Uint8Array(_.pending_buf_size),_.sym_buf=_.lit_bufsize,_.sym_end=3*(_.lit_bufsize-1),_.level=e,_.strategy=n,_.method=a,Lt(t)};t.deflateInit=(t,e)=>Tt(t,e,ot,15,8,lt),t.deflateInit2=Tt,t.deflateReset=Lt,t.deflateResetKeep=Rt,t.deflateSetHeader=(t,e)=>Ut(t)||2!==t.state.wrap?tt:(t.state.gzhead=e,V),t.deflate=(t,e)=>{if(Ut(t)||e>Q||e<0)return t?dt(t,tt):tt;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==J)return dt(t,0===t.avail_out?at:tt);const s=a.last_flush;if(a.last_flush=e,0!==a.pending){if(gt(t),0===t.avail_out)return a.last_flush=-1,V}else if(0===t.avail_in&&ut(e)<=ut(s)&&e!==J)return dt(t,at);if(666===a.status&&0!==t.avail_in)return dt(t,at);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,s=-1;if(s=a.strategy>=nt||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=s<<6,0!==a.strstart&&(e|=32),e+=31-e%31,bt(a,e),0!==a.strstart&&(bt(a,t.adler>>>16),bt(a,65535&t.adler)),t.adler=1,a.status=113,gt(t),0!==a.pending)return a.last_flush=-1,V}if(57===a.status)if(t.adler=0,mt(a,31),mt(a,139),mt(a,8),a.gzhead)mt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),mt(a,255&a.gzhead.time),mt(a,a.gzhead.time>>8&255),mt(a,a.gzhead.time>>16&255),mt(a,a.gzhead.time>>24&255),mt(a,9===a.level?2:a.strategy>=nt||a.level<2?4:0),mt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(mt(a,255&a.gzhead.extra.length),mt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=j(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(mt(a,0),mt(a,0),mt(a,0),mt(a,0),mt(a,0),mt(a,9===a.level?2:a.strategy>=nt||a.level<2?4:0),mt(a,3),a.status=113,gt(t),0!==a.pending)return a.last_flush=-1,V;if(69===a.status){if(a.gzhead.extra){let e=a.pending,s=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+s>a.pending_buf_size;){let r=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+r),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=j(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=r,gt(t),0!==a.pending)return a.last_flush=-1,V;e=0,s-=r}let r=new Uint8Array(a.gzhead.extra);a.pending_buf.set(r.subarray(a.gzindex,a.gzindex+s),a.pending),a.pending+=s,a.gzhead.hcrc&&a.pending>e&&(t.adler=j(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,s=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>s&&(t.adler=j(t.adler,a.pending_buf,a.pending-s,s)),gt(t),0!==a.pending)return a.last_flush=-1,V;s=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,mt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>s&&(t.adler=j(t.adler,a.pending_buf,a.pending-s,s)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,s=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>s&&(t.adler=j(t.adler,a.pending_buf,a.pending-s,s)),gt(t),0!==a.pending)return a.last_flush=-1,V;s=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,mt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>s&&(t.adler=j(t.adler,a.pending_buf,a.pending-s,s))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(gt(t),0!==a.pending))return a.last_flush=-1,V;mt(a,255&t.adler),mt(a,t.adler>>8&255),t.adler=0}if(a.status=113,gt(t),0!==a.pending)return a.last_flush=-1,V}if(0!==t.avail_in||0!==a.lookahead||e!==X&&666!==a.status){let s=0===a.level?kt(a,e):a.strategy===nt?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(zt(t),0===t.lookahead)){if(e===X)return 1;break}if(t.match_length=0,a=P(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(wt(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===J?(wt(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(wt(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,s,r,n;const i=t.window;for(;;){if(t.lookahead<=258){if(zt(t),t.lookahead<=258&&e===X)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(r=t.strstart-1,s=i[r],s===i[++r]&&s===i[++r]&&s===i[++r])){n=t.strstart+258;do{}while(s===i[++r]&&s===i[++r]&&s===i[++r]&&s===i[++r]&&s===i[++r]&&s===i[++r]&&s===i[++r]&&s===i[++r]&&r<n);t.match_length=258-(n-r),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=P(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=P(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(wt(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===J?(wt(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(wt(t,!1),0===t.strm.avail_out)?1:2})(a,e):Zt[a.level].func(a,e);if(3!==s&&4!==s||(a.status=666),1===s||3===s)return 0===t.avail_out&&(a.last_flush=-1),V;if(2===s&&(e===W?Y(a):e!==Q&&(B(a,0,0,!1),e===q&&(ft(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),gt(t),0===t.avail_out))return a.last_flush=-1,V}return e!==J?V:a.wrap<=0?$:(2===a.wrap?(mt(a,255&t.adler),mt(a,t.adler>>8&255),mt(a,t.adler>>16&255),mt(a,t.adler>>24&255),mt(a,255&t.total_in),mt(a,t.total_in>>8&255),mt(a,t.total_in>>16&255),mt(a,t.total_in>>24&255)):(bt(a,t.adler>>>16),bt(a,65535&t.adler)),gt(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?V:$)},t.deflateEnd=t=>{if(Ut(t))return tt;const e=t.state.status;return t.state=null,113===e?dt(t,et):V},t.deflateSetDictionary=(t,e)=>{let a=e.length;if(Ut(t))return tt;const s=t.state,r=s.wrap;if(2===r||1===r&&42!==s.status||s.lookahead)return tt;if(1===r&&(t.adler=K(t.adler,e,a,0)),s.wrap=0,a>=s.w_size){0===r&&(ft(s.head),s.strstart=0,s.block_start=0,s.insert=0);let t=new Uint8Array(s.w_size);t.set(e.subarray(a-s.w_size,a),0),e=t,a=s.w_size}const n=t.avail_in,i=t.next_in,_=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,zt(s);s.lookahead>=3;){let t=s.strstart,e=s.lookahead-2;do{s.ins_h=pt(s,s.ins_h,s.window[t+3-1]),s.prev[t&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=t,t++}while(--e);s.strstart=t,s.lookahead=2,zt(s)}return s.strstart+=s.lookahead,s.block_start=s.strstart,s.insert=s.lookahead,s.lookahead=0,s.match_length=s.prev_length=2,s.match_available=0,t.next_in=i,t.input=_,t.avail_in=n,s.wrap=r,V},t.deflateInfo=\"pako deflate (from Nodeca project)\";var Ft={};const Ot=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);Ft.assign=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if(\"object\"!=typeof a)throw new TypeError(a+\"must be non-object\");for(const e in a)Ot(a,e)&&(t[e]=a[e])}}return t},Ft.flattenChunks=t=>{let e=0;for(let a=0,s=t.length;a<s;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,s=0,r=t.length;e<r;e++){let r=t[e];a.set(r,s),s+=r.length}return a};var Dt={};let Nt=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Nt=!1}const Ct=new Uint8Array(256);for(let t=0;t<256;t++)Ct[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Ct[254]=Ct[254]=1,Dt.string2buf=t=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,s,r,n,i=t.length,_=0;for(r=0;r<i;r++)a=t.charCodeAt(r),55296==(64512&a)&&r+1<i&&(s=t.charCodeAt(r+1),56320==(64512&s)&&(a=65536+(a-55296<<10)+(s-56320),r++)),_+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(_),n=0,r=0;n<_;r++)a=t.charCodeAt(r),55296==(64512&a)&&r+1<i&&(s=t.charCodeAt(r+1),56320==(64512&s)&&(a=65536+(a-55296<<10)+(s-56320),r++)),a<128?e[n++]=a:a<2048?(e[n++]=192|a>>>6,e[n++]=128|63&a):a<65536?(e[n++]=224|a>>>12,e[n++]=128|a>>>6&63,e[n++]=128|63&a):(e[n++]=240|a>>>18,e[n++]=128|a>>>12&63,e[n++]=128|a>>>6&63,e[n++]=128|63&a);return e};Dt.buf2string=(t,e)=>{const a=e||t.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let s,r;const n=new Array(2*a);for(r=0,s=0;s<a;){let e=t[s++];if(e<128){n[r++]=e;continue}let i=Ct[e];if(i>4)n[r++]=65533,s+=i-1;else{for(e&=2===i?31:3===i?15:7;i>1&&s<a;)e=e<<6|63&t[s++],i--;i>1?n[r++]=65533:e<65536?n[r++]=e:(e-=65536,n[r++]=55296|e>>10&1023,n[r++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Nt)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a=\"\";for(let s=0;s<e;s++)a+=String.fromCharCode(t[s]);return a})(n,r)},Dt.utf8border=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Ct[t[a]]>e?a:e};const It=t,Ht=Ft,Bt=Dt,Mt=C,Pt=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0},Yt=Object.prototype.toString,{Z_NO_FLUSH:Kt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Gt,Z_FINISH:Xt,Z_OK:Wt,Z_STREAM_END:qt,Z_DEFAULT_COMPRESSION:Jt,Z_DEFAULT_STRATEGY:Qt,Z_DEFLATED:Vt}=I;function $t(t){this.options=Ht.assign({level:Jt,method:Vt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Qt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Pt,this.strm.avail_out=0;let a=It.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Wt)throw new Error(Mt[a]);if(e.header&&It.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t=\"string\"==typeof e.dictionary?Bt.string2buf(e.dictionary):\"[object ArrayBuffer]\"===Yt.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=It.deflateSetDictionary(this.strm,t),a!==Wt)throw new Error(Mt[a]);this._dict_set=!0}}$t.prototype.push=function(t,e){const a=this.strm,s=this.options.chunkSize;let r,n;if(this.ended)return!1;for(n=e===~~e?e:!0===e?Xt:Kt,\"string\"==typeof t?a.input=Bt.string2buf(t):\"[object ArrayBuffer]\"===Yt.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(s),a.next_out=0,a.avail_out=s),(n===jt||n===Gt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(r=It.deflate(a,n),r===qt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),r=It.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===Wt;if(0!==a.avail_out){if(n>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},$t.prototype.onData=function(t){this.chunks.push(t)},$t.prototype.onEnd=function(t){t===Wt&&(this.result=Ht.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const te=$t,ee=function(t,e){const a=new $t(e);if(a.push(t,!0),a.err)throw a.msg||Mt[a.err];return a.result},ae=I;const se=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const e=this._hasEvents?\",\":\"\";this.deflate.push(e+t,ae.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push(\"]\",ae.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new te,this.deflate.push(\"[\",ae.Z_NO_FLUSH)}},re={clear:()=>{se.clear()},addEvent:t=>se.addEvent(t),finish:()=>se.finish(),compress:t=>function(t){return ee(t)}(t)};addEventListener(\"message\",(function(t){const e=t.data.method,a=t.data.id,s=t.data.arg;if(e in re&&\"function\"==typeof re[e])try{const t=re[e](s);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nfunction logInfo(message, shouldAddBreadcrumb) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nfunction logInfoNextTick(message, shouldAddBreadcrumb) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addBreadcrumb(message) {\n  const hub = getCurrentHub();\n  hub.addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n  /** @inheritdoc */\n\n   constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    void this._worker.postMessage('clear');\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n   get hasCheckout() {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n   set hasCheckout(value) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({ useCompression }) {\n  // eslint-disable-next-line no-restricted-globals\n  if (useCompression && window.Worker) {\n    try {\n      const workerUrl = e();\n\n      logInfo('[Replay] Using compression worker');\n      const worker = new Worker(workerUrl);\n      return new EventBufferProxy(worker);\n    } catch (error) {\n      logInfo('[Replay] Failed to create compression worker');\n      // Fall back to use simple event buffer array\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false },\n  { previousSessionId } = {},\n) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession(traceInternals) {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(\n  session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  },\n) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n\n/** If the session should be refreshed or not. */\nfunction shouldRefreshSession(\n  session,\n  { sessionIdleExpire, maxReplayDuration },\n) {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nfunction loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }\n\n,\n  sessionOptions,\n) {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n\nconst ReplayEventTypeCustom = 5;\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEventSync(replay, event, isCheckout) {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  void _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getCurrentHub().getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nfunction shouldAddEvent(replay, event) {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event, sendResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id );\n  }\n}\n\nfunction handleErrorEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode === 'buffer' && event.tags && event.tags.replayId) {\n    setTimeout(() => {\n      // Capture current event buffer as new replay\n      void replay.sendBufferedReplayOrFlush();\n    });\n  }\n}\n\nfunction isBaseTransportSend() {\n  const client = getCurrentHub().getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send ).__sentry__baseTransport__ || false\n  );\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  // Check if any exception originates from rrweb\n  return event.exception.values.some(exception => {\n    if (!exception.stacktrace || !exception.stacktrace.frames || !exception.stacktrace.frames.length) {\n      return false;\n    }\n\n    return exception.stacktrace.frames.some(frame => frame.filename && frame.filename.includes('/rrweb/src/'));\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addGlobalEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(\n  replay,\n  includeAfterSendEventHandling = false,\n) {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event, hint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors & transactions, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('history', listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getCurrentHub());\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** only exported for tests */\nfunction handleFetch(handlerData) {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response ).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('fetch', listener)`.\n */\nfunction handleFetchSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\n/** only exported for tests */\nfunction handleXhr(handlerData) {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('xhr', listener)`.\n */\nfunction handleXhrSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\nconst OBJ = 10;\nconst OBJ_KEY = 11;\nconst OBJ_KEY_STR = 12;\nconst OBJ_VAL = 13;\nconst OBJ_VAL_STR = 14;\nconst OBJ_VAL_COMPLETED = 15;\n\nconst ARR = 20;\nconst ARR_VAL = 21;\nconst ARR_VAL_STR = 22;\nconst ARR_VAL_COMPLETED = 23;\n\nconst ALLOWED_PRIMITIVES = ['true', 'false', 'null'];\n\n/**\n * Complete an incomplete JSON string.\n * This will ensure that the last element always has a `\"~~\"` to indicate it was truncated.\n * For example, `[1,2,` will be completed to `[1,2,\"~~\"]`\n * and `{\"aa\":\"b` will be completed to `{\"aa\":\"b~~\"}`\n */\nfunction completeJson(incompleteJson, stack) {\n  if (!stack.length) {\n    return incompleteJson;\n  }\n\n  let json = incompleteJson;\n\n  // Most checks are only needed for the last step in the stack\n  const lastPos = stack.length - 1;\n  const lastStep = stack[lastPos];\n\n  json = _fixLastStep(json, lastStep);\n\n  // Complete remaining steps - just add closing brackets\n  for (let i = lastPos; i >= 0; i--) {\n    const step = stack[i];\n\n    switch (step) {\n      case OBJ:\n        json = `${json}}`;\n        break;\n      case ARR:\n        json = `${json}]`;\n        break;\n    }\n  }\n\n  return json;\n}\n\nfunction _fixLastStep(json, lastStep) {\n  switch (lastStep) {\n    // Object cases\n    case OBJ:\n      return `${json}\"~~\":\"~~\"`;\n    case OBJ_KEY:\n      return `${json}:\"~~\"`;\n    case OBJ_KEY_STR:\n      return `${json}~~\":\"~~\"`;\n    case OBJ_VAL:\n      return _maybeFixIncompleteObjValue(json);\n    case OBJ_VAL_STR:\n      return `${json}~~\"`;\n    case OBJ_VAL_COMPLETED:\n      return `${json},\"~~\":\"~~\"`;\n\n    // Array cases\n    case ARR:\n      return `${json}\"~~\"`;\n    case ARR_VAL:\n      return _maybeFixIncompleteArrValue(json);\n    case ARR_VAL_STR:\n      return `${json}~~\"`;\n    case ARR_VAL_COMPLETED:\n      return `${json},\"~~\"`;\n  }\n\n  return json;\n}\n\nfunction _maybeFixIncompleteArrValue(json) {\n  const pos = _findLastArrayDelimiter(json);\n\n  if (pos > -1) {\n    const part = json.slice(pos + 1);\n\n    if (ALLOWED_PRIMITIVES.includes(part.trim())) {\n      return `${json},\"~~\"`;\n    }\n\n    // Everything else is replaced with `\"~~\"`\n    return `${json.slice(0, pos + 1)}\"~~\"`;\n  }\n\n  // fallback, this shouldn't happen, to be save\n  return json;\n}\n\nfunction _findLastArrayDelimiter(json) {\n  for (let i = json.length - 1; i >= 0; i--) {\n    const char = json[i];\n\n    if (char === ',' || char === '[') {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction _maybeFixIncompleteObjValue(json) {\n  const startPos = json.lastIndexOf(':');\n\n  const part = json.slice(startPos + 1);\n\n  if (ALLOWED_PRIMITIVES.includes(part.trim())) {\n    return `${json},\"~~\":\"~~\"`;\n  }\n\n  // Everything else is replaced with `\"~~\"`\n  // This also means we do not have incomplete numbers, e.g `[1` is replaced with `[\"~~\"]`\n  return `${json.slice(0, startPos + 1)}\"~~\"`;\n}\n\n/**\n * Evaluate an (incomplete) JSON string.\n */\nfunction evaluateJson(json) {\n  const stack = [];\n\n  for (let pos = 0; pos < json.length; pos++) {\n    _evaluateJsonPos(stack, json, pos);\n  }\n\n  return stack;\n}\n\nfunction _evaluateJsonPos(stack, json, pos) {\n  const curStep = stack[stack.length - 1];\n\n  const char = json[pos];\n\n  const whitespaceRegex = /\\s/;\n\n  if (whitespaceRegex.test(char)) {\n    return;\n  }\n\n  if (char === '\"' && !_isEscaped(json, pos)) {\n    _handleQuote(stack, curStep);\n    return;\n  }\n\n  switch (char) {\n    case '{':\n      _handleObj(stack, curStep);\n      break;\n    case '[':\n      _handleArr(stack, curStep);\n      break;\n    case ':':\n      _handleColon(stack, curStep);\n      break;\n    case ',':\n      _handleComma(stack, curStep);\n      break;\n    case '}':\n      _handleObjClose(stack, curStep);\n      break;\n    case ']':\n      _handleArrClose(stack, curStep);\n      break;\n  }\n}\n\nfunction _handleQuote(stack, curStep) {\n  // End of obj value\n  if (curStep === OBJ_VAL_STR) {\n    stack.pop();\n    stack.push(OBJ_VAL_COMPLETED);\n    return;\n  }\n\n  // End of arr value\n  if (curStep === ARR_VAL_STR) {\n    stack.pop();\n    stack.push(ARR_VAL_COMPLETED);\n    return;\n  }\n\n  // Start of obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(OBJ_VAL_STR);\n    return;\n  }\n\n  // Start of arr value\n  if (curStep === ARR_VAL) {\n    stack.push(ARR_VAL_STR);\n    return;\n  }\n\n  // Start of obj key\n  if (curStep === OBJ) {\n    stack.push(OBJ_KEY_STR);\n    return;\n  }\n\n  // End of obj key\n  if (curStep === OBJ_KEY_STR) {\n    stack.pop();\n    stack.push(OBJ_KEY);\n    return;\n  }\n}\n\nfunction _handleObj(stack, curStep) {\n  // Initial object\n  if (!curStep) {\n    stack.push(OBJ);\n    return;\n  }\n\n  // New object as obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(OBJ);\n    return;\n  }\n\n  // New object as array element\n  if (curStep === ARR_VAL) {\n    stack.push(OBJ);\n  }\n\n  // New object as first array element\n  if (curStep === ARR) {\n    stack.push(OBJ);\n    return;\n  }\n}\n\nfunction _handleArr(stack, curStep) {\n  // Initial array\n  if (!curStep) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n\n  // New array as obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n\n  // New array as array element\n  if (curStep === ARR_VAL) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n  }\n\n  // New array as first array element\n  if (curStep === ARR) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n}\n\nfunction _handleColon(stack, curStep) {\n  if (curStep === OBJ_KEY) {\n    stack.pop();\n    stack.push(OBJ_VAL);\n  }\n}\n\nfunction _handleComma(stack, curStep) {\n  // Comma after obj value\n  if (curStep === OBJ_VAL) {\n    stack.pop();\n    return;\n  }\n  if (curStep === OBJ_VAL_COMPLETED) {\n    // Pop OBJ_VAL_COMPLETED & OBJ_VAL\n    stack.pop();\n    stack.pop();\n    return;\n  }\n\n  // Comma after arr value\n  if (curStep === ARR_VAL) {\n    // do nothing - basically we'd pop ARR_VAL but add it right back\n    return;\n  }\n\n  if (curStep === ARR_VAL_COMPLETED) {\n    // Pop ARR_VAL_COMPLETED\n    stack.pop();\n\n    // basically we'd pop ARR_VAL but add it right back\n    return;\n  }\n}\n\nfunction _handleObjClose(stack, curStep) {\n  // Empty object {}\n  if (curStep === OBJ) {\n    stack.pop();\n  }\n\n  // Object with element\n  if (curStep === OBJ_VAL) {\n    // Pop OBJ_VAL, OBJ\n    stack.pop();\n    stack.pop();\n  }\n\n  // Obj with element\n  if (curStep === OBJ_VAL_COMPLETED) {\n    // Pop OBJ_VAL_COMPLETED, OBJ_VAL, OBJ\n    stack.pop();\n    stack.pop();\n    stack.pop();\n  }\n\n  // if was obj value, complete it\n  if (stack[stack.length - 1] === OBJ_VAL) {\n    stack.push(OBJ_VAL_COMPLETED);\n  }\n\n  // if was arr value, complete it\n  if (stack[stack.length - 1] === ARR_VAL) {\n    stack.push(ARR_VAL_COMPLETED);\n  }\n}\n\nfunction _handleArrClose(stack, curStep) {\n  // Empty array []\n  if (curStep === ARR) {\n    stack.pop();\n  }\n\n  // Array with element\n  if (curStep === ARR_VAL) {\n    // Pop ARR_VAL, ARR\n    stack.pop();\n    stack.pop();\n  }\n\n  // Array with element\n  if (curStep === ARR_VAL_COMPLETED) {\n    // Pop ARR_VAL_COMPLETED, ARR_VAL, ARR\n    stack.pop();\n    stack.pop();\n    stack.pop();\n  }\n\n  // if was obj value, complete it\n  if (stack[stack.length - 1] === OBJ_VAL) {\n    stack.push(OBJ_VAL_COMPLETED);\n  }\n\n  // if was arr value, complete it\n  if (stack[stack.length - 1] === ARR_VAL) {\n    stack.push(ARR_VAL_COMPLETED);\n  }\n}\n\nfunction _isEscaped(str, pos) {\n  const previousChar = str[pos - 1];\n\n  return previousChar === '\\\\' && !_isEscaped(str, pos - 1);\n}\n\n/* eslint-disable max-lines */\n\n/**\n * Takes an incomplete JSON string, and returns a hopefully valid JSON string.\n * Note that this _can_ fail, so you should check the return value is valid JSON.\n */\nfunction fixJson(incompleteJson) {\n  const stack = evaluateJson(incompleteJson);\n\n  return completeJson(incompleteJson, stack);\n}\n\n/** Get the size of a body. */\nfunction getBodySize(\n  body,\n  textEncoder,\n) {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  if (typeof body === 'string') {\n    return body;\n  }\n\n  if (body instanceof URLSearchParams) {\n    return body.toString();\n  }\n\n  if (body instanceof FormData) {\n    return _serializeFormData(body);\n  }\n\n  return undefined;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n      warnings: [],\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n\n  if (_strIsProbablyJson(body)) {\n    try {\n      const json = exceedsSizeLimit ? fixJson(body.slice(0, NETWORK_BODY_MAX_SIZE)) : body;\n      const normalizedBody = JSON.parse(json);\n      return {\n        body: normalizedBody,\n        warnings: exceedsSizeLimit ? ['JSON_TRUNCATED'] : [],\n      };\n    } catch (e3) {\n      return {\n        body: exceedsSizeLimit ? `${body.slice(0, NETWORK_BODY_MAX_SIZE)}…` : body,\n        warnings: exceedsSizeLimit ? ['INVALID_JSON', 'TEXT_TRUNCATED'] : ['INVALID_JSON'],\n      };\n    }\n  }\n\n  return {\n    body: exceedsSizeLimit ? `${body.slice(0, NETWORK_BODY_MAX_SIZE)}…` : body,\n    warnings: exceedsSizeLimit ? ['TEXT_TRUNCATED'] : [],\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { input, response } = hint;\n\n  const body = _getFetchRequestArgBody(input);\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  const { startTimestamp, endTimestamp } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = getRequestHeaders(input, networkRequestHeaders);\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const bodyStr = getBodyString(requestBody);\n  return buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n}\n\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }\n\n,\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = getAllHeaders(response.headers, networkResponseHeaders);\n\n  if (!networkCaptureBodies && responseBodySize !== undefined) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  // Only clone the response if we need to\n  try {\n    // We have to clone this, as the body can only be read once\n    const res = response.clone();\n    const bodyText = await _parseFetchBody(res);\n\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (e) {\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchBody(response) {\n  try {\n    return await response.text();\n  } catch (e2) {\n    return undefined;\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { xhr, input } = hint;\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : getBodySize(xhr.response, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { startTimestamp, endTimestamp, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const request = buildNetworkRequestOrResponse(\n    networkRequestHeaders,\n    requestBodySize,\n    options.networkCaptureBodies ? getBodyString(input) : undefined,\n  );\n  const response = buildNetworkRequestOrResponse(\n    networkResponseHeaders,\n    responseBodySize,\n    options.networkCaptureBodies ? hint.xhr.responseText : undefined,\n  );\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = getCurrentHub().getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addInstrumentationHandler('fetch', handleFetchSpanListener(replay));\n      addInstrumentationHandler('xhr', handleXhrSpanListener(replay));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      void captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      void captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\nlet _LAST_BREADCRUMB = null;\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\nconst handleScopeListener =\n  (replay) =>\n  (scope) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nfunction handleScope(scope) {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          const fixedJson = fixJson(stringified.slice(0, CONSOLE_ARG_MAX_SIZE));\n          const json = JSON.parse(fixedJson);\n          // We only set this after JSON.parse() was successfull, so we know we didn't run into `catch`\n          isTruncated = true;\n          return json;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const scope = getCurrentHub().getScope();\n  const client = getCurrentHub().getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addInstrumentationHandler('dom', handleDomListener(replay));\n  addInstrumentationHandler('history', handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addGlobalEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client) {\n  return !!(client && client.on);\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return createEnvelope(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const scope = hub.getScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n\n  /**\n   * Is the integration currently active?\n   */\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n\n  /**\n   * Function to stop recording\n   */\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } ;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling(previousSessionId) {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop({ forceFlush = false, reason } = {}) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode ) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    const lastTransaction = this.lastTransaction || getCurrentHub().getScope().getTransaction();\n    if (!lastTransaction || !['route', 'custom'].includes(lastTransaction.metadata.source)) {\n      return undefined;\n    }\n\n    return lastTransaction.name;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay]', error);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n   _initializeSessionForSampling(previousSessionId) {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n   _checkSession() {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      void this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n   async _refreshSession(session) {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init2() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init3() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init4() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Trigger rrweb to take a full snapshot which will cause this plugin to\n   * create a new Replay event.\n   */\n   _triggerFullSnapshot(checkout = true) {\n    try {\n      logInfo('[Replay] Taking full rrweb snapshot');\n      record.takeFullSnapshot(checkout);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      void this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      void this.stop({ reason: 'sendReplay' });\n\n      const client = getCurrentHub().getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init5() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] No session found to flush.');\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init6() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      void this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(\n  selectors,\n  defaultSelectors,\n  deprecatedClassOption,\n  deprecatedSelectorOption,\n) {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n    );\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nfunction maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}) {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  } = {}) {\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key, value, el) =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n} Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = getCurrentHub().getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    // eslint-disable-next-line no-console\n    console.warn('SDK client is not available.');\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n    );\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\nexport { Replay };\n//# sourceMappingURL=index.js.map\n","import * as Sentry from '@sentry/react'\nimport { isBrowser } from './isBrowser'\n\nexport const dsn = process.env.NEXT_PUBLIC_REACT_SENTRY_DSN\n\nexport const errorsToIgnore = [\n  /AbortError/,\n  /Connection to Indexed Database server lost/,\n  /Could not verify JWT: JWTExpired/,\n  /Error: AbortError: The operation was aborted/,\n  /Error: validateToken/,\n  /Firebase: A network AuthError/,\n  /Firebase: An account already exists with the same email address but different sign-in credentials/,\n  /Firebase: The popup has been closed by the user /,\n  /Firebase: The user did not grant your application the permissions it requested/,\n  /Firebase: This operation has been cancelled due to another conflicting popup being opened/,\n  /Firebase: This operation is sensitive and requires recent authentication/,\n  /Firebase: Unable to establish a connection with the popup/,\n  /Hydration failed because the initial UI does not match what was rendered on the server/,\n  /INTERNAL ASSERTION FAILED: Pending promise was never set/,\n  /Load failed/,\n  /Missing 'Authorization' or 'Cookie' header in JWT authentication mode/,\n  /Network Error/,\n  /NetworkError when attempting to fetch resource/,\n  /Non-Error exception captured with keys/,\n  /NotAllowedError: play() can only be initiated by a user gesture/,\n  /Request aborted/,\n  /Text content does not match server-rendered HTML/,\n  /the entire root will switch to client rendering/,\n  /There was an error while hydrating/,\n  /Uniqueness violation/,\n  /UnknownError: Error looking up record in object store by key range/,\n]\n\nexport const startSentry = () => {\n  if (dsn && isBrowser()) {\n    Sentry.init({\n      dsn,\n      ignoreErrors: errorsToIgnore,\n      integrations: [\n        new Sentry.BrowserTracing(),\n        new Sentry.Replay({\n          blockAllMedia: false,\n          maskAllInputs: false,\n          maskAllText: false,\n        }),\n      ],\n      maxValueLength: 1000,\n      replaysOnErrorSampleRate: 1.0,\n      tracesSampleRate: 0,\n    })\n  }\n}\n","import { gql } from '../helpers/gql'\n\nexport const INGREDIENT_FRAGMENT = gql`\n  fragment ingredient on ingredients {\n    ...ingredient_base\n    ingredientToFood {\n      ...food\n    }\n    ingredientToChildRecipe {\n      ...recipe_base\n      ingredients {\n        ...ingredient_base\n      }\n    }\n  }\n`\n","import { FOOD_FRAGMENT } from '../graphql/food'\nimport { INGREDIENT_FRAGMENT } from '../graphql/ingredient'\nimport { LOG_FRAGMENT } from '../graphql/log'\nimport { PROFILE_FRAGMENT } from '../graphql/profile'\nimport {\n  INGREDIENT_BASE_FRAGMENT,\n  RECIPE_BASE_FRAGMENT,\n  RECIPE_FRAGMENT,\n} from '../graphql/recipe'\n\nexport const getFragments = () => {\n  return `\n${PROFILE_FRAGMENT}\n${FOOD_FRAGMENT}\n${LOG_FRAGMENT}\n${INGREDIENT_BASE_FRAGMENT}\n${INGREDIENT_FRAGMENT}\n${RECIPE_BASE_FRAGMENT}\n${RECIPE_FRAGMENT}\n`\n}\n","import { getFragments } from './getFragments'\n\nexport const stringifyQuery = (query: string): string => {\n  const stringQuery = `${query} \n   ${getFragments()}\n  `\n  return stringQuery\n}\n","import generate from 'uuid-random'\n\nexport const uuid = () => {\n  return generate()\n}\n","import { uuid } from '../helpers/uuid'\nimport { Food } from './food'\nimport { Ingredient } from './ingredient'\nimport { Log } from './log'\nimport { Recipe } from './recipe'\n\n// The default targets are ludicrous by design\n// That is how progress bars will know to show the placeholder\nexport const defaultTargets = [100000, 100000]\nexport const defaultStartTime = '00:00:00'\n\nexport class Profile {\n  // Data\n  calorieTarget: number // Default 2000\n  proteinTarget: number // Default 150\n  showCalories: boolean // Default to True\n  startTime: string // No longer used\n  apiToken = uuid()\n  timezone: string\n  showDensities: boolean // Default to false\n  hidePWAPrompt: boolean // Default to false\n  countDown: boolean // Default to true\n  enablePlanning: boolean // Default to false\n  metricSystem: boolean // Default to false\n  convertBetweenUnits: boolean // Default to false\n\n  // Relationships\n  foods: Food[]\n  logs: Log[]\n  recipes: Recipe[]\n  ingredients: Ingredient[]\n\n  // Foreign keys\n  authId = uuid()\n\n  // Metadata\n  id = uuid()\n  updatedAt = new Date()\n  createdAt = new Date()\n  type: 'profile'\n\n  constructor() {\n    this.foods = [] as Food[]\n    this.recipes = [] as Recipe[]\n    this.logs = [] as Log[]\n    this.ingredients = [] as Ingredient[]\n    this.calorieTarget = defaultTargets[0]\n    this.proteinTarget = defaultTargets[1]\n    this.startTime = defaultStartTime\n    // We do not want to accidentally show the PWAPrompt if fetching data fails\n    this.hidePWAPrompt = true\n  }\n}\n","import { getCurrentHub, showReportDialog, withScope, captureException } from '@sentry/browser';\nimport { isError, addExceptionMechanism, logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/errorboundary.tsx\";\n\nfunction isAtLeastReact17(version) {\n  const major = version.match(/^([^.]+)/);\n  return major !== null && parseInt(major[0]) >= 17;\n}\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\nfunction setCause(error, cause) {\n  const seenErrors = new WeakMap();\n\n  function recurse(error, cause) {\n    // If we've already seen the error, there is a recursive loop somewhere in the error's\n    // cause chain. Let's just bail out then to prevent a stack overflow.\n    if (seenErrors.has(error)) {\n      return;\n    }\n    if (error.cause) {\n      seenErrors.set(error, true);\n      return recurse(error.cause, cause);\n    }\n    error.cause = cause;\n  }\n\n  recurse(error, cause);\n}\n\n/**\n * A ErrorBoundary component that logs errors to Sentry. Requires React >= 16.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends React.Component {\n\n   constructor(props) {\n    super(props);ErrorBoundary.prototype.__init.call(this);\n    this.state = INITIAL_STATE;\n    this._openFallbackReportDialog = true;\n\n    const client = getCurrentHub().getClient();\n    if (client && client.on && props.showDialog) {\n      this._openFallbackReportDialog = false;\n      client.on('afterSendEvent', event => {\n        if (!event.type && event.event_id === this._lastEventId) {\n          showReportDialog({ ...props.dialogOptions, eventId: this._lastEventId });\n        }\n      });\n    }\n  }\n\n   componentDidCatch(error, { componentStack }) {\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n    withScope(scope => {\n      // If on React version >= 17, create stack trace from componentStack param and links\n      // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n      // Linking errors requires the `LinkedErrors` integration be enabled.\n      // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n      //\n      // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n      // with non-error objects. This is why we need to check if the error is an error-like object.\n      // See: https://github.com/getsentry/sentry-javascript/issues/6167\n      if (isAtLeastReact17(React.version) && isError(error)) {\n        const errorBoundaryError = new Error(error.message);\n        errorBoundaryError.name = `React ErrorBoundary ${error.name}`;\n        errorBoundaryError.stack = componentStack;\n\n        // Using the `LinkedErrors` integration to link the errors together.\n        setCause(error, errorBoundaryError);\n      }\n\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n\n      scope.addEventProcessor(event => {\n        addExceptionMechanism(event, { handled: false });\n        return event;\n      });\n\n      const eventId = captureException(error, { contexts: { react: { componentStack } } });\n\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        this._lastEventId = eventId;\n        if (this._openFallbackReportDialog) {\n          showReportDialog({ ...dialogOptions, eventId });\n        }\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n   componentDidMount() {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n   componentWillUnmount() {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n  }\n\n   __init() {this.resetErrorBoundary = () => {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      onReset(error, componentStack, eventId);\n    }\n    this.setState(INITIAL_STATE);\n  };}\n\n   render() {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    if (state.error) {\n      let element = undefined;\n      if (typeof fallback === 'function') {\n        element = fallback({\n          error: state.error,\n          componentStack: state.componentStack,\n          resetError: this.resetErrorBoundary,\n          eventId: state.eventId,\n        });\n      } else {\n        element = fallback;\n      }\n\n      if (React.isValidElement(element)) {\n        return element;\n      }\n\n      if (fallback) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('fallback did not produce a valid ReactElement');\n      }\n\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n\n    if (typeof children === 'function') {\n      return (children )();\n    }\n    return children;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(\n  WrappedComponent,\n  errorBoundaryOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    React.createElement(ErrorBoundary, { ...errorBoundaryOptions, __self: this, __source: {fileName: _jsxFileName, lineNumber: 234}}\n      , React.createElement(WrappedComponent, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 235}} )\n    )\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, UNKNOWN_COMPONENT, isAtLeastReact17, withErrorBoundary };\n//# sourceMappingURL=errorboundary.js.map\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef, useState, useEffect } from 'react';\nvar warned = false;\nvar Div100vh = forwardRef(function (_a, ref) {\n    var style = _a.style, other = __rest(_a, [\"style\"]);\n    var height = use100vh();\n    // TODO: warn only in development\n    if (!warned && (style === null || style === void 0 ? void 0 : style.height)) {\n        warned = true;\n        console.warn('<Div100vh /> overrides the height property of the style prop');\n    }\n    var styleWithRealHeight = __assign(__assign({}, style), { height: height ? height + \"px\" : '100vh' });\n    return React.createElement(\"div\", __assign({ ref: ref, style: styleWithRealHeight }, other));\n});\nDiv100vh.displayName = 'Div100vh';\nexport default Div100vh;\nexport function use100vh() {\n    var _a = useState(measureHeight), height = _a[0], setHeight = _a[1];\n    var wasRenderedOnClientAtLeastOnce = useWasRenderedOnClientAtLeastOnce();\n    useEffect(function () {\n        if (!wasRenderedOnClientAtLeastOnce)\n            return;\n        function setMeasuredHeight() {\n            var measuredHeight = measureHeight();\n            setHeight(measuredHeight);\n        }\n        window.addEventListener('resize', setMeasuredHeight);\n        return function () { return window.removeEventListener('resize', setMeasuredHeight); };\n    }, [wasRenderedOnClientAtLeastOnce]);\n    return wasRenderedOnClientAtLeastOnce ? height : null;\n}\nexport function measureHeight() {\n    if (!isClient())\n        return null;\n    return window.innerHeight;\n}\n// Once we ended up on the client, the first render must look the same as on\n// the server so hydration happens without problems. _Then_ we immediately\n// schedule a subsequent update and return the height measured on the client.\n// It's not needed for CSR-only apps, but is critical for SSR.\nfunction useWasRenderedOnClientAtLeastOnce() {\n    var _a = useState(false), wasRenderedOnClientAtLeastOnce = _a[0], setWasRenderedOnClientAtLeastOnce = _a[1];\n    useEffect(function () {\n        if (isClient()) {\n            setWasRenderedOnClientAtLeastOnce(true);\n        }\n    }, []);\n    return wasRenderedOnClientAtLeastOnce;\n}\nfunction isClient() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n","import { Component } from 'react'\nimport { Error } from './Error'\n\nexport class ErrorComponent extends Component {\n  render() {\n    return <Error />\n  }\n}\n","import React from 'react'\nimport { handleError } from '../helpers/handleError'\n\nconst listenToPromiseRejectionError = (e: PromiseRejectionEvent) =>\n  handleError(e.reason)\n\nconst listenToError = (e: ErrorEvent) => handleError(e.message)\n\nexport const useErrors = () => {\n  React.useEffect(() => {\n    window.addEventListener('error', listenToError)\n    window.addEventListener('unhandledrejection', listenToPromiseRejectionError)\n    return () => {\n      window.addEventListener('error', listenToError)\n      window.removeEventListener(\n        'unhandledrejection',\n        listenToPromiseRejectionError\n      )\n    }\n  })\n}\n","import '../theme.scss'\nimport 'firebase/compat/auth'\nimport * as Sentry from '@sentry/react'\nimport { setAutoFreeze } from 'immer'\nimport type { AppProps } from 'next/app'\nimport Head from 'next/head'\nimport Div100vh from 'react-div-100vh'\nimport { Toaster } from 'react-hot-toast'\nimport { StoreContext } from 'storeon/react'\nimport { ErrorComponent } from '../components/error/ErrorBoundary'\nimport { handleError } from '../helpers/handleError'\nimport { startSentry } from '../helpers/startSentry'\nimport { useErrors } from '../hooks/useErrors'\nimport { store } from '../store/store'\n\n// https://github.com/immerjs/immer/issues/959\nsetAutoFreeze(false)\nstartSentry()\n\nfunction _App({ Component, pageProps }: AppProps) {\n  // Listen to unhandled errors and Promise rejections\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useErrors()\n\n  return (\n    <Sentry.ErrorBoundary\n      onError={(e) => {\n        // Sentry is already capturing the error here, we do not want to report it again\n        handleError(e, { hideFromSentry: true })\n      }}\n      fallback={<ErrorComponent />}\n      beforeCapture={(scope) => {\n        try {\n          scope.setUser({ id: store.get().data.profiles[0].authId })\n        } catch (e) {\n          console.log('Storeon not configured yet. Skipping.')\n        }\n        scope.setExtra('version', process.env.NEXT_PUBLIC_VERSION || 'Unknown')\n      }}\n    >\n      <Toaster\n        position=\"top-right\"\n        toastOptions={{\n          duration: 4000,\n        }}\n      />\n      <StoreContext.Provider value={store}>\n        <Head>\n          <title>Clean Slate | App</title>\n          <meta name=\"description\" content={'Track food without judgement'} />\n        </Head>\n        <Div100vh>\n          <Component {...pageProps} />\n        </Div100vh>\n      </StoreContext.Provider>\n    </Sentry.ErrorBoundary>\n  )\n}\nexport default _App\n","let createStoreon = modules => {\n  let events = {}\n  let state = {}\n\n  let store = {\n    dispatch(event, data) {\n      if (event !== '@dispatch') {\n        store.dispatch('@dispatch', [event, data, events[event]])\n      }\n\n      if (events[event]) {\n        let changes\n        events[event].forEach(i => {\n          let diff = events[event].includes(i) && i(state, data, store)\n          if (diff && typeof diff.then !== 'function') {\n            state = { ...state, ...diff }\n            changes = { ...changes, ...diff }\n          }\n        })\n        if (changes) store.dispatch('@changed', changes)\n      }\n    },\n\n    get: () => state,\n\n    on(event, cb) {\n      ;(events[event] || (events[event] = [])).push(cb)\n\n      return () => {\n        events[event] = events[event].filter(i => i !== cb)\n      }\n    }\n  }\n\n  modules.forEach(i => {\n    if (i) i(store)\n  })\n  store.dispatch('@init')\n\n  return store\n}\n\nexport { createStoreon }\n","import { Profile } from '../models/profile'\nimport { Data } from '../store/data/types'\nimport { profileKey } from './constants'\nimport { getBasicFoods } from './Food/getBasicFoods'\nimport { isBrowser } from './isBrowser'\n\nconst { basicFoods } = getBasicFoods()\n\nconst isValid = (x: string | null) =>\n  ![null, undefined, '', 'null', 'undefined'].includes(x)\n\nexport const getCachedData = (): Data => {\n  const cachedProfile = isBrowser() ? localStorage.getItem(profileKey) : null\n\n  const profiles = isValid(cachedProfile)\n    ? (JSON.parse(cachedProfile as string) as Profile[])\n    : [new Profile()]\n\n  return { basicFoods, profiles }\n}\n","import { getCachedData } from '../../helpers/getCachedData'\nimport { DataSlice } from './types'\n\nexport const createInitialSlice = (): DataSlice => {\n  const { basicFoods, profiles } = getCachedData()\n  return {\n    currentWebsocketClient: null,\n    data: { basicFoods, profiles },\n  }\n}\n","import { produce } from 'immer'\nimport { StoreonModule } from 'storeon'\nimport { HANDLE_MISSING_BASIC_FOODS } from '../../graphql/food'\nimport { profileKey } from '../../helpers/constants'\nimport { getHasuraClient } from '../../helpers/getHasuraClient'\nimport { handleError } from '../../helpers/handleError'\nimport { isBrowser } from '../../helpers/isBrowser'\nimport { addBasicFoodsToProfile } from '../../helpers/profile/addBasicFoodsToProfile'\nimport { stringifyQuery } from '../../helpers/stringifyQuery'\nimport { Profile } from '../../models/profile'\nimport { CleanslateSlices } from '../store'\nimport { createInitialSlice } from './createInitialSlice'\nimport { DataEvents } from './types'\n\nconst updateAndCacheProfile = (state: Readonly<CleanslateSlices>) => {\n  const profileWithBasicsFoods = addBasicFoodsToProfile(\n    state.data.profiles\n  ).profiles\n\n  const newState = produce(state, (draft) => {\n    draft.data.profiles = profileWithBasicsFoods\n  })\n\n  if (isBrowser()) {\n    localStorage.setItem(profileKey, JSON.stringify(profileWithBasicsFoods))\n  }\n\n  return newState\n}\n\nexport const data: StoreonModule<CleanslateSlices, DataEvents> = (store) => {\n  store.on('@init', () => createInitialSlice())\n\n  store.on('clearData', (state) => {\n    return produce(state, (draft) => {\n      draft.data.profiles = [new Profile()]\n      draft.data.basicFoods = []\n    })\n  })\n\n  store.on('updateCurrentWebsocketClient', (state, client) => {\n    if (client) {\n      return produce(state, (draft) => {\n        // @ts-ignore\n        draft.currentWebsocketClient = client\n      })\n    } else {\n      return state\n    }\n  })\n\n  store.on('handleMissingBasicFoods', (state, missingBasicFoods) => {\n    if (missingBasicFoods.length >= 1) {\n      getHasuraClient()\n        .then((client) => {\n          client\n            .request(stringifyQuery(HANDLE_MISSING_BASIC_FOODS), {\n              ids: missingBasicFoods,\n            })\n            .then((result) => {\n              console.log(result)\n            })\n        })\n        .catch((error) => {\n          handleError(error)\n        })\n    }\n  })\n\n  store.on('addLogs', (state, logs) => {\n    return updateAndCacheProfile(\n      produce(state, (draft) => {\n        draft.data.profiles[0].logs.push(...logs)\n      })\n    )\n  })\n\n  store.on('updateLog', (state, updatedLog) => {\n    return updateAndCacheProfile(\n      produce(state, (draft) => {\n        const logs = state.data.profiles[0].logs\n        const newLogs = logs.map((log) =>\n          log.id === updatedLog.id ? updatedLog : log\n        )\n        draft.data.profiles[0].logs = newLogs\n      })\n    )\n  })\n\n  store.on('removeLogsById', (state, ids) => {\n    return updateAndCacheProfile(\n      produce(state, (draft) => {\n        const logs = state.data.profiles[0].logs\n        const newLogs = logs.filter((log) => !ids.includes(log.id))\n        draft.data.profiles[0].logs = newLogs\n      })\n    )\n  })\n\n  store.on('updateProfile', (state, newProfile) => {\n    return updateAndCacheProfile(\n      produce(state, (draft) => {\n        draft.data.profiles = newProfile\n      })\n    )\n  })\n}\n","import { EditorSlice } from './types'\n\n/** Create the initial state for the editor module */\nexport const createInitialSlice = (): EditorSlice => {\n  return {\n    editor: {\n      ingredient: null,\n    },\n  }\n}\n","import { produce } from 'immer'\nimport { StoreonModule } from 'storeon'\nimport { CleanslateSlices } from '../store'\nimport { createInitialSlice } from './createInitialSlice'\nimport { EditorEvents } from './types'\n\nexport const editor: StoreonModule<CleanslateSlices, EditorEvents> = (\n  store\n) => {\n  store.on('@init', () => createInitialSlice())\n\n  store.on('saveIngredient', (state, event) => {\n    return produce(state, (draft) => {\n      draft.editor.ingredient = event\n    })\n  })\n}\n","import { produce } from 'immer'\nimport { CleanslateSlices } from '../store/store'\n\n/** Keep a running list of all active modals AND hide/show modals */\nexport const updateModal = (\n  state: Readonly<CleanslateSlices>,\n  modal: string,\n  shouldOpen: boolean\n) => {\n  // If the model is already open, do not try to open it again!\n  // @ts-ignore\n  if (state.navbar[modal.replace('navbar.', '')] && shouldOpen) return state\n\n  const activeModals = state.navbar.activeModals as string[]\n  // If the command is to open the modal, add it to the active list\n  // Otherwise, remove it from the array via filtering\n  const updatedActiveModals = shouldOpen\n    ? [...activeModals, modal]\n    : activeModals.filter((name) => name !== modal)\n\n  return produce(state, (draft) => {\n    draft.navbar.activeModals = updatedActiveModals\n    // @ts-ignore\n    draft.navbar[modal.replace('navbar.', '')] = shouldOpen\n  })\n}\n","import { NavbarSlice } from './types'\n\n/** Create the initial state of the navbar module */\nexport const createInitialSlice = (): NavbarSlice => {\n  return {\n    navbar: {\n      activeModals: [],\n      addIngredientModalVisibility: false,\n      barcodeModalVisibility: false,\n      bodyFatPercentageModalVisibility: false,\n      caloricMaintenanceModalVisibility: false,\n      error: '',\n      errorVisibility: false,\n      exerciseModalVisibility: false,\n      foodFormModalVisibility: false,\n      foodModalVisibility: false,\n      foodToUpdate: null,\n      helpModalVisibility: false,\n      Information: null,\n      informationModalVisibility: false,\n      itemModalVisibility: false,\n      itemToUpdate: undefined,\n      menuVisibility: false,\n      modalVisibility: false,\n      moduleModalVisibility: false,\n      offline: false,\n      pwaPromptVisibility: false,\n      quickAddModalVisibility: false,\n      recipeFormModalVisibility: false,\n      recipeModalVisibility: false,\n      recipeToUpdate: null,\n      settingsModalVisibility: false,\n      targetModalVisibility: false,\n      unitModalVisibility: false,\n      user: 'PENDING',\n    },\n  }\n}\n","import cloneDeep from 'clone-deep'\nimport { produce } from 'immer'\nimport { StoreonModule } from 'storeon'\nimport { modals } from '../../constants/modals'\nimport { updateModal } from '../../helpers/updateModal'\nimport { CleanslateSlices } from '../store'\nimport { createInitialSlice } from './createInitialSlice'\nimport { NavbarEvents } from './types'\n\nexport const navbar: StoreonModule<CleanslateSlices, NavbarEvents> = (\n  store\n) => {\n  store.on('@init', () => createInitialSlice())\n\n  store.on('updateUser', (state, user) => {\n    return produce(state, (draft) => {\n      draft.navbar.user = user\n    })\n  })\n\n  store.on('openPWAPrompt', (state) => {\n    return updateModal(state as any, 'navbar.pwaPromptVisibility', true)\n  })\n\n  store.on('closePWAPrompt', (state) => {\n    return updateModal(state as any, 'navbar.pwaPromptVisibility', false)\n  })\n\n  store.on('openError', (state, error) => {\n    const newState = produce(state, (draft) => {\n      draft.navbar.error = error\n    })\n    return updateModal(newState, 'navbar.errorVisibility', true)\n  })\n\n  store.on('closeError', (state) => {\n    const newState = produce(state, (draft) => {\n      draft.navbar.error = null\n    })\n    return updateModal(newState, 'navbar.errorVisibility', false)\n  })\n\n  store.on('isOffline', (state, status) => {\n    return produce(state, (draft) => {\n      draft.navbar.offline = status\n    })\n  })\n\n  store.on('closeMenu', (state) => {\n    return updateModal(state, 'navbar.menuVisibility', false)\n  })\n\n  store.on('openMenu', (state) => {\n    return updateModal(state, 'navbar.menuVisibility', true)\n  })\n\n  store.on('closeFoodModal', (state) => {\n    return updateModal(state, 'navbar.foodModalVisibility', false)\n  })\n\n  store.on('openFoodModal', (state) => {\n    return updateModal(state, 'navbar.foodModalVisibility', true)\n  })\n\n  store.on('closeFoodFormModal', (state) => {\n    const newState = updateModal(state, 'navbar.foodFormModalVisibility', false)\n    return produce(newState, (draft) => {\n      draft.navbar.foodToUpdate = null\n    })\n  })\n\n  store.on('openFoodFormModal', (state) => {\n    return updateModal(state, 'navbar.foodFormModalVisibility', true)\n  })\n\n  store.on('setFoodToUpdate', (state, id) => {\n    return produce(state, (draft) => {\n      draft.navbar.foodToUpdate = id\n    })\n  })\n\n  store.on('closeRecipeModal', (state) => {\n    return updateModal(state, 'navbar.recipeModalVisibility', false)\n  })\n\n  store.on('openRecipeModal', (state) => {\n    return updateModal(state, 'navbar.recipeModalVisibility', true)\n  })\n\n  store.on('closeRecipeFormModal', (state) => {\n    return updateModal(state, 'navbar.recipeFormModalVisibility', false)\n  })\n\n  store.on('openRecipeFormModal', (state, event) => {\n    const newState = updateModal(\n      state,\n      'navbar.recipeFormModalVisibility',\n      true\n    )\n    return produce(newState, (draft) => {\n      draft.navbar.recipeToUpdate = event\n    })\n  })\n\n  store.on('openAddIngredientModal', (state, event) => {\n    const newState = updateModal(\n      state,\n      'navbar.addIngredientModalVisibility',\n      true\n    )\n    return produce(newState, (draft) => {\n      draft.navbar.recipeToUpdate = event\n    })\n  })\n\n  store.on('closeAddIngredientModal', (state) => {\n    const newState = produce(state, (draft) => {\n      draft.editor.ingredient = null\n    })\n    return updateModal(newState, 'navbar.addIngredientModalVisibility', false)\n  })\n\n  store.on('closeItemModal', (state) => {\n    return updateModal(state, 'navbar.itemModalVisibility', false)\n  })\n\n  store.on('openItemModal', (state, event) => {\n    const newState = updateModal(state, 'navbar.itemModalVisibility', true)\n    return produce(newState, (draft) => {\n      draft.navbar.itemToUpdate = event\n    })\n  })\n\n  store.on('closeUnitModal', (state) => {\n    return updateModal(state, 'navbar.unitModalVisibility', false)\n  })\n\n  store.on('openUnitModal', (state, event) => {\n    const newState = updateModal(state, 'navbar.unitModalVisibility', true)\n    return produce(newState, (draft) => {\n      draft.navbar.itemToUpdate = event\n    })\n  })\n\n  store.on('closeTargetModal', (state) => {\n    return updateModal(state, 'navbar.targetModalVisibility', false)\n  })\n\n  store.on('openTargetModal', (state) => {\n    return updateModal(state, 'navbar.targetModalVisibility', true)\n  })\n\n  store.on('openModal', (state) => {\n    return updateModal(state, 'navbar.modalVisibility', true)\n  })\n\n  store.on('closeModal', (state) => {\n    return updateModal(state, 'navbar.modalVisibility', false)\n  })\n\n  store.on('openQuickAddModal', (state) => {\n    return updateModal(state, 'navbar.quickAddModalVisibility', true)\n  })\n\n  store.on('closeQuickAddModal', (state) => {\n    return updateModal(state, 'navbar.quickAddModalVisibility', false)\n  })\n\n  store.on('closeHelpModal', (state) => {\n    return updateModal(state, 'navbar.helpModalVisibility', false)\n  })\n\n  store.on('openHelpModal', (state) => {\n    return updateModal(state, 'navbar.helpModalVisibility', true)\n  })\n\n  store.on('closeInformationModal', (state) => {\n    const newState = updateModal(\n      state,\n      'navbar.informationModalVisibility',\n      false\n    )\n    return produce(newState, (draft) => {\n      draft.navbar.Information = null\n    })\n  })\n\n  store.on('openInformationModal', (state, Information = null) => {\n    const newState = updateModal(\n      state,\n      'navbar.informationModalVisibility',\n      true\n    )\n    return produce(newState, (draft) => {\n      draft.navbar.Information = Information\n    })\n  })\n\n  store.on('closeExerciseModal', (state) => {\n    return updateModal(state, 'navbar.exerciseModalVisibility', false)\n  })\n\n  store.on('openExerciseModal', (state) => {\n    return updateModal(state, 'navbar.exerciseModalVisibility', true)\n  })\n\n  store.on('closeSettingsModal', (state) => {\n    return updateModal(state, 'navbar.settingsModalVisibility', false)\n  })\n\n  store.on('openSettingsModal', (state) => {\n    return updateModal(state, 'navbar.settingsModalVisibility', true)\n  })\n\n  store.on('closeBodyFatPercentageModal', (state) => {\n    return updateModal(state, 'navbar.bodyFatPercentageModalVisibility', false)\n  })\n\n  store.on('openBodyFatPercentageModal', (state) => {\n    return updateModal(state, 'navbar.bodyFatPercentageModalVisibility', true)\n  })\n\n  store.on('closeBarcodeModal', (state) => {\n    return updateModal(state, 'navbar.barcodeModalVisibility', false)\n  })\n\n  store.on('openBarcodeModal', (state) => {\n    return updateModal(state, 'navbar.barcodeModalVisibility', true)\n  })\n\n  store.on('closeAllModals', (state) => {\n    const newNavbar = cloneDeep(state.navbar)\n    newNavbar.Information = null\n    newNavbar.activeModals = []\n    modals\n      .map((modal) => modal.replace('navbar.', ''))\n      .forEach((modal) => {\n        // @ts-ignore\n        if (newNavbar[modal]) {\n          // @ts-ignore\n          newNavbar[modal] = false\n        }\n      })\n    return produce(state, (draft) => {\n      // @ts-ignore\n      draft.navbar = newNavbar\n    })\n  })\n}\n","import { createStoreon, StoreonDispatch, StoreonStore } from 'storeon'\nimport { data } from './data/module'\nimport { DataEvents, DataSlice } from './data/types'\nimport { editor } from './editor/module'\nimport { EditorEvents, EditorSlice } from './editor/types'\nimport { navbar } from './navbar/module'\nimport { NavbarEvents, NavbarSlice } from './navbar/types'\n\nexport type CleanslateEvents = DataEvents & NavbarEvents & EditorEvents\n\nexport type CleanslateSlices = DataSlice & NavbarSlice & EditorSlice\n\nexport type AllEvents =\n  | keyof DataEvents\n  | keyof NavbarEvents\n  | keyof EditorEvents\n\nexport const store = createStoreon<CleanslateSlices, CleanslateEvents>([\n  navbar,\n  data,\n  editor,\n])\n\nexport type CleanslateStore = StoreonStore<CleanslateSlices, CleanslateEvents>\n\nexport type Dispatch = StoreonDispatch<\n  DataEvents &\n    NavbarEvents &\n    EditorEvents &\n    createStoreon.DispatchableEvents<CleanslateSlices>\n>\n","import { css } from '@emotion/react'\n\nexport const colors = {\n  background: '#f7f7f7',\n  black: '#333333',\n  blue: '#ecf9f9',\n  danger: '#ff5470',\n  darkblue: '#c5ecec',\n  darkgrey: '#666666',\n  darkpurple: '#7341c7',\n  green: '#ecf9ed',\n  lightgrey: '#ededed',\n  mediumgrey: '#cccccc',\n  pink: '#ffe8e8',\n  purple: '#ad90de',\n  seashell: '#fff6ed',\n  success: '#2cb67d',\n  text: '#606c76',\n  white: '#ffffff',\n  yellow: '#fff6c2',\n}\n\nexport const layout = {\n  lg: 992,\n  md: 768,\n  sm: 576,\n  xlg: 1024,\n  xs: 320,\n  xxlg: 1500,\n}\n\nexport const { lg, md, sm, xlg, xs, xxlg } = layout\n\nexport type Colors = keyof typeof colors\n\nexport const green = css`\n  background-color: ${colors.green};\n  color: ${colors.text};\n`\nexport const blue = css`\n  background-color: ${colors.blue};\n  color: ${colors.text};\n`\nexport const pink = css`\n  background-color: ${colors.pink};\n  color: ${colors.black};\n`\n","// extracted by mini-css-extract-plugin","module.exports = require('./dist/shared/lib/head')\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/*!\n * shallow-clone <https://github.com/jonschlinkert/shallow-clone>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst valueOf = Symbol.prototype.valueOf;\nconst typeOf = require('kind-of');\n\nfunction clone(val, deep) {\n  switch (typeOf(val)) {\n    case 'array':\n      return val.slice();\n    case 'object':\n      return Object.assign({}, val);\n    case 'date':\n      return new val.constructor(Number(val));\n    case 'map':\n      return new Map(val);\n    case 'set':\n      return new Set(val);\n    case 'buffer':\n      return cloneBuffer(val);\n    case 'symbol':\n      return cloneSymbol(val);\n    case 'arraybuffer':\n      return cloneArrayBuffer(val);\n    case 'float32array':\n    case 'float64array':\n    case 'int16array':\n    case 'int32array':\n    case 'int8array':\n    case 'uint16array':\n    case 'uint32array':\n    case 'uint8clampedarray':\n    case 'uint8array':\n      return cloneTypedArray(val);\n    case 'regexp':\n      return cloneRegExp(val);\n    case 'error':\n      return Object.create(val);\n    default: {\n      return val;\n    }\n  }\n}\n\nfunction cloneRegExp(val) {\n  const flags = val.flags !== void 0 ? val.flags : (/\\w+$/.exec(val) || void 0);\n  const re = new val.constructor(val.source, flags);\n  re.lastIndex = val.lastIndex;\n  return re;\n}\n\nfunction cloneArrayBuffer(val) {\n  const res = new val.constructor(val.byteLength);\n  new Uint8Array(res).set(new Uint8Array(val));\n  return res;\n}\n\nfunction cloneTypedArray(val, deep) {\n  return new val.constructor(val.buffer, val.byteOffset, val.length);\n}\n\nfunction cloneBuffer(val) {\n  const len = val.length;\n  const buf = Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : Buffer.from(len);\n  val.copy(buf);\n  return buf;\n}\n\nfunction cloneSymbol(val) {\n  return valueOf ? Object(valueOf.call(val)) : {};\n}\n\n/**\n * Expose `clone`\n */\n\nmodule.exports = clone;\n","\"use strict\";\n\n(function(){\n\n  var\n    buf,\n    bufIdx = 0,\n    hexBytes = [],\n    i\n  ;\n\n  // Pre-calculate toString(16) for speed\n  for (i = 0; i < 256; i++) {\n    hexBytes[i] = (i + 0x100).toString(16).substr(1);\n  }\n\n  // Buffer random numbers for speed\n  // Reduce memory usage by decreasing this number (min 16)\n  // or improve speed by increasing this number (try 16384)\n  uuid.BUFFER_SIZE = 4096;\n\n  // Binary uuids\n  uuid.bin = uuidBin;\n\n  // Clear buffer\n  uuid.clearBuffer = function() {\n    buf = null;\n    bufIdx = 0;\n  };\n\n  // Test for uuid\n  uuid.test = function(uuid) {\n    if (typeof uuid === 'string') {\n      return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(uuid);\n    }\n    return false;\n  };\n\n  // Node & Browser support\n  var crypt0;\n  if (typeof crypto !== 'undefined') {\n    crypt0 = crypto;\n  } else if( (typeof window !== 'undefined') && (typeof window.msCrypto !== 'undefined')) {\n    crypt0 = window.msCrypto; // IE11\n  }\n\n  if ((typeof module !== 'undefined') && (typeof require === 'function')) {\n    crypt0 = crypt0 || require('crypto');\n    module.exports = uuid;\n  } else if (typeof window !== 'undefined') {\n    window.uuid = uuid;\n  }\n\n  // Use best available PRNG\n  // Also expose this so you can override it.\n  uuid.randomBytes = (function(){\n    if (crypt0) {\n      if (crypt0.randomBytes) {\n        return crypt0.randomBytes;\n      }\n      if (crypt0.getRandomValues) {\n        if (typeof Uint8Array.prototype.slice !== 'function') {\n          return function(n) {\n            var bytes = new Uint8Array(n);\n            crypt0.getRandomValues(bytes);\n            return Array.from(bytes);\n          };\n        }\n        return function(n) {\n          var bytes = new Uint8Array(n);\n          crypt0.getRandomValues(bytes);\n          return bytes;\n        };\n      }\n    }\n    return function(n) {\n      var i, r = [];\n      for (i = 0; i < n; i++) {\n        r.push(Math.floor(Math.random() * 256));\n      }\n      return r;\n    };\n  })();\n\n  // Buffer some random bytes for speed\n  function randomBytesBuffered(n) {\n    if (!buf || ((bufIdx + n) > uuid.BUFFER_SIZE)) {\n      bufIdx = 0;\n      buf = uuid.randomBytes(uuid.BUFFER_SIZE);\n    }\n    return buf.slice(bufIdx, bufIdx += n);\n  }\n\n  // uuid.bin\n  function uuidBin() {\n    var b = randomBytesBuffered(16);\n    b[6] = (b[6] & 0x0f) | 0x40;\n    b[8] = (b[8] & 0x3f) | 0x80;\n    return b;\n  }\n\n  // String UUIDv4 (Random)\n  function uuid() {\n    var b = uuidBin();\n    return hexBytes[b[0]] + hexBytes[b[1]] +\n      hexBytes[b[2]] + hexBytes[b[3]] + '-' +\n      hexBytes[b[4]] + hexBytes[b[5]] + '-' +\n      hexBytes[b[6]] + hexBytes[b[7]] + '-' +\n      hexBytes[b[8]] + hexBytes[b[9]] + '-' +\n      hexBytes[b[10]] + hexBytes[b[11]] +\n      hexBytes[b[12]] + hexBytes[b[13]] +\n      hexBytes[b[14]] + hexBytes[b[15]]\n    ;\n  }\n\n})();\n","/* (ignored) */","import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return deleteApp(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* InstantiationMode.EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        _addComponent(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        _addOrOverwriteComponent(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: modularAPIs.registerVersion,\r\n        setLogLevel: modularAPIs.setLogLevel,\r\n        onLog: modularAPIs.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: modularAPIs.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || modularAPIs._DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = modularAPIs.initializeApp(options, rawConfig);\r\n        if (contains(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (modularAPIs._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* ComponentType.PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* ComponentType.PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe,\r\n        ErrorFactory,\r\n        deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.2.22\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\nexport { firebase as default };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.22\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"10.5.2\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const result = await db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","export function _tagged_template_literal(strings, raw) {\n    if (!raw) raw = strings.slice(0);\n\n    return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));\n}\nexport { _tagged_template_literal as _ };\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if(!requestHeaders.getContentType(/^\\s*multipart\\/form-data/)){\n        requestHeaders.setContentType('multipart/form-data'); // mobile/desktop app frameworks\n      } else if(utils.isString(contentType = requestHeaders.getContentType())){\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        requestHeaders.setContentType(contentType.replace(/^\\s*(multipart\\/form-data);+/, '$1'))\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import firebase from '@firebase/app-compat';\nexport { default } from '@firebase/app-compat';\n\nvar name = \"firebase\";\nvar version = \"10.5.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app-compat');\n//# sourceMappingURL=index.esm.js.map\n","import { at as debugAssert, au as _isIOS, av as _isAndroid, aw as _fail, ax as _getRedirectUrl, ay as _getProjectConfig, az as _isIOS7Or8, aA as _createError, aB as _assert, aC as AuthEventManager, aD as _getInstance, b as browserLocalPersistence, aE as _persistenceKeyName, a as browserSessionPersistence, aF as _getRedirectResult, aG as _overrideRedirectResult, aH as _clearRedirectOutcomes, aI as _castAuth } from './index-94e5f531.js';\nexport { A as ActionCodeOperation, ah as ActionCodeURL, K as AuthCredential, H as AuthErrorCodes, aK as AuthImpl, aN as AuthPopup, L as EmailAuthCredential, U as EmailAuthProvider, V as FacebookAuthProvider, F as FactorId, aO as FetchProvider, X as GithubAuthProvider, W as GoogleAuthProvider, M as OAuthCredential, Y as OAuthProvider, O as OperationType, N as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, p as ProviderId, R as RecaptchaVerifier, aP as SAMLAuthCredential, Z as SAMLAuthProvider, S as SignInMethod, T as TotpMultiFactorGenerator, n as TotpSecret, _ as TwitterAuthProvider, aJ as UserImpl, aB as _assert, aI as _castAuth, aw as _fail, aM as _generateEventId, aL as _getClientVersion, aD as _getInstance, aF as _getRedirectResult, aG as _overrideRedirectResult, aE as _persistenceKeyName, a6 as applyActionCode, x as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a7 as checkActionCode, a5 as confirmPasswordReset, J as connectAuthEmulator, a9 as createUserWithEmailAndPassword, E as debugErrorMap, D as deleteUser, ae as fetchSignInMethodsForEmail, ap as getAdditionalUserInfo, o as getAuth, am as getIdToken, an as getIdTokenResult, ar as getMultiFactorResolver, j as getRedirectResult, Q as inMemoryPersistence, i as indexedDBLocalPersistence, I as initializeAuth, t as initializeRecaptchaConfig, ac as isSignInWithEmailLink, a1 as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, as as multiFactor, y as onAuthStateChanged, w as onIdTokenChanged, ai as parseActionCodeURL, G as prodErrorMap, a2 as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, aq as reload, af as sendEmailVerification, a4 as sendPasswordResetEmail, ab as sendSignInLinkToEmail, q as setPersistence, $ as signInAnonymously, a0 as signInWithCredential, a3 as signInWithCustomToken, aa as signInWithEmailAndPassword, ad as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, C as signOut, ao as unlink, B as updateCurrentUser, ak as updateEmail, al as updatePassword, u as updatePhoneNumber, aj as updateProfile, z as useDeviceLanguage, v as validatePassword, ag as verifyBeforeUpdateEmail, a8 as verifyPasswordResetCode } from './index-94e5f531.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport '@firebase/logger';\nimport 'tslib';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* AuthEventType.UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n//# sourceMappingURL=internal.js.map\n","import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.4.8\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth(), container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters);\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n//# sourceMappingURL=index.esm2017.js.map\n","import '@firebase/auth-compat';\n//# sourceMappingURL=index.esm.js.map\n","// src/utils/env.ts\nvar NOTHING = Symbol.for(\"immer-nothing\");\nvar DRAFTABLE = Symbol.for(\"immer-draftable\");\nvar DRAFT_STATE = Symbol.for(\"immer-state\");\n\n// src/utils/errors.ts\nvar errors = process.env.NODE_ENV !== \"production\" ? [\n  // All error codes, starting by 0:\n  function(plugin) {\n    return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`;\n  },\n  function(thing) {\n    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;\n  },\n  \"This object has been frozen and should not be mutated\",\n  function(data) {\n    return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + data;\n  },\n  \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n  \"Immer forbids circular references\",\n  \"The first or second argument to `produce` must be a function\",\n  \"The third argument to `produce` must be a function or undefined\",\n  \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n  \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n  function(thing) {\n    return `'current' expects a draft, got: ${thing}`;\n  },\n  \"Object.defineProperty() cannot be used on an Immer draft\",\n  \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n  \"Immer only supports deleting array indices\",\n  \"Immer only supports setting array indices and the 'length' property\",\n  function(thing) {\n    return `'original' expects a draft, got: ${thing}`;\n  }\n  // Note: if more errors are added, the errorOffset in Patches.ts should be increased\n  // See Patches.ts for additional errors\n] : [];\nfunction die(error, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const e = errors[error];\n    const msg = typeof e === \"function\" ? e.apply(null, args) : e;\n    throw new Error(`[Immer] ${msg}`);\n  }\n  throw new Error(\n    `[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n  );\n}\n\n// src/utils/common.ts\nvar getPrototypeOf = Object.getPrototypeOf;\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value)\n    return false;\n  return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor?.[DRAFTABLE] || isMap(value) || isSet(value);\n}\nvar objectCtorString = Object.prototype.constructor.toString();\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\")\n    return false;\n  const proto = getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  if (Ctor === Object)\n    return true;\n  return typeof Ctor == \"function\" && Function.toString.call(Ctor) === objectCtorString;\n}\nfunction original(value) {\n  if (!isDraft(value))\n    die(15, value);\n  return value[DRAFT_STATE].base_;\n}\nfunction each(obj, iter) {\n  if (getArchtype(obj) === 0 /* Object */) {\n    Object.entries(obj).forEach(([key, value]) => {\n      iter(key, value, obj);\n    });\n  } else {\n    obj.forEach((entry, index) => iter(index, entry, obj));\n  }\n}\nfunction getArchtype(thing) {\n  const state = thing[DRAFT_STATE];\n  return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap(thing) ? 2 /* Map */ : isSet(thing) ? 3 /* Set */ : 0 /* Object */;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  const t = getArchtype(thing);\n  if (t === 2 /* Map */)\n    thing.set(propOrOldValue, value);\n  else if (t === 3 /* Set */) {\n    thing.add(value);\n  } else\n    thing[propOrOldValue] = value;\n}\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap(target) {\n  return target instanceof Map;\n}\nfunction isSet(target) {\n  return target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy_ || state.base_;\n}\nfunction shallowCopy(base, strict) {\n  if (isMap(base)) {\n    return new Map(base);\n  }\n  if (isSet(base)) {\n    return new Set(base);\n  }\n  if (Array.isArray(base))\n    return Array.prototype.slice.call(base);\n  if (!strict && isPlainObject(base)) {\n    if (!getPrototypeOf(base)) {\n      const obj = /* @__PURE__ */ Object.create(null);\n      return Object.assign(obj, base);\n    }\n    return { ...base };\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(base);\n  delete descriptors[DRAFT_STATE];\n  let keys = Reflect.ownKeys(descriptors);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const desc = descriptors[key];\n    if (desc.writable === false) {\n      desc.writable = true;\n      desc.configurable = true;\n    }\n    if (desc.get || desc.set)\n      descriptors[key] = {\n        configurable: true,\n        writable: true,\n        // could live with !!desc.set as well here...\n        enumerable: desc.enumerable,\n        value: base[key]\n      };\n  }\n  return Object.create(getPrototypeOf(base), descriptors);\n}\nfunction freeze(obj, deep = false) {\n  if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj))\n    return obj;\n  if (getArchtype(obj) > 1) {\n    obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n  Object.freeze(obj);\n  if (deep)\n    each(obj, (_key, value) => freeze(value, true), true);\n  return obj;\n}\nfunction dontMutateFrozenCollections() {\n  die(2);\n}\nfunction isFrozen(obj) {\n  return Object.isFrozen(obj);\n}\n\n// src/utils/plugins.ts\nvar plugins = {};\nfunction getPlugin(pluginKey) {\n  const plugin = plugins[pluginKey];\n  if (!plugin) {\n    die(0, pluginKey);\n  }\n  return plugin;\n}\nfunction loadPlugin(pluginKey, implementation) {\n  if (!plugins[pluginKey])\n    plugins[pluginKey] = implementation;\n}\n\n// src/core/scope.ts\nvar currentScope;\nfunction getCurrentScope() {\n  return currentScope;\n}\nfunction createScope(parent_, immer_) {\n  return {\n    drafts_: [],\n    parent_,\n    immer_,\n    // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n    canAutoFreeze_: true,\n    unfinalizedDrafts_: 0\n  };\n}\nfunction usePatchesInScope(scope, patchListener) {\n  if (patchListener) {\n    getPlugin(\"Patches\");\n    scope.patches_ = [];\n    scope.inversePatches_ = [];\n    scope.patchListener_ = patchListener;\n  }\n}\nfunction revokeScope(scope) {\n  leaveScope(scope);\n  scope.drafts_.forEach(revokeDraft);\n  scope.drafts_ = null;\n}\nfunction leaveScope(scope) {\n  if (scope === currentScope) {\n    currentScope = scope.parent_;\n  }\n}\nfunction enterScope(immer2) {\n  return currentScope = createScope(currentScope, immer2);\n}\nfunction revokeDraft(draft) {\n  const state = draft[DRAFT_STATE];\n  if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */)\n    state.revoke_();\n  else\n    state.revoked_ = true;\n}\n\n// src/core/finalize.ts\nfunction processResult(result, scope) {\n  scope.unfinalizedDrafts_ = scope.drafts_.length;\n  const baseDraft = scope.drafts_[0];\n  const isReplaced = result !== void 0 && result !== baseDraft;\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified_) {\n      revokeScope(scope);\n      die(4);\n    }\n    if (isDraftable(result)) {\n      result = finalize(scope, result);\n      if (!scope.parent_)\n        maybeFreeze(scope, result);\n    }\n    if (scope.patches_) {\n      getPlugin(\"Patches\").generateReplacementPatches_(\n        baseDraft[DRAFT_STATE].base_,\n        result,\n        scope.patches_,\n        scope.inversePatches_\n      );\n    }\n  } else {\n    result = finalize(scope, baseDraft, []);\n  }\n  revokeScope(scope);\n  if (scope.patches_) {\n    scope.patchListener_(scope.patches_, scope.inversePatches_);\n  }\n  return result !== NOTHING ? result : void 0;\n}\nfunction finalize(rootScope, value, path) {\n  if (isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  if (!state) {\n    each(\n      value,\n      (key, childValue) => finalizeProperty(rootScope, state, value, key, childValue, path),\n      true\n      // See #590, don't recurse into non-enumerable of non drafted objects\n    );\n    return value;\n  }\n  if (state.scope_ !== rootScope)\n    return value;\n  if (!state.modified_) {\n    maybeFreeze(rootScope, state.base_, true);\n    return state.base_;\n  }\n  if (!state.finalized_) {\n    state.finalized_ = true;\n    state.scope_.unfinalizedDrafts_--;\n    const result = state.copy_;\n    let resultEach = result;\n    let isSet2 = false;\n    if (state.type_ === 3 /* Set */) {\n      resultEach = new Set(result);\n      result.clear();\n      isSet2 = true;\n    }\n    each(\n      resultEach,\n      (key, childValue) => finalizeProperty(rootScope, state, result, key, childValue, path, isSet2)\n    );\n    maybeFreeze(rootScope, result, false);\n    if (path && rootScope.patches_) {\n      getPlugin(\"Patches\").generatePatches_(\n        state,\n        path,\n        rootScope.patches_,\n        rootScope.inversePatches_\n      );\n    }\n  }\n  return state.copy_;\n}\nfunction finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {\n  if (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n    die(5);\n  if (isDraft(childValue)) {\n    const path = rootPath && parentState && parentState.type_ !== 3 /* Set */ && // Set objects are atomic since they have no keys.\n    !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;\n    const res = finalize(rootScope, childValue, path);\n    set(targetObject, prop, res);\n    if (isDraft(res)) {\n      rootScope.canAutoFreeze_ = false;\n    } else\n      return;\n  } else if (targetIsSet) {\n    targetObject.add(childValue);\n  }\n  if (isDraftable(childValue) && !isFrozen(childValue)) {\n    if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n      return;\n    }\n    finalize(rootScope, childValue);\n    if (!parentState || !parentState.scope_.parent_)\n      maybeFreeze(rootScope, childValue);\n  }\n}\nfunction maybeFreeze(scope, value, deep = false) {\n  if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n    freeze(value, deep);\n  }\n}\n\n// src/core/proxy.ts\nfunction createProxyProxy(base, parent) {\n  const isArray = Array.isArray(base);\n  const state = {\n    type_: isArray ? 1 /* Array */ : 0 /* Object */,\n    // Track which produce call this is associated with.\n    scope_: parent ? parent.scope_ : getCurrentScope(),\n    // True for both shallow and deep changes.\n    modified_: false,\n    // Used during finalization.\n    finalized_: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned_: {},\n    // The parent draft state.\n    parent_: parent,\n    // The base state.\n    base_: base,\n    // The base proxy.\n    draft_: null,\n    // set below\n    // The base copy with any updated values.\n    copy_: null,\n    // Called by the `produce` function.\n    revoke_: null,\n    isManual_: false\n  };\n  let target = state;\n  let traps = objectTraps;\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  }\n  const { revoke, proxy } = Proxy.revocable(target, traps);\n  state.draft_ = proxy;\n  state.revoke_ = revoke;\n  return proxy;\n}\nvar objectTraps = {\n  get(state, prop) {\n    if (prop === DRAFT_STATE)\n      return state;\n    const source = latest(state);\n    if (!has(source, prop)) {\n      return readPropFromProto(state, source, prop);\n    }\n    const value = source[prop];\n    if (state.finalized_ || !isDraftable(value)) {\n      return value;\n    }\n    if (value === peek(state.base_, prop)) {\n      prepareCopy(state);\n      return state.copy_[prop] = createProxy(value, state);\n    }\n    return value;\n  },\n  has(state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys(state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set(state, prop, value) {\n    const desc = getDescriptorFromProto(latest(state), prop);\n    if (desc?.set) {\n      desc.set.call(state.draft_, value);\n      return true;\n    }\n    if (!state.modified_) {\n      const current2 = peek(latest(state), prop);\n      const currentState = current2?.[DRAFT_STATE];\n      if (currentState && currentState.base_ === value) {\n        state.copy_[prop] = value;\n        state.assigned_[prop] = false;\n        return true;\n      }\n      if (is(value, current2) && (value !== void 0 || has(state.base_, prop)))\n        return true;\n      prepareCopy(state);\n      markChanged(state);\n    }\n    if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'\n    (value !== void 0 || prop in state.copy_) || // special case: NaN\n    Number.isNaN(value) && Number.isNaN(state.copy_[prop]))\n      return true;\n    state.copy_[prop] = value;\n    state.assigned_[prop] = true;\n    return true;\n  },\n  deleteProperty(state, prop) {\n    if (peek(state.base_, prop) !== void 0 || prop in state.base_) {\n      state.assigned_[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else {\n      delete state.assigned_[prop];\n    }\n    if (state.copy_) {\n      delete state.copy_[prop];\n    }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor(state, prop) {\n    const owner = latest(state);\n    const desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n    if (!desc)\n      return desc;\n    return {\n      writable: true,\n      configurable: state.type_ !== 1 /* Array */ || prop !== \"length\",\n      enumerable: desc.enumerable,\n      value: owner[prop]\n    };\n  },\n  defineProperty() {\n    die(11);\n  },\n  getPrototypeOf(state) {\n    return getPrototypeOf(state.base_);\n  },\n  setPrototypeOf() {\n    die(12);\n  }\n};\nvar arrayTraps = {};\neach(objectTraps, (key, fn) => {\n  arrayTraps[key] = function() {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\narrayTraps.deleteProperty = function(state, prop) {\n  if (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop)))\n    die(13);\n  return arrayTraps.set.call(this, state, prop, void 0);\n};\narrayTraps.set = function(state, prop, value) {\n  if (process.env.NODE_ENV !== \"production\" && prop !== \"length\" && isNaN(parseInt(prop)))\n    die(14);\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\nfunction peek(draft, prop) {\n  const state = draft[DRAFT_STATE];\n  const source = state ? latest(state) : draft;\n  return source[prop];\n}\nfunction readPropFromProto(state, source, prop) {\n  const desc = getDescriptorFromProto(source, prop);\n  return desc ? `value` in desc ? desc.value : (\n    // This is a very special case, if the prop is a getter defined by the\n    // prototype, we should invoke it with the draft as context!\n    desc.get?.call(state.draft_)\n  ) : void 0;\n}\nfunction getDescriptorFromProto(source, prop) {\n  if (!(prop in source))\n    return void 0;\n  let proto = getPrototypeOf(source);\n  while (proto) {\n    const desc = Object.getOwnPropertyDescriptor(proto, prop);\n    if (desc)\n      return desc;\n    proto = getPrototypeOf(proto);\n  }\n  return void 0;\n}\nfunction markChanged(state) {\n  if (!state.modified_) {\n    state.modified_ = true;\n    if (state.parent_) {\n      markChanged(state.parent_);\n    }\n  }\n}\nfunction prepareCopy(state) {\n  if (!state.copy_) {\n    state.copy_ = shallowCopy(\n      state.base_,\n      state.scope_.immer_.useStrictShallowCopy_\n    );\n  }\n}\n\n// src/core/immerClass.ts\nvar Immer2 = class {\n  constructor(config) {\n    this.autoFreeze_ = true;\n    this.useStrictShallowCopy_ = false;\n    /**\n     * The `produce` function takes a value and a \"recipe function\" (whose\n     * return value often depends on the base state). The recipe function is\n     * free to mutate its first argument however it wants. All mutations are\n     * only ever applied to a __copy__ of the base state.\n     *\n     * Pass only a function to create a \"curried producer\" which relieves you\n     * from passing the recipe function every time.\n     *\n     * Only plain objects and arrays are made mutable. All other objects are\n     * considered uncopyable.\n     *\n     * Note: This function is __bound__ to its `Immer` instance.\n     *\n     * @param {any} base - the initial state\n     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n     * @param {Function} patchListener - optional function that will be called with all the patches produced here\n     * @returns {any} a new state, or the initial state if nothing was modified\n     */\n    this.produce = (base, recipe, patchListener) => {\n      if (typeof base === \"function\" && typeof recipe !== \"function\") {\n        const defaultBase = recipe;\n        recipe = base;\n        const self = this;\n        return function curriedProduce(base2 = defaultBase, ...args) {\n          return self.produce(base2, (draft) => recipe.call(this, draft, ...args));\n        };\n      }\n      if (typeof recipe !== \"function\")\n        die(6);\n      if (patchListener !== void 0 && typeof patchListener !== \"function\")\n        die(7);\n      let result;\n      if (isDraftable(base)) {\n        const scope = enterScope(this);\n        const proxy = createProxy(base, void 0);\n        let hasError = true;\n        try {\n          result = recipe(proxy);\n          hasError = false;\n        } finally {\n          if (hasError)\n            revokeScope(scope);\n          else\n            leaveScope(scope);\n        }\n        usePatchesInScope(scope, patchListener);\n        return processResult(result, scope);\n      } else if (!base || typeof base !== \"object\") {\n        result = recipe(base);\n        if (result === void 0)\n          result = base;\n        if (result === NOTHING)\n          result = void 0;\n        if (this.autoFreeze_)\n          freeze(result, true);\n        if (patchListener) {\n          const p = [];\n          const ip = [];\n          getPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip);\n          patchListener(p, ip);\n        }\n        return result;\n      } else\n        die(1, base);\n    };\n    this.produceWithPatches = (base, recipe) => {\n      if (typeof base === \"function\") {\n        return (state, ...args) => this.produceWithPatches(state, (draft) => base(draft, ...args));\n      }\n      let patches, inversePatches;\n      const result = this.produce(base, recipe, (p, ip) => {\n        patches = p;\n        inversePatches = ip;\n      });\n      return [result, patches, inversePatches];\n    };\n    if (typeof config?.autoFreeze === \"boolean\")\n      this.setAutoFreeze(config.autoFreeze);\n    if (typeof config?.useStrictShallowCopy === \"boolean\")\n      this.setUseStrictShallowCopy(config.useStrictShallowCopy);\n  }\n  createDraft(base) {\n    if (!isDraftable(base))\n      die(8);\n    if (isDraft(base))\n      base = current(base);\n    const scope = enterScope(this);\n    const proxy = createProxy(base, void 0);\n    proxy[DRAFT_STATE].isManual_ = true;\n    leaveScope(scope);\n    return proxy;\n  }\n  finishDraft(draft, patchListener) {\n    const state = draft && draft[DRAFT_STATE];\n    if (!state || !state.isManual_)\n      die(9);\n    const { scope_: scope } = state;\n    usePatchesInScope(scope, patchListener);\n    return processResult(void 0, scope);\n  }\n  /**\n   * Pass true to automatically freeze all copies created by Immer.\n   *\n   * By default, auto-freezing is enabled.\n   */\n  setAutoFreeze(value) {\n    this.autoFreeze_ = value;\n  }\n  /**\n   * Pass true to enable strict shallow copy.\n   *\n   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n   */\n  setUseStrictShallowCopy(value) {\n    this.useStrictShallowCopy_ = value;\n  }\n  applyPatches(base, patches) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i--) {\n      const patch = patches[i];\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n    if (i > -1) {\n      patches = patches.slice(i + 1);\n    }\n    const applyPatchesImpl = getPlugin(\"Patches\").applyPatches_;\n    if (isDraft(base)) {\n      return applyPatchesImpl(base, patches);\n    }\n    return this.produce(\n      base,\n      (draft) => applyPatchesImpl(draft, patches)\n    );\n  }\n};\nfunction createProxy(value, parent) {\n  const draft = isMap(value) ? getPlugin(\"MapSet\").proxyMap_(value, parent) : isSet(value) ? getPlugin(\"MapSet\").proxySet_(value, parent) : createProxyProxy(value, parent);\n  const scope = parent ? parent.scope_ : getCurrentScope();\n  scope.drafts_.push(draft);\n  return draft;\n}\n\n// src/core/current.ts\nfunction current(value) {\n  if (!isDraft(value))\n    die(10, value);\n  return currentImpl(value);\n}\nfunction currentImpl(value) {\n  if (!isDraftable(value) || isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  let copy;\n  if (state) {\n    if (!state.modified_)\n      return state.base_;\n    state.finalized_ = true;\n    copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);\n  } else {\n    copy = shallowCopy(value, true);\n  }\n  each(copy, (key, childValue) => {\n    set(copy, key, currentImpl(childValue));\n  });\n  if (state) {\n    state.finalized_ = false;\n  }\n  return copy;\n}\n\n// src/plugins/patches.ts\nfunction enablePatches() {\n  const errorOffset = 16;\n  if (process.env.NODE_ENV !== \"production\") {\n    errors.push(\n      'Sets cannot have \"replace\" patches.',\n      function(op) {\n        return \"Unsupported patch operation: \" + op;\n      },\n      function(path) {\n        return \"Cannot apply patch, path doesn't resolve: \" + path;\n      },\n      \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n    );\n  }\n  const REPLACE = \"replace\";\n  const ADD = \"add\";\n  const REMOVE = \"remove\";\n  function generatePatches_(state, basePath, patches, inversePatches) {\n    switch (state.type_) {\n      case 0 /* Object */:\n      case 2 /* Map */:\n        return generatePatchesFromAssigned(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n      case 1 /* Array */:\n        return generateArrayPatches(state, basePath, patches, inversePatches);\n      case 3 /* Set */:\n        return generateSetPatches(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n    }\n  }\n  function generateArrayPatches(state, basePath, patches, inversePatches) {\n    let { base_, assigned_ } = state;\n    let copy_ = state.copy_;\n    if (copy_.length < base_.length) {\n      ;\n      [base_, copy_] = [copy_, base_];\n      [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let i = 0; i < base_.length; i++) {\n      if (assigned_[i] && copy_[i] !== base_[i]) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REPLACE,\n          path,\n          // Need to maybe clone it, as it can in fact be the original value\n          // due to the base/copy inversion at the start of this function\n          value: clonePatchValueIfNeeded(copy_[i])\n        });\n        inversePatches.push({\n          op: REPLACE,\n          path,\n          value: clonePatchValueIfNeeded(base_[i])\n        });\n      }\n    }\n    for (let i = base_.length; i < copy_.length; i++) {\n      const path = basePath.concat([i]);\n      patches.push({\n        op: ADD,\n        path,\n        // Need to maybe clone it, as it can in fact be the original value\n        // due to the base/copy inversion at the start of this function\n        value: clonePatchValueIfNeeded(copy_[i])\n      });\n    }\n    for (let i = copy_.length - 1; base_.length <= i; --i) {\n      const path = basePath.concat([i]);\n      inversePatches.push({\n        op: REMOVE,\n        path\n      });\n    }\n  }\n  function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n    const { base_, copy_ } = state;\n    each(state.assigned_, (key, assignedValue) => {\n      const origValue = get(base_, key);\n      const value = get(copy_, key);\n      const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;\n      if (origValue === value && op === REPLACE)\n        return;\n      const path = basePath.concat(key);\n      patches.push(op === REMOVE ? { op, path } : { op, path, value });\n      inversePatches.push(\n        op === ADD ? { op: REMOVE, path } : op === REMOVE ? { op: ADD, path, value: clonePatchValueIfNeeded(origValue) } : { op: REPLACE, path, value: clonePatchValueIfNeeded(origValue) }\n      );\n    });\n  }\n  function generateSetPatches(state, basePath, patches, inversePatches) {\n    let { base_, copy_ } = state;\n    let i = 0;\n    base_.forEach((value) => {\n      if (!copy_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REMOVE,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: ADD,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n    i = 0;\n    copy_.forEach((value) => {\n      if (!base_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: ADD,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: REMOVE,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n  }\n  function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {\n    patches.push({\n      op: REPLACE,\n      path: [],\n      value: replacement === NOTHING ? void 0 : replacement\n    });\n    inversePatches.push({\n      op: REPLACE,\n      path: [],\n      value: baseValue\n    });\n  }\n  function applyPatches_(draft, patches) {\n    patches.forEach((patch) => {\n      const { path, op } = patch;\n      let base = draft;\n      for (let i = 0; i < path.length - 1; i++) {\n        const parentType = getArchtype(base);\n        let p = path[i];\n        if (typeof p !== \"string\" && typeof p !== \"number\") {\n          p = \"\" + p;\n        }\n        if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === \"__proto__\" || p === \"constructor\"))\n          die(errorOffset + 3);\n        if (typeof base === \"function\" && p === \"prototype\")\n          die(errorOffset + 3);\n        base = get(base, p);\n        if (typeof base !== \"object\")\n          die(errorOffset + 2, path.join(\"/\"));\n      }\n      const type = getArchtype(base);\n      const value = deepClonePatchValue(patch.value);\n      const key = path[path.length - 1];\n      switch (op) {\n        case REPLACE:\n          switch (type) {\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              die(errorOffset);\n            default:\n              return base[key] = value;\n          }\n        case ADD:\n          switch (type) {\n            case 1 /* Array */:\n              return key === \"-\" ? base.push(value) : base.splice(key, 0, value);\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              return base.add(value);\n            default:\n              return base[key] = value;\n          }\n        case REMOVE:\n          switch (type) {\n            case 1 /* Array */:\n              return base.splice(key, 1);\n            case 2 /* Map */:\n              return base.delete(key);\n            case 3 /* Set */:\n              return base.delete(patch.value);\n            default:\n              return delete base[key];\n          }\n        default:\n          die(errorOffset + 1, op);\n      }\n    });\n    return draft;\n  }\n  function deepClonePatchValue(obj) {\n    if (!isDraftable(obj))\n      return obj;\n    if (Array.isArray(obj))\n      return obj.map(deepClonePatchValue);\n    if (isMap(obj))\n      return new Map(\n        Array.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n      );\n    if (isSet(obj))\n      return new Set(Array.from(obj).map(deepClonePatchValue));\n    const cloned = Object.create(getPrototypeOf(obj));\n    for (const key in obj)\n      cloned[key] = deepClonePatchValue(obj[key]);\n    if (has(obj, DRAFTABLE))\n      cloned[DRAFTABLE] = obj[DRAFTABLE];\n    return cloned;\n  }\n  function clonePatchValueIfNeeded(obj) {\n    if (isDraft(obj)) {\n      return deepClonePatchValue(obj);\n    } else\n      return obj;\n  }\n  loadPlugin(\"Patches\", {\n    applyPatches_,\n    generatePatches_,\n    generateReplacementPatches_\n  });\n}\n\n// src/plugins/mapset.ts\nfunction enableMapSet() {\n  class DraftMap extends Map {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 2 /* Map */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        assigned_: void 0,\n        base_: target,\n        draft_: this,\n        isManual_: false,\n        revoked_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(key) {\n      return latest(this[DRAFT_STATE]).has(key);\n    }\n    set(key, value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!latest(state).has(key) || latest(state).get(key) !== value) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_.set(key, true);\n        state.copy_.set(key, value);\n        state.assigned_.set(key, true);\n      }\n      return this;\n    }\n    delete(key) {\n      if (!this.has(key)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareMapCopy(state);\n      markChanged(state);\n      if (state.base_.has(key)) {\n        state.assigned_.set(key, false);\n      } else {\n        state.assigned_.delete(key);\n      }\n      state.copy_.delete(key);\n      return true;\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_ = /* @__PURE__ */ new Map();\n        each(state.base_, (key) => {\n          state.assigned_.set(key, false);\n        });\n        state.copy_.clear();\n      }\n    }\n    forEach(cb, thisArg) {\n      const state = this[DRAFT_STATE];\n      latest(state).forEach((_value, key, _map) => {\n        cb.call(thisArg, this.get(key), key, this);\n      });\n    }\n    get(key) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      const value = latest(state).get(key);\n      if (state.finalized_ || !isDraftable(value)) {\n        return value;\n      }\n      if (value !== state.base_.get(key)) {\n        return value;\n      }\n      const draft = createProxy(value, state);\n      prepareMapCopy(state);\n      state.copy_.set(key, draft);\n      return draft;\n    }\n    keys() {\n      return latest(this[DRAFT_STATE]).keys();\n    }\n    values() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.values(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value\n          };\n        }\n      };\n    }\n    entries() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.entries(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value: [r.value, value]\n          };\n        }\n      };\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.entries();\n    }\n  }\n  function proxyMap_(target, parent) {\n    return new DraftMap(target, parent);\n  }\n  function prepareMapCopy(state) {\n    if (!state.copy_) {\n      state.assigned_ = /* @__PURE__ */ new Map();\n      state.copy_ = new Map(state.base_);\n    }\n  }\n  class DraftSet extends Set {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 3 /* Set */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        base_: target,\n        draft_: this,\n        drafts_: /* @__PURE__ */ new Map(),\n        revoked_: false,\n        isManual_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!state.copy_) {\n        return state.base_.has(value);\n      }\n      if (state.copy_.has(value))\n        return true;\n      if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n        return true;\n      return false;\n    }\n    add(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!this.has(value)) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.add(value);\n      }\n      return this;\n    }\n    delete(value) {\n      if (!this.has(value)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      markChanged(state);\n      return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (\n        /* istanbul ignore next */\n        false\n      ));\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.clear();\n      }\n    }\n    values() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.values();\n    }\n    entries() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.entries();\n    }\n    keys() {\n      return this.values();\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.values();\n    }\n    forEach(cb, thisArg) {\n      const iterator = this.values();\n      let result = iterator.next();\n      while (!result.done) {\n        cb.call(thisArg, result.value, result.value, this);\n        result = iterator.next();\n      }\n    }\n  }\n  function proxySet_(target, parent) {\n    return new DraftSet(target, parent);\n  }\n  function prepareSetCopy(state) {\n    if (!state.copy_) {\n      state.copy_ = /* @__PURE__ */ new Set();\n      state.base_.forEach((value) => {\n        if (isDraftable(value)) {\n          const draft = createProxy(value, state);\n          state.drafts_.set(value, draft);\n          state.copy_.add(draft);\n        } else {\n          state.copy_.add(value);\n        }\n      });\n    }\n  }\n  function assertUnrevoked(state) {\n    if (state.revoked_)\n      die(3, JSON.stringify(latest(state)));\n  }\n  loadPlugin(\"MapSet\", { proxyMap_, proxySet_ });\n}\n\n// src/immer.ts\nvar immer = new Immer2();\nvar produce = immer.produce;\nvar produceWithPatches = immer.produceWithPatches.bind(\n  immer\n);\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\nvar setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);\nvar applyPatches = immer.applyPatches.bind(immer);\nvar createDraft = immer.createDraft.bind(immer);\nvar finishDraft = immer.finishDraft.bind(immer);\nfunction castDraft(value) {\n  return value;\n}\nfunction castImmutable(value) {\n  return value;\n}\nexport {\n  Immer2 as Immer,\n  applyPatches,\n  castDraft,\n  castImmutable,\n  createDraft,\n  current,\n  enableMapSet,\n  enablePatches,\n  finishDraft,\n  freeze,\n  DRAFTABLE as immerable,\n  isDraft,\n  isDraftable,\n  NOTHING as nothing,\n  original,\n  produce,\n  produceWithPatches,\n  setAutoFreeze,\n  setUseStrictShallowCopy\n};\n//# sourceMappingURL=immer.mjs.map","let e={data:\"\"},t=t=>\"object\"==typeof window?((t?t.querySelector(\"#_goober\"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement(\"style\")),{innerHTML:\" \",id:\"_goober\"})).firstChild:t||e,r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g,a=/\\/\\*[^]*?\\*\\/|  +/g,n=/\\n+/g,o=(e,t)=>{let r=\"\",l=\"\",a=\"\";for(let n in e){let c=e[n];\"@\"==n[0]?\"i\"==n[1]?r=n+\" \"+c+\";\":l+=\"f\"==n[1]?o(c,n):n+\"{\"+o(c,\"k\"==n[1]?\"\":t)+\"}\":\"object\"==typeof c?l+=o(c,t?t.replace(/([^,])+/g,e=>n.replace(/(^:.*)|([^,])+/g,t=>/&/.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):n):null!=c&&(n=/^--/.test(n)?n:n.replace(/[A-Z]/g,\"-$&\").toLowerCase(),a+=o.p?o.p(n,c):n+\":\"+c+\";\")}return r+(t&&a?t+\"{\"+a+\"}\":a)+l},c={},s=e=>{if(\"object\"==typeof e){let t=\"\";for(let r in e)t+=r+s(e[r]);return t}return e},i=(e,t,r,i,p)=>{let u=s(e),d=c[u]||(c[u]=(e=>{let t=0,r=11;for(;t<e.length;)r=101*r+e.charCodeAt(t++)>>>0;return\"go\"+r})(u));if(!c[d]){let t=u!==e?e:(e=>{let t,r,o=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]?o.shift():t[3]?(r=t[3].replace(n,\" \").trim(),o.unshift(o[0][r]=o[0][r]||{})):o[0][t[1]]=t[2].replace(n,\" \").trim();return o[0]})(e);c[d]=o(p?{[\"@keyframes \"+d]:t}:t,r?\"\":\".\"+d)}let f=r&&c.g?c.g:null;return r&&(c.g=c[d]),((e,t,r,l)=>{l?t.data=t.data.replace(l,e):-1===t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(c[d],t,i,f),d},p=(e,t,r)=>e.reduce((e,l,a)=>{let n=t[a];if(n&&n.call){let e=n(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;n=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":o(e,\"\"):!1===e?\"\":e}return e+l+(null==n?\"\":n)},\"\");function u(e){let r=this||{},l=e.call?e(r.p):e;return i(l.unshift?l.raw?p(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>Object.assign(e,t&&t.call?t(r.p):t),{}):l,t(r.target),r.g,r.o,r.k)}let d,f,g,b=u.bind({g:1}),h=u.bind({k:1});function m(e,t,r,l){o.p=t,d=e,f=r,g=l}function j(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let c=Object.assign({},n),s=c.className||a.className;r.p=Object.assign({theme:f&&f()},c),r.o=/ *go\\d+/.test(s),c.className=u.apply(r,l)+(s?\" \"+s:\"\"),t&&(c.ref=o);let i=e;return e[0]&&(i=c.as||e,delete c.as),g&&i[0]&&g(c),d(i,c)}return t?t(a):a}}export{u as css,r as extractCss,b as glob,h as keyframes,m as setup,j as styled};\n","\"use client\";\nvar W=e=>typeof e==\"function\",T=(e,t)=>W(e)?e(t):e;var U=(()=>{let e=0;return()=>(++e).toString()})(),b=(()=>{let e;return()=>{if(e===void 0&&typeof window<\"u\"){let t=matchMedia(\"(prefers-reduced-motion: reduce)\");e=!t||t.matches}return e}})();import{useEffect as H,useState as j}from\"react\";var Q=20;var S=new Map,X=1e3,$=e=>{if(S.has(e))return;let t=setTimeout(()=>{S.delete(e),u({type:4,toastId:e})},X);S.set(e,t)},J=e=>{let t=S.get(e);t&&clearTimeout(t)},v=(e,t)=>{switch(t.type){case 0:return{...e,toasts:[t.toast,...e.toasts].slice(0,Q)};case 1:return t.toast.id&&J(t.toast.id),{...e,toasts:e.toasts.map(r=>r.id===t.toast.id?{...r,...t.toast}:r)};case 2:let{toast:o}=t;return e.toasts.find(r=>r.id===o.id)?v(e,{type:1,toast:o}):v(e,{type:0,toast:o});case 3:let{toastId:s}=t;return s?$(s):e.toasts.forEach(r=>{$(r.id)}),{...e,toasts:e.toasts.map(r=>r.id===s||s===void 0?{...r,visible:!1}:r)};case 4:return t.toastId===void 0?{...e,toasts:[]}:{...e,toasts:e.toasts.filter(r=>r.id!==t.toastId)};case 5:return{...e,pausedAt:t.time};case 6:let a=t.time-(e.pausedAt||0);return{...e,pausedAt:void 0,toasts:e.toasts.map(r=>({...r,pauseDuration:r.pauseDuration+a}))}}},A=[],P={toasts:[],pausedAt:void 0},u=e=>{P=v(P,e),A.forEach(t=>{t(P)})},Y={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},I=(e={})=>{let[t,o]=j(P);H(()=>(A.push(o),()=>{let a=A.indexOf(o);a>-1&&A.splice(a,1)}),[t]);let s=t.toasts.map(a=>{var r,c;return{...e,...e[a.type],...a,duration:a.duration||((r=e[a.type])==null?void 0:r.duration)||(e==null?void 0:e.duration)||Y[a.type],style:{...e.style,...(c=e[a.type])==null?void 0:c.style,...a.style}}});return{...t,toasts:s}};var G=(e,t=\"blank\",o)=>({createdAt:Date.now(),visible:!0,type:t,ariaProps:{role:\"status\",\"aria-live\":\"polite\"},message:e,pauseDuration:0,...o,id:(o==null?void 0:o.id)||U()}),h=e=>(t,o)=>{let s=G(t,e,o);return u({type:2,toast:s}),s.id},n=(e,t)=>h(\"blank\")(e,t);n.error=h(\"error\");n.success=h(\"success\");n.loading=h(\"loading\");n.custom=h(\"custom\");n.dismiss=e=>{u({type:3,toastId:e})};n.remove=e=>u({type:4,toastId:e});n.promise=(e,t,o)=>{let s=n.loading(t.loading,{...o,...o==null?void 0:o.loading});return e.then(a=>(n.success(T(t.success,a),{id:s,...o,...o==null?void 0:o.success}),a)).catch(a=>{n.error(T(t.error,a),{id:s,...o,...o==null?void 0:o.error})}),e};import{useEffect as K,useCallback as L}from\"react\";var Z=(e,t)=>{u({type:1,toast:{id:e,height:t}})},ee=()=>{u({type:5,time:Date.now()})},D=e=>{let{toasts:t,pausedAt:o}=I(e);K(()=>{if(o)return;let r=Date.now(),c=t.map(i=>{if(i.duration===1/0)return;let d=(i.duration||0)+i.pauseDuration-(r-i.createdAt);if(d<0){i.visible&&n.dismiss(i.id);return}return setTimeout(()=>n.dismiss(i.id),d)});return()=>{c.forEach(i=>i&&clearTimeout(i))}},[t,o]);let s=L(()=>{o&&u({type:6,time:Date.now()})},[o]),a=L((r,c)=>{let{reverseOrder:i=!1,gutter:d=8,defaultPosition:p}=c||{},g=t.filter(m=>(m.position||p)===(r.position||p)&&m.height),E=g.findIndex(m=>m.id===r.id),x=g.filter((m,R)=>R<E&&m.visible).length;return g.filter(m=>m.visible).slice(...i?[x+1]:[0,x]).reduce((m,R)=>m+(R.height||0)+d,0)},[t]);return{toasts:t,handlers:{updateHeight:Z,startPause:ee,endPause:s,calculateOffset:a}}};import*as l from\"react\";import{styled as B,keyframes as z}from\"goober\";import*as y from\"react\";import{styled as C,keyframes as me}from\"goober\";import{styled as te,keyframes as k}from\"goober\";var oe=k`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}`,re=k`\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,se=k`\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}`,_=te(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#ff4b4b\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${oe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ${re} 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ${e=>e.secondary||\"#fff\"};\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ${se} 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n`;import{styled as ae,keyframes as ie}from\"goober\";var ne=ie`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`,V=ae(\"div\")`\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ${e=>e.secondary||\"#e0e0e0\"};\n  border-right-color: ${e=>e.primary||\"#616161\"};\n  animation: ${ne} 1s linear infinite;\n`;import{styled as ce,keyframes as N}from\"goober\";var pe=N`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}`,de=N`\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}`,w=ce(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#61d345\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${pe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ${de} 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${e=>e.secondary||\"#fff\"};\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n`;var ue=C(\"div\")`\n  position: absolute;\n`,le=C(\"div\")`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n`,Te=me`\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,fe=C(\"div\")`\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ${Te} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n`,M=({toast:e})=>{let{icon:t,type:o,iconTheme:s}=e;return t!==void 0?typeof t==\"string\"?y.createElement(fe,null,t):t:o===\"blank\"?null:y.createElement(le,null,y.createElement(V,{...s}),o!==\"loading\"&&y.createElement(ue,null,o===\"error\"?y.createElement(_,{...s}):y.createElement(w,{...s})))};var ye=e=>`\n0% {transform: translate3d(0,${e*-200}%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n`,ge=e=>`\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,${e*-150}%,-1px) scale(.6); opacity:0;}\n`,he=\"0%{opacity:0;} 100%{opacity:1;}\",xe=\"0%{opacity:1;} 100%{opacity:0;}\",be=B(\"div\")`\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n`,Se=B(\"div\")`\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n`,Ae=(e,t)=>{let s=e.includes(\"top\")?1:-1,[a,r]=b()?[he,xe]:[ye(s),ge(s)];return{animation:t?`${z(a)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`:`${z(r)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`}},F=l.memo(({toast:e,position:t,style:o,children:s})=>{let a=e.height?Ae(e.position||t||\"top-center\",e.visible):{opacity:0},r=l.createElement(M,{toast:e}),c=l.createElement(Se,{...e.ariaProps},T(e.message,e));return l.createElement(be,{className:e.className,style:{...a,...o,...e.style}},typeof s==\"function\"?s({icon:r,message:c}):l.createElement(l.Fragment,null,r,c))});import{css as Pe,setup as Oe}from\"goober\";import*as f from\"react\";Oe(f.createElement);var Ee=({id:e,className:t,style:o,onHeightUpdate:s,children:a})=>{let r=f.useCallback(c=>{if(c){let i=()=>{let d=c.getBoundingClientRect().height;s(e,d)};i(),new MutationObserver(i).observe(c,{subtree:!0,childList:!0,characterData:!0})}},[e,s]);return f.createElement(\"div\",{ref:r,className:t,style:o},a)},Re=(e,t)=>{let o=e.includes(\"top\"),s=o?{top:0}:{bottom:0},a=e.includes(\"center\")?{justifyContent:\"center\"}:e.includes(\"right\")?{justifyContent:\"flex-end\"}:{};return{left:0,right:0,display:\"flex\",position:\"absolute\",transition:b()?void 0:\"all 230ms cubic-bezier(.21,1.02,.73,1)\",transform:`translateY(${t*(o?1:-1)}px)`,...s,...a}},ve=Pe`\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n`,O=16,Ie=({reverseOrder:e,position:t=\"top-center\",toastOptions:o,gutter:s,children:a,containerStyle:r,containerClassName:c})=>{let{toasts:i,handlers:d}=D(o);return f.createElement(\"div\",{style:{position:\"fixed\",zIndex:9999,top:O,left:O,right:O,bottom:O,pointerEvents:\"none\",...r},className:c,onMouseEnter:d.startPause,onMouseLeave:d.endPause},i.map(p=>{let g=p.position||t,E=d.calculateOffset(p,{reverseOrder:e,gutter:s,defaultPosition:t}),x=Re(g,E);return f.createElement(Ee,{id:p.id,key:p.id,onHeightUpdate:d.updateHeight,className:p.visible?ve:\"\",style:x},p.type===\"custom\"?T(p.message,p):a?a(p):f.createElement(F,{toast:p,position:g}))}))};var _t=n;export{w as CheckmarkIcon,_ as ErrorIcon,V as LoaderIcon,F as ToastBar,M as ToastIcon,Ie as Toaster,_t as default,T as resolveValue,n as toast,D as useToaster,I as useToasterStore};\n//# sourceMappingURL=index.mjs.map","import {\n  useMemo,\n  useContext,\n  useState,\n  useLayoutEffect,\n  useEffect,\n  createContext,\n  createElement,\n  forwardRef\n} from 'react'\n\nlet StoreContext = createContext()\n\nlet useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nlet customContext = context => (...keys) => {\n  let store = useContext(context)\n  if (false && !store) {\n    throw new Error(\n      'Could not find storeon context value.' +\n        'Please ensure the component is wrapped in a <StoreContext.Provider>'\n    )\n  }\n\n  let rerender = useState({})\n\n  useIsomorphicLayoutEffect(() => {\n    return store.on('@changed', (_, changed) => {\n      let changesInKeys = keys.some(key => key in changed)\n      if (changesInKeys) rerender[1]({})\n    })\n  }, [])\n\n  return useMemo(() => {\n    let state = store.get()\n    let data = {}\n    keys.forEach(key => {\n      data[key] = state[key]\n    })\n    data.dispatch = store.dispatch\n    return data\n  }, [rerender[0]])\n}\n\nlet useStoreon = customContext(StoreContext)\n\nlet connectStoreon = (...keys) => {\n  let Component = keys.pop()\n\n  return forwardRef((originProps, ref) => {\n    let props = { ...originProps, ...useStoreon(...keys), ref }\n    return createElement(Component, props)\n  })\n}\n\nexport { useStoreon, StoreContext, connectStoreon, customContext }\n"],"names":["StyleSheet","options","_this","_insertTag","tag","before","tags","length","insertionPoint","nextSibling","prepend","container","firstChild","insertBefore","push","isSpeedy","undefined","speedy","ctr","nonce","key","_proto","prototype","hydrate","nodes","forEach","insert","rule","document","createElement","setAttribute","appendChild","createTextNode","sheet","sheetForTag","i","styleSheets","ownerNode","insertRule","cssRules","e","flush","parentNode","removeChild","abs","Math","Utility_from","String","fromCharCode","Utility_assign","Object","assign","Utility_replace","value","pattern","replacement","replace","indexof","search","indexOf","Utility_charat","index","charCodeAt","Utility_substr","begin","end","slice","Utility_strlen","Utility_append","array","line","column","Tokenizer_length","position","character","characters","node","root","parent","type","props","children","return","Tokenizer_copy","next","peek","token","alloc","delimit","delimiter","trim","Enum_MS","Enum_MOZ","Enum_WEBKIT","COMMENT","Enum_RULESET","Enum_DECLARATION","Enum_KEYFRAMES","Serializer_serialize","callback","output","stringify","element","join","ruleset","offset","rules","points","post","size","j","k","x","y","z","declaration","identifierWithPointTracking","previous","toRules","parsed","getRules","fixedElements","WeakMap","compat","isImplicitRule","get","set","parentRules","removeLabel","defaultStylisPlugins","emotion_cache_browser_esm_prefix","map","exec","createCache","collection","currentSheet","ssrStyles","querySelectorAll","Array","call","dataEmotionAttribute","getAttribute","head","stylisPlugins","inserted","nodesToHydrate","attrib","split","serializer","omnipresentPlugins","concat","stylis","styles","parse","rulesets","pseudo","declarations","atrule","property","variable","scanning","ampersand","reference","whitespace","escaping","count","caret","commenter","prev","identifier","cache","registered","selector","serialized","shouldCache","name","css","_len","arguments","args","_key","_emotion_serialize__WEBPACK_IMPORTED_MODULE_2__","O","func","registerStyles","isStringTag","className","insertStyles","current","emotion_element_c39617d8_browser_esm_hasOwnProperty","hasOwnProperty","EmotionCacheContext","react","createContext","HTMLElement","emotion_cache_browser_esm","Z","Provider","ThemeContext","typePropName","createEmotionProps","newProps","Insertion","_ref","emotion_use_insertion_effect_with_fallbacks_browser_esm","L","Emotion","ref","classNames","rawClassName","cssProp","WrappedComponent","registeredStyles","emotion_serialize_browser_esm","useContext","Fragment","forwardRef","jsx_runtime","jsx","jsxs","cursor","unitlessKeys","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","create","arg","styleName","toLowerCase","processStyleValue","match","p1","p2","handleInterpolation","mergedProps","interpolation","__emotion_styles","anim","createStringFromObject","obj","string","isArray","_i","interpolated","previousCursor","result","cached","labelPattern","serializeStyles","stringMode","strings","raw","lastIndex","identifierName","murmur2","str","h","len","toString","useInsertionEffect","react__WEBPACK_IMPORTED_MODULE_0___namespace_cache","__webpack_require__","t","react__WEBPACK_IMPORTED_MODULE_0__","useInsertionEffectAlwaysWithSyncFallback","useLayoutEffect","clientPlatform","__rest","s","p","getOwnPropertySymbols","propertyIsEnumerable","SuppressedError","ProviderId","FACEBOOK","GITHUB","GOOGLE","PASSWORD","PHONE","TWITTER","ActionCodeOperation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","_prodErrorMap","debugErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","index_esm2017","LL","logClient","dist_esm_index_esm2017","Yd","_logError","msg","logLevel","ERROR","error","esm_index_esm2017","SDK_VERSION","_fail","authOrCode","rest","createErrorInternal","_createError","_errorWithCustomMessage","auth","code","message","errorMap","prodErrorMap","factory","appName","_assertInstanceOf","object","instance","constructorInstance","constructor","fullParams","_errorFactory","_assert","assertion","debugFail","failure","debugAssert","_getCurrentUrl","_a","self","location","href","_isHttpOrHttps","_getCurrentScheme","protocol","Delay","shortDelay","longDelay","isMobile","uI","b$","navigator","onLine","ru","min","_emulatorUrl","config","path","emulator","url","startsWith","FetchProvider","initialize","fetchImpl","headersImpl","responseImpl","fetch","globalThis","headers","Headers","response","Response","SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","request","tenantId","_performApiRequest","method","customErrorMap","_performFetchWithErrorHandling","body","params","JSON","query","xO","apiKey","_getAdditionalHeaders","languageCode","_getFinalTarget","apiHost","referrerPolicy","fetchFn","_canInitEmulator","networkTimeout","NetworkTimeout","Promise","race","promise","clearNetworkTimeout","json","_makeTaggedError","ok","errorMessage","serverErrorCode","serverErrorMessage","authError","ZR","_performSignInRequest","serverResponse","_serverResponse","host","base","apiScheme","timer","_","reject","setTimeout","clearTimeout","errorParams","email","phoneNumber","customData","_tokenResponse","isV2","grecaptcha","getResponse","isEnterprise","enterprise","RecaptchaConfig","siteKey","recaptchaEnforcementState","recaptchaKey","getProviderEnforcementState","providerStr","provider","_parseEnforcementState","enforcementStateStr","enforcementState","isProviderEnabled","getRecaptchaParams","recaptchaSiteKey","getRecaptchaConfig","deleteAccount","deleteLinkedAccounts","getAccountInfo","utcTimestampToDateString","utcTimestamp","date","Date","Number","isNaN","getTime","toUTCString","getIdTokenResult","user","forceRefresh","userInternal","m9","getIdToken","claims","_parseToken","exp","auth_time","iat","firebase","signInProvider","authTime","secondsStringToMilliseconds","issuedAtTime","expirationTime","signInSecondFactor","seconds","algorithm","payload","signature","decoded","tV","_logoutIfInvalidated","bypassAuthState","isUserInvalidated","currentUser","signOut","ProactiveRefresh","isRunning","timerId","errorBackoff","_start","schedule","_stop","getInterval","wasError","interval","expTime","stsTokenManager","now","max","iteration","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","_copy","metadata","toJSON","_reloadWithoutSaving","idToken","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","providers","providerId","uid","rawId","displayName","photoURL","photoUrl","providerData","mergeProviderData","original","newData","deduped","filter","o","some","n","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","localId","emailVerified","reload","_persistUserIfCurrent","_notifyListenersIfCurrent","requestStsToken","refreshToken","tokenApiHost","accessToken","access_token","expiresIn","expires_in","refresh_token","StsTokenManager","isExpired","updateFromServerResponse","_tokenExpiresIn","parsedToken","updateTokensAndExpiration","getToken","refresh","clearRefreshToken","oldToken","expiresInSec","fromJSON","manager","_assign","_clone","_performRefresh","assertStringOrUndefined","UserImpl","opt","proactiveRefresh","reloadUserInfo","reloadListener","userInfo","newUser","_onReload","_startProactiveRefresh","_stopProactiveRefresh","_updateTokensIfNecessary","tokensRefreshed","delete","_redirectEventId","_fromJSON","_b","_c","_d","_e","_f","_g","_h","plainObjectTokenManager","_fromIdTokenResponse","idTokenResponse","instanceCache","Map","_getInstance","cls","Function","InMemoryPersistence","storage","_isAvailable","_set","_get","_remove","_addListener","_listener","_removeListener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","bind","setCurrentUser","getCurrentUser","blob","removeCurrentUser","savePersistenceForRedirect","setPersistence","newPersistence","persistenceHierarchy","availablePersistences","all","selectedPersistence","userToMigrate","migrationHierarchy","_shouldAllowMigration","_getBrowserName","userAgent","ua","includes","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","matches","z$","test","_isIOS","_isIOS7Or8","_isMobileBrowser","_getClientVersion","frameworks","reportedPlatform","reportedFrameworks","AuthMiddlewareQueue","queue","pushCallback","onAbort","wrappedCallback","resolve","runMiddleware","nextUser","onAbortStack","beforeStateCallback","reverse","originalMessage","_getPasswordPolicy","PasswordPolicyImpl","responseOptions","customStrengthOptions","minPasswordLength","maxPasswordLength","containsLowercaseCharacter","containsLowercaseLetter","containsUppercaseCharacter","containsUppercaseLetter","containsNumericCharacter","containsNonAlphanumericCharacter","allowedNonAlphanumericCharacters","forceUpgradeOnSignin","schemaVersion","validatePassword","password","status","isValid","passwordPolicy","validatePasswordLengthOptions","validatePasswordCharacterOptions","meetsMinPasswordLength","meetsMaxPasswordLength","passwordChar","updatePasswordCharacterOptionsStatuses","charAt","AuthImpl","app","heartbeatServiceProvider","appCheckServiceProvider","emulatorConfig","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","redirectUser","isProactiveRefreshEnabled","EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION","_isInitialized","_deleted","_initializationPromise","_popupRedirectResolver","_agentRecaptchaConfig","_tenantRecaptchaConfigs","_projectPasswordPolicy","_tenantPasswordPolicies","lastNotifiedUid","settings","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","_initializeWithPersistence","popupRedirectResolver","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","assertedPersistence","_currentUser","_updateCurrentUser","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","storedUserEventId","tryRedirectSignIn","directlySetCurrentUser","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectResolver","_completeRedirectFn","_setRedirectUser","useDeviceLanguage","_getUserLanguage","navigatorLanguage","languages","language","_delete","updateCurrentUser","userExtern","skipBeforeStateCallbacks","notifyAuthListeners","redirectPersistenceManager","_getRecaptchaConfig","_getPasswordPolicyInternal","_updatePasswordPolicy","_getPersistence","_updateErrorMap","onAuthStateChanged","nextOrObserver","completed","registerStateListener","beforeAuthStateChanged","onIdTokenChanged","authStateReady","unsubscribe","redirectManager","resolver","_redirectPersistence","_redirectUserForId","id","currentUid","subscription","cb","isUnsubscribed","then","addObserver","action","_logFramework","framework","sort","_getFrameworks","appId","heartbeatsHeader","getImmediate","optional","getHeartbeatsHeader","appCheckToken","_getAppCheckToken","appCheckTokenResult","_logWarn","WARN","warn","_castAuth","observer","ne","_loadJS","el","onload","onerror","charset","getScriptParentElement","getElementsByTagName","_generateCallbackName","prefix","floor","random","RecaptchaEnterpriseVerifier","authExtern","verify","retrieveSiteKey","clientType","version","catch","retrieveRecaptchaToken","window","ready","execute","Error","RECAPTCHA_ENTERPRISE_URL","injectRecaptchaFields","captchaResp","captchaResponse","verifier","newRequest","handleRecaptchaFlow","authInstance","actionName","actionMethod","console","log","requestWithRecaptcha","connectAuthEmulator","authInternal","disableWarnings","extractProtocol","port","extractHostAndPort","authority","substr","hostAndPort","pop","bracketedIPv6","parsePort","portStr","freeze","emitEmulatorWarning","attachBanner","sty","style","innerText","width","backgroundColor","border","color","bottom","left","margin","textAlign","classList","add","info","readyState","addEventListener","protocolEnd","AuthCredential","signInMethod","_getIdTokenResponse","_auth","_linkToIdToken","_idToken","_getReauthenticationResolver","resetPassword","updateEmailPassword","applyActionCode$1","signInWithPassword","sendOobCode","sendEmailVerification$1","sendPasswordResetEmail$1","sendSignInLinkToEmail$1","verifyAndChangeEmail","signInWithEmailLink$1","signInWithEmailLinkForLinking","EmailAuthCredential","_email","_password","_tenantId","_fromEmailAndPassword","_fromEmailAndCode","oobCode","returnSecureToken","signInWithIdp","OAuthCredential","pendingToken","_fromParams","cred","oauthToken","oauthTokenSecret","secret","buildRequest","autoCreate","requestUri","postBody","sendPhoneVerificationCode","signInWithPhoneNumber$1","linkWithPhoneNumber$1","temporaryProof","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","verifyPhoneNumberForExisting","apiRequest","operation","PhoneAuthCredential","_fromVerification","verificationId","verificationCode","_fromTokenResponse","_makeVerificationRequest","sessionInfo","ActionCodeURL","actionLink","searchParams","zd","pd","parseMode","mode","continueUrl","parseLink","link","parseDeepLink","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","EmailAuthProvider","PROVIDER_ID","credential","credentialWithLink","emailLink","actionCodeUrl","EMAIL_PASSWORD_SIGN_IN_METHOD","EMAIL_LINK_SIGN_IN_METHOD","FederatedAuthProvider","defaultLanguageCode","customParameters","setDefaultLanguage","setCustomParameters","customOAuthParameters","getCustomParameters","BaseOAuthProvider","scopes","addScope","scope","getScopes","OAuthProvider","credentialFromJSON","_credential","rawNonce","credentialFromResult","userCredential","oauthCredentialFromTaggedObject","credentialFromError","tokenResponse","oauthIdToken","oauthAccessToken","FacebookAuthProvider","FACEBOOK_SIGN_IN_METHOD","credentialFromTaggedObject","GoogleAuthProvider","GOOGLE_SIGN_IN_METHOD","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","SAMLAuthCredential","_create","SAMLAuthProvider","samlCredentialFromTaggedObject","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","signUp","UserCredentialImpl","operationType","providerIdForResponse","userCred","_forOperation","signInAnonymously","MultiFactorError","setPrototypeOf","_fromErrorAndOperation","_processCredentialSavingMfaContextIfNecessary","idTokenProvider","providerDataAsNames","Set","pid","unlink","_assertLinkedStatus","deleteProvider","providersLeft","has","_link$1","expected","providerIds","_reauthenticate","sub","_signInWithCredential","signInWithCredential","linkWithCredential","reauthenticateWithCredential","signInWithCustomToken$1","signInWithCustomToken","customToken","MultiFactorInfoImpl","factorId","mfaEnrollmentId","enrollmentTime","enrolledAt","_fromServerResponse","enrollment","PhoneMultiFactorInfoImpl","TotpMultiFactorInfoImpl","phoneInfo","_setActionCodeSettingsOnRequest","actionCodeSettings","dynamicLinkDomain","canHandleCodeInApp","handleCodeInApp","iOS","bundleId","iOSBundleId","android","packageName","androidInstallApp","installApp","androidMinimumVersionCode","minimumVersion","androidPackageName","recachePasswordPolicy","sendPasswordResetEmail","requestType","confirmPasswordReset","newPassword","applyActionCode","checkActionCode","authModular","newEmail","mfaInfo","multiFactorInfo","data","previousEmail","verifyPasswordResetCode","createUserWithEmailAndPassword","signUpResponse","signInWithEmailAndPassword","sendSignInLinkToEmail","isSignInWithEmailLink","signInWithEmailLink","createAuthUri","fetchSignInMethodsForEmail","continueUri","signinMethods","sendEmailVerification","verifyBeforeUpdateEmail","updateProfile$1","updateProfile","passwordProvider","find","updateEmail","updateEmailOrPassword","updatePassword","GenericAdditionalUserInfo","isNewUser","profile","FederatedAdditionalUserInfoWithUsername","username","FacebookAdditionalUserInfo","GithubAdditionalUserInfo","login","GoogleAdditionalUserInfo","TwitterAdditionalUserInfo","screenName","getAdditionalUserInfo","rawUserInfo","kind","filteredProviderId","MultiFactorSessionImpl","_fromIdtoken","_fromMfaPendingCredential","mfaPendingCredential","multiFactorSession","pendingCredential","MultiFactorResolverImpl","session","hints","signInResolver","_fromError","mfaResponse","_process","resolveSignIn","assertionExtern","getMultiFactorResolver","errorInternal","MultiFactorUserImpl","enrolledFactors","_fromUser","getSession","enroll","finalizeMfaResponse","unenroll","infoOrUid","multiFactorUserCache","multiFactor","userModular","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","setItem","removeItem","getItem","BrowserLocalPersistence","localStorage","event","poll","onStorageEvent","listeners","localCache","pollTimer","safariLocalStorageNotSynced","_iframeCannotSyncWebStorage","_isIframe","top","fallbackToPolling","forAllChangedKeys","keys","newValue","oldValue","_oldValue","notifyListeners","detachListener","stopPolling","storedValue","triggerListeners","_isIE10","w1","documentMode","listener","from","startPolling","setInterval","StorageEvent","clearInterval","attachListener","removeEventListener","browserLocalPersistence","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","Receiver","eventTarget","handlersMap","handleEvent","existingInstance","receivers","receiver","isListeningto","newInstance","eventId","eventType","messageEvent","handlers","ports","postMessage","promises","handler","origin","fulfilled","reason","_subscribe","eventHandler","_unsubscribe","_generateEventId","digits","Sender","target","removeMessageHandler","messageChannel","port1","onMessage","close","_send","timeout","completionTimer","MessageChannel","start","ackTimer","port2","finally","_window","_isWorker","_getActiveServiceWorker","serviceWorker","registration","active","DB_NAME","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","toPromise","getObjectStore","db","isReadWrite","transaction","objectStore","_openDatabase","indexedDB","open","createObjectStore","keyPath","objectStoreNames","contains","_deleteDatabase","deleteDatabase","_putObject","put","getObject","_deleteObject","IndexedDBLocalPersistence","pendingWrites","sender","serviceWorkerReceiverAvailable","activeServiceWorker","_workerInitializationPromise","initializeServiceWorkerMessaging","_openDb","_withRetries","op","numAttempts","initializeReceiver","initializeSender","_origin","_poll","keyProcessed","_data","results","notifyServiceWorker","_getServiceWorkerController","controller","_withPendingWrite","write","getAllRequest","getAll","keysInResult","fbase_key","localKey","indexedDBLocalPersistence","MockReCaptcha","counter","_widgets","render","parameters","MockWidget","reset","optWidgetId","containerOrId","deleted","responseToken","clickHandler","getElementById","isVisible","checkIfDeleted","generateRandomAlphaNumericString","chars","allowedChars","expiredCallback","_JSLOAD_CALLBACK","NETWORK_TIMEOUT_DELAY","ReCaptchaLoaderImpl","hostLanguage","librarySeparatelyLoaded","load","hl","shouldResolveImmediately","recaptcha","widgetId","clearedOneInstance","MockReCaptchaLoaderImpl","RECAPTCHA_VERIFIER_TYPE","DEFAULT_PARAMS","theme","RecaptchaVerifier","destroyed","tokenChangeListeners","renderPromise","isInvisible","makeTokenCallback","_recaptchaLoader","validateStartingState","assertNotDestroyed","getAssertedRecaptcha","tokenChange","makeRenderPromise","_reset","clear","childNodes","sitekey","hasChildNodes","existing","globalFunc","init","guaranteedEmpty","ConfirmationResultImpl","onConfirmation","confirm","authCredential","signInWithPhoneNumber","appVerifier","_verifyPhoneNumber","linkWithPhoneNumber","reauthenticateWithPhoneNumber","recaptchaToken","phoneInfoOptions","phoneEnrollmentInfo","phoneSessionInfo","multiFactorHint","multiFactorUid","phoneSignInInfo","phoneResponseInfo","updatePhoneNumber","PhoneAuthProvider","verifyPhoneNumber","phoneOptions","applicationVerifier","_withDefaultResolver","resolverOverride","PHONE_SIGN_IN_METHOD","IdpCredential","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","_link","AbstractPopupRedirectOperation","pendingPromise","eventManager","onExecution","registerConsumer","onAuthEvent","urlResponse","getIdpTask","onError","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","signInWithPopup","resolverInternal","PopupOperation","executeNotNull","reauthenticateWithPopup","linkWithPopup","authWindow","pollId","currentPopupAction","cancel","_openPopup","associatedEvent","_originValidation","_isIframeWebStorageSupported","isSupported","pollUserCancellation","closed","redirectOutcomeMap","RedirectAction","readyOutcome","hasPendingRedirect","_getAndClearPendingRedirectStatus","pendingRedirectKey","resolverPersistence","_setPendingRedirectStatus","_clearRedirectOutcomes","signInWithRedirect","_signInWithRedirect","_openRedirect","reauthenticateWithRedirect","_reauthenticateWithRedirect","prepareUserForRedirect","linkWithRedirect","_linkWithRedirect","getRedirectResult","_getRedirectResult","resolverExtern","AuthEventManager","cachedEventUids","consumers","queuedRedirectEvent","hasHandledPotentialRedirect","lastProcessedEventTime","authEventConsumer","isEventForConsumer","sendToConsumer","saveEventToCache","onEvent","hasEventBeenHandled","handled","consumer","isRedirectEvent","isNullRedirectEvent","eventIdMatches","eventUid","v","_getProjectConfig","IP_ADDRESS_REGEX","HTTP_REGEX","_validateOrigin","authorizedDomains","domain","matchDomain","currentUrl","hostname","URL","ceUrl","escapedDomainPattern","re","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","r","CP","cachedGApiLoader","PING_TIMEOUT","IFRAME_ATTRIBUTES","height","tabindex","EID_FROM_APIHOST","_openIframe","context","loadGapiIframe","gapi","iframes","getContext","ontimeout","Iframe","cbName","where","getIframeUrl","eid","fw","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","iframe","restyle","setHideOnLeave","networkError","networkErrorTimer","clearTimerAndResolve","ping","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","AuthPopup","FIREBASE_APP_CHECK_FRAGMENT_ID","encodeURIComponent","_getRedirectUrl","authType","redirectUrl","additionalParams","xb","entries","tid","paramsDict","appCheckTokenFragment","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","browserPopupRedirectResolver","eventManagers","originValidationPromises","_open","screen","availHeight","availWidth","scrollbars","optionsString","reduce","accum","_isIOSStandalone","standalone","openAsNewWindowIOS","click","createEvent","initMouseEvent","dispatchEvent","newWin","focus","initAndGetManager","register","iframeEvent","authEvent","send","MultiFactorAssertionImpl","_finalizeEnroll","_finalizeSignIn","PhoneMultiFactorAssertionImpl","_fromCredential","phoneVerificationInfo","PhoneMultiFactorGenerator","FACTOR_ID","TotpMultiFactorAssertionImpl","otp","enrollmentId","_fromSecret","_fromEnrollmentId","totpVerificationInfo","_makeTotpVerificationInfo","TotpSecret","secretKey","hashingAlgorithm","codeLength","codeIntervalSeconds","enrollmentCompletionDeadline","_fromStartTotpMfaEnrollmentResponse","totpSessionInfo","sharedSecretKey","verificationCodeLength","periodSec","finalizeEnrollmentTime","generateQrCodeUrl","accountName","issuer","useDefaults","_isEmptyString","input","index_94e5f531_name","AuthInterop","internalListeners","getUid","assertAuthConfigured","addAuthTokenListener","updateProactiveRefresh","removeAuthTokenListener","authIdTokenMaxAge","Pz","lastPostedIdToken","mintCookieFactory","idTokenResult","idTokenAge","getAuth","getApp","_getProvider","isInitialized","initializeAuth","deps","initialOptions","getOptions","vZ","authTokenSyncUrl","mintCookie","authEmulatorHost","q4","_registerComponent","component_dist_esm_index_esm2017","wA","getProvider","_initializeAuthInstance","hierarchy","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","authInternalProvider","registerVersion","getVersionForPlatform","deepExtend","source","dateValue","prop","deepEqual","a","b","aKeys","bKeys","aProp","bProp","isObject","stringToByteArray$1","out","c","byteArrayToString","bytes","pos","c1","c2","c3","c4","u","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","DecodeBase64StringError","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","base64Decode","getDefaultsFromGlobal","getGlobal","g","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","process","env","defaultsJsonString","getDefaultsFromCookie","cookie","getDefaults","getDefaultEmulatorHost","emulatorHosts","productName","getDefaultAppConfig","getExperimentalSetting","Deferred","wrapCallback","getUA","isMobileCordova","isNode","forceEnvironment","isBrowser","isBrowserExtension","runtime","chrome","browser","isReactNative","isIE","isIndexedDBAvailable","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","onsuccess","onupgradeneeded","FirebaseError","captureStackTrace","ErrorFactory","service","serviceName","errors","fullCode","template","PATTERN","fullMessage","isEmpty","thing","querystring","querystringParams","arrayVal","querystringDecode","tokens","decodeURIComponent","extractQuerystring","queryStart","fragmentStart","substring","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","observers","unsubscribes","observerCount","task","finalized","forEachObserver","complete","implementsAnyMethods","methods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","err","getModularInstance","_delegate","originalFunctionToString","cachedFetchImpl","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","InboundFilters","__initStatic","_options","setupOnce","_addGlobaleventProcessor","_getCurrentHub","processEvent","_eventHint","client","ignoreErrors","clientOptions","_mergeOptions","internalOptions","allowUrls","denyUrls","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_shouldDropEvent","_isSentryError","exception","values","__SENTRY_DEBUG__","esm_logger","kg","misc","jH","_getPossibleEventMessages","lastException","possibleMessages","U0","_isIgnoredTransaction","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","frames","stacktrace","_getLastValidUrl","frame","filename","oO","FunctionToString","HK","apply","installedIntegrations","setupIntegration","integration","integrationIndex","eventProcessors","cc","esm_hub","Gd","on","preprocessEvent","addEventProcessor","processor","getBaseApiEndpoint","dsn","SentryError","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_eventProcessors","_dsn","esm_dsn","vK","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","tunnel","sdkInfo","_metadata","sdk","projectId","_j","sentry_key","publicKey","sentry_version","sentry_client","_transport","transport","recordDroppedEvent","transportOptions","captureException","YO","event_id","eventFromException","_captureEvent","captureMessage","level","promisedEvent","is","pt","eventFromMessage","captureEvent","originalException","captureSession","release","sendSession","esm_session","CT","getDsn","getSdkMetadata","getTransport","_isClientDoneProcessing","clientFinished","transportFlushed","syncpromise","WD","enabled","getEventProcessors","eventProcessor","setupIntegrations","forceInitialize","_isEnabled","integrations","getIntegrationById","integrationId","getIntegration","_oO","addIntegration","sendEvent","emit","createEventEnvelope","esm_envelope","HY","packages","envelopeHeaders","Cd","sdkProcessingMetadata","eventItem","Jd","attachment","attachments","BO","zQ","textEncoder","_sendEnvelope","sendResponse","createSessionEnvelope","sent_at","toISOString","RA","envelopeItem","category","_event","sendClientReports","hook","_updateSessionFromEvent","crashed","errored","exceptions","ex","mechanism","sessionNonTerminal","shouldUpdateAndSend","cW","ticked","_prepareEvent","prepareEvent","R","evt","propagationContext","trace","contexts","traceId","trace_id","spanId","parentSpanId","dsc","span_id","parent_span_id","dynamicSamplingContext","tracing_dynamicSamplingContext","_processEvent","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent","isError","isErrorEvent","beforeSendLabel","$2","dataCategory","prepared","isInternalException","__sentry__","processBeforeSend","beforeSend","beforeSendTransaction","_validateBeforeSendResult","beforeSendResult","invalidValueError","J8","PO","processedEvent","transactionInfo","transaction_info","envelope","_clearOutcomes","outcomes","quantity","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","stack","popSize","getPopSize","framesToPop","reactMinifiedRegexp","eventFromUnknownInput","syntheticException","attachStacktrace","isUnhandledRejection","VW","errorEvent","TX","fm","domException","eventFromString","Db","VZ","cO","eventFromPlainObject","hub","getClient","normalizeDepth","getNonErrorObjectExceptionValue","zf","captureType","getObjectClassName","getPrototypeOf","extra","__serialized__","normalize","Qy","EG","synthetic","WINDOW","worldwide","n2","ignoreOnError","wrap","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","esm_exports","$e","Tb","$Q","xp","descriptor","getOwnPropertyDescriptor","configurable","defineProperty","BrowserClient","sdkSource","SENTRY_SDK_SOURCE","S","J","visibilityState","_flushOutcomes","captureUserFeedback","feedback","createUserFeedbackEnvelope","item","platform","createClientReportEnvelope","discarded_events","timestamp","clientReportItem","time","yW","GlobalHandlers","onunhandledrejection","_installFunc","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","instrument","oq","getHubAndOptions","shouldIgnoreOnError","__sentry_own_request__","HD","_eventFromIncompleteOnError","groups","_enhanceEventWithInitialFrame","addMechanismAndCapture","detail","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","l4","function","in_app","DEFAULT_EVENT_TARGET","TryCatch","XMLHttpRequest","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","$P","originalSend","xhr","xmlHttpRequestProps","wrapOptions","originalFunction","proto","globalObject","eventName","originalRemoveEventListener","originalEventHandler","wrappedEventHandler","validSeverityLevels","parseUrl","fragment","hash","relative","Breadcrumbs","dom","history","sentry","_consoleBreadcrumb","handlerData","keyAttrs","serializeAttribute","maxStringLength","_isEvent","Rt","addBreadcrumb","global","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","addSentryBreadcrumb","breadcrumb","logger","nK","startTimestamp","endTimestamp","sentryXhrData","xU","status_code","fetchData","to","parsedLoc","parsedFrom","parsedTo","applyExceptionGroupFieldsForParentException","exceptionId","is_exception_group","exception_id","applyExceptionGroupFieldsForChildException","parentId","parent_id","LinkedErrors","_limit","limit","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","V9","aggregateExceptionsFromError","prevExceptions","newExceptions","newException","newExceptionId","childError","$G","maxValueLength","HttpContext","referrer","Referer","Dedupe","currentEvent","previousEvent","_previousEvent","_isSameMessageEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameExceptionEvent","previousException","_getExceptionFromEvent","currentException","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","fingerprint","previousFingerprint","createFrame","chromeRegex","chromeEvalRegex","chromeStackLineParser","parts","isEval","subMatch","extractSafariExtensionDetails","geckoREgex","geckoEvalRegex","geckoStackLineParser","winjsRegex","winjsStackLineParser","defaultStackParser","pE","isSafariExtension","isSafariWebExtension","createTransport","makeRequest","buffer","makePromiseBuffer","remove","splice","$","taskProducer","drain","capturedSetTimeout","bufferSize","rateLimits","filteredEnvelopeItems","gv","envelopeItemDataCategory","mL","isRateLimited","limits","disabledUntil","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","V$","statusCode","updateRateLimits","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","headerDelay","delay","parseRetryAfterHeader","header","headerDate","__sentry__baseTransport__","makeFetchTransport","nativeFetch","getNativeFetchImplementation","supports","Du","sandbox","hidden","contentWindow","pendingBodySize","pendingCount","requestSize","requestOptions","keepalive","fetchOptions","makeXHRTransport","onreadystatechange","getResponseHeader","setRequestHeader","defaultIntegrations","__SENTRY_RELEASE__","SENTRY_RELEASE","autoSessionTracking","Sq","getIntegrationsToSetup","userIntegrations","isDefaultInstance","lE","finalIntegrations","filterDuplicates","integrationsByName","currentInstance","debugIndex","findIndex","arr","debugInstance","Ak","initAndBind","clientClass","debug","enable","getScope","update","initialScope","bindClient","startSessionTracking","startSessionOnHub","showReportDialog","getStackTop","getUser","lastEventId","script","async","crossOrigin","src","getReportDialogEndpoint","dsnLike","dialogOptions","endpoint","encodedOptions","onLoad","injectionPoint","startSession","ignoreDuration","DEFAULT_ENVIRONMENT","notifyEventProcessors","processors","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","_sentry_utils__WEBPACK_IMPORTED_MODULE_3__","final","getGlobalEventProcessors","_sentry_utils__WEBPACK_IMPORTED_MODULE_0__","addGlobalEventProcessor","captureContext","_hub_js__WEBPACK_IMPORTED_MODULE_0__","setContext","setExtra","setUser","withScope","Hub","_scope_js__WEBPACK_IMPORTED_MODULE_0__","_version","_stack","isOlderThan","pushScope","clone","getStack","popScope","_lastEventId","DM","_withClient","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","Cf","setTags","setExtras","extras","setTag","configureScope","run","oldHub","makeMain","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","endSession","_sendSessionUpdate","layer","_session_js__WEBPACK_IMPORTED_MODULE_4__","RJ","setSession","environment","_constants_js__WEBPACK_IMPORTED_MODULE_5__","_sentry_utils__WEBPACK_IMPORTED_MODULE_6__","Hv","currentSession","shouldSendDefaultPii","Boolean","sendDefaultPii","carrier","getMainCarrier","__SENTRY__","extensions","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","acs","getGlobalHub","Scope","_notifyingListeners","_scopeListeners","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","_session_js__WEBPACK_IMPORTED_MODULE_0__","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setFingerprint","setLevel","setTransactionName","setSpan","span","getSpan","getTransaction","updatedScope","maxCrumbs","breadcrumbs","getLastBreadcrumb","clearBreadcrumbs","addAttachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","getTraceContext","getDynamicSamplingContext","transactionName","_applyFingerprint","scopeBreadcrumbs","_getBreadcrumbs","_eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__","RP","fH","setSDKProcessingMetadata","setPropagationContext","getPropagationContext","_sentry_utils__WEBPACK_IMPORTED_MODULE_4__","makeSession","startingTime","ph","sid","started","duration","Jr","did","abnormal_mechanism","attrs","ip_address","ipAddress","user_agent","updateSession","closeSession","getDynamicSamplingContextFromClient","public_key","segment","user_segment","_constants_js__WEBPACK_IMPORTED_MODULE_1__","normalizeMaxBreadth","applyClientOptions","dist","integrationNames","applyDebugIds","debugIdStackFramesCache","debugIdMap","_sentry_utils__WEBPACK_IMPORTED_MODULE_7__","_sentryDebugIds","cachedDebugIdStackFrameCache","debugIdStackParserCache","filenameDebugIdMap","acc","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","debug_id","finalScope","_scope_js__WEBPACK_IMPORTED_MODULE_2__","clientEventProcessors","_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__","applyDebugMeta","abs_path","debug_meta","images","code_file","normalizeEvent","depth","maxBreadth","normalized","_sentry_utils__WEBPACK_IMPORTED_MODULE_8__","Fv","spans","_worldwide_js__WEBPACK_IMPORTED_MODULE_0__","Rf","htmlTreeAsString","elem","nextStr","currentElem","_htmlElementAsString","classes","attr","tagName","keyAttrPairs","keyAttr","keyAttrPair","_is_js__WEBPACK_IMPORTED_MODULE_1__","allowedAttrs","getLocationHref","getDomElement","querySelector","DSN_REGEX","dsnToString","withPassword","pass","dsnFromComponents","components","makeDsn","dsnFromString","lastPath","projectMatch","validateDsn","hasMissingRequiredComponent","requiredComponents","component","_logger_js__WEBPACK_IMPORTED_MODULE_0__","isBrowserBundle","__SENTRY_BROWSER_BUNDLE__","getSDKSource","createEnvelope","items","addItemToEnvelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItemType","encodeUTF8","utf8","TextEncoder","encode","serializeEnvelope","envHeaders","append","itemHeaders","Uint8Array","stringifiedPayload","_normalize_js__WEBPACK_IMPORTED_MODULE_0__","concatBuffers","buffers","totalLength","buf","merged","createAttachmentEnvelopeItem","_object_js__WEBPACK_IMPORTED_MODULE_1__","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","replay_event","replay_recording","check_in","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","createEventEnvelopeHeaders","_dsn_js__WEBPACK_IMPORTED_MODULE_2__","lastHref","debounceTimerID","lastCapturedEvent","instrument_WINDOW","SENTRY_XHR_DATA_KEY","instrumented","addInstrumentationHandler","RU","originalConsoleMethod","LD","triggerHandlers","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","originalAddEventListener","__sentry_instrumentation_handlers__","handlerForType","refCount","instrumentXHR","xhrproto","originalOpen","xhrInfo","toUpperCase","request_headers","onreadystatechangeHandler","readyStateArgs","setRequestHeaderArgs","t$","originalFetch","parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","instrumentHistory","supportsHistory","isChromePackagedApp","hasHistoryApi","pushState","replaceState","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","_oldOnErrorHandler","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","resource","globalListener","shouldSkipDOMEvent","isContentEditable","areSimilarDomEvents","objectToString","wat","isInstanceOf","isBuiltin","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","isSyntheticEvent","isVueViewModel","__isVue","_isVue","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","wrappedFuncs","wrappedLevels","makeLogger","disable","isEnabled","uuid4","gbl","crypto","msCrypto","getRandomByte","randomUUID","getRandomValues","getFirstException","getEventDescription","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mergedData","checkOrSetAlreadyCaught","__sentry_captured__","arrayify","maybeArray","isNodeEnv","_env_js__WEBPACK_IMPORTED_MODULE_0__","dynamicRequire","mod","require","normalizeToSize","maxSize","encodeURI","maxProperties","visit","memo","memoBuilder","hasWeakSet","WeakSet","inner","memoize","unmemoize","i2","stringified","stringifyValue","_events","y1","Cy","objName","getConstructorName","remainingDepth","valueWithToJSON","jsonValue","numAdded","visitable","Sh","visitKey","visitValue","fill","replacementFactory","wrapped","markFunctionWrapped","addNonEnumerableProperty","writable","o_O","getOriginalFunction","__sentry_original__","urlEncode","convertToPlainObject","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","kK","_browser_js__WEBPACK_IMPORTED_MODULE_2__","extractedProps","extractExceptionKeysForMessage","maxLength","_string_js__WEBPACK_IMPORTED_MODULE_3__","includedKeys","dropUndefinedKeys","inputValue","memoizationMap","_dropUndefinedKeys","memoVal","returnValue","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","createStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","stripSentryFramesAndReverse","localStack","stackParserFromStackParserOptions","defaultFunctionName","getFunctionName","truncate","safeJoin","_is_js__WEBPACK_IMPORTED_MODULE_0__","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","isMatchingPattern","Kj","supportsFetch","Request","isNativeFetch","supportsNativeFetch","doc","_logger_js__WEBPACK_IMPORTED_MODULE_1__","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","val","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","dateTimestampSource","nowSeconds","platformPerformance","_node_js__WEBPACK_IMPORTED_MODULE_1__","KV","getNodePerformance","perfHooks","l$","module","performance","getBrowserPerformance","timeOrigin","timestampSource","dateTimestampInSeconds","timestampInSeconds","browserPerformanceTimeOrigin","performanceNow","dateNow","timeOriginDelta","navigationStart","timing","navigationStartDelta","hasNavigationStart","isGlobalObj","GLOBAL_OBJ","getGlobalObject","getGlobalSingleton","creator","singleton","exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","curByte","revLookup","fromByteArray","uint8","extraBytes","len2","encodeChunk","lookup","num","ieee754","customInspectSymbol","Symbol","createBuffer","Buffer","encodingOrOffset","allocUnsafe","fromString","encoding","isEncoding","actual","ArrayBuffer","isView","fromArrayView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","SharedArrayBuffer","valueOf","fromObject","isBuffer","checked","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","hexSliceLookupTable","utf8Slice","asciiSlice","ret","latin1Slice","utf16leSlice","res","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","codePoints","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","lW","h2","TYPED_ARRAY_SUPPORT","typedArraySupport","foo","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","remaining","hexWrite","strLen","blitBuffer","asciiToBytes","byteArray","utf16leToBytes","units","hi","_arr","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","dst","alphabet","table","i16","typeOf","cloneDeep","instanceClone","cloneObjectDeep","cloneArrayDeep","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","LN2","isObjectObject","ctor","prot","ctorName","isGeneratorFn","isArguments","toDateString","getDate","setDate","RegExp","flags","ignoreCase","multiline","throw","__NEXT_P","common_error","mapError","navbar","useStoreon","errorStyling","colors","mediumgrey","emotion_react_jsx_runtime_browser_esm","tZ","div","BX","Image","alt","ErrorImage","h3","button","onClick","clearCache","clearLoginState","logout","Explanation","strong","rel","param","explanation","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","img","modals","FOOD_FRAGMENT","gql","CREATE_FOOD","UPDATE_FOOD","DELETE_FOOD","HANDLE_MISSING_BASIC_FOODS","LOG_FRAGMENT","CREATE_LOG","CREATE_LOGS","UPDATE_LOG","DELETE_LOG","DELETE_LOGS","PROFILE_FRAGMENT","GET_PROFILE","UPDATE_PROFILE","DELETE_PROFILE","SUBSCRIBE_TO_DATA","RECIPE_BASE_FRAGMENT","INGREDIENT_BASE_FRAGMENT","RECIPE_FRAGMENT","CREATE_RECIPE","UPDATE_RECIPE","DELETE_RECIPE","getBasicFoods","basicFoodsManifest","basicFoods","basicFoodId","food","basicFoodsJson","profileKey","basicFoodsKey","fetchBasicFoodsKey","getStore","dispatch","pathname","loginKey","tokenKey","closeAllModals","store","getApiUrl","NEXT_PUBLIC_HASURA_DOMAIN","cypress","NEXT_PUBLIC_CYPRESS","isProduction","getConfig","resourceServerUri","resourceServerUriWs","firebaseEnabled","NEXT_PUBLIC_USE_FIREBASE","getFirebaseConfig","NEXT_PUBLIC_FIREBASE_CONFIG","ax","axios","withCredentials","interceptors","use","stopRequestIfOffline","showMessage","closeModals","isOffline","toast","getHasuraClient","JWT","getJWT","variables","Authorization","handleError","buffer_utils_encoder","buffer_utils_decoder","TextDecoder","base64url_encodeBase64","unencoded","errors_JOSEError","errors_JOSENotSupported","errors_JWSInvalid","errors_JWTInvalid","webcrypto","webcrypto_isCryptoKey","CryptoKey","validate_crit","Err","recognizedDefault","recognizedOption","protectedHeader","joseHeader","recognized","crit","parameter","week","day","year","REGEX","lib_secs","matched","parseFloat","unit","round","check_key_length","alg","modulusLength","unusable","isAlgorithm","getHashLength","types","last","invalid_key_input","withAlg","is_key_like","is_key_like_types","sign","cryptoKey","get_sign_verify_key_getCryptoKey","usage","checkSigCryptoKey","usages","crypto_key_getNamedCurve","namedCurve","checkUsage","subtle","importKey","subtleDsa","saltLength","is_disjoint","sources","symmetricTypeCheck","asymmetricTypeCheck","check_key_type","symmetric","sign_FlattenedSign","_payload","setProtectedHeader","_protectedHeader","setUnprotectedHeader","unprotectedHeader","_unprotectedHeader","buffer_utils_concat","runtime_sign","jws","decode","protected","CompactSign","_flattened","lib_epoch","produce_ProduceJWT","is_object_isObject","setIssuer","iss","setSubject","subject","setAudience","audience","aud","setJti","jwtId","jti","setNotBefore","nbf","setExpirationTime","setIssuedAt","SignJWT","sig","tokenToUse","jose","objectToReturn","showModal","hideFromSentry","sameEmail","Sentry","profiles","authId","NEXT_PUBLIC_VERSION","offline","alert","currentWebsocketClient","unsubscribeAll","success","WATER","addBasicFoodsToProfile","missingBasicFoods","processIngredient","ingredient","basicFood","ingredientToFood","childRecipe","ingredientToChildRecipe","ingredients","logsWithBasicFoods","logs","logToFood","recipe","logToRecipe","recipesWithBasicFoods","recipes","profilesWithBasicFoods","produce","draft","_previousCls","_previousFid","_previousLcp","_lcpEntry","_clsEntry","canvasService","canvasCtx","errorHandler","wrappedEmit","takeFullSnapshot","canvasManager","esm_handlers","NodeType","EventType2","IncrementalSource2","MouseInteractions2","PointerTypes2","CanvasContext2","NodeType$1","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","dynamicSamplingContextToSentryBaggageHeader","sentryPrefixedDSC","dscKey","dscValue","objectToBaggageHeader","baggageHeader","objectKey","objectValue","currentIndex","baggageEntry","newBaggageHeader","baggageHeaderToObject","keyOrValue","TRACEPARENT_REGEXP","generateSentryTraceHeader","sampled","sampledString","SpanRecorder","maxlen","_maxlen","spanRecorder","Span","spanContext","esm_time","instrumenter","description","setName","startChild","childSpan","opStr","nameStr","idStr","logMessage","spanMetadata","setData","setStatus","setHttpStatus","httpStatus","spanStatus","spanStatusfromHttpCode","isSuccess","finish","toTraceparent","toContext","updateWithContext","start_timestamp","Transaction","transactionContext","_measurements","_hub","_name","_trimEnd","trimEnd","incomingDynamicSamplingContext","_frozenDynamicSamplingContext","newName","initSpanRecorder","setMeasurement","setMetadata","newMetadata","_finishTransaction","maybeSampleRate","sample_rate","setHub","finishedSpans","hasMeasurements","measurements","TRACING_DEFAULTS","idleTimeout","finalTimeout","heartbeatInterval","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","IdleTransaction","_idleHub","_idleTimeout","_finalTimeout","_heartbeatInterval","_onScope","activities","_heartbeatCounter","_finished","_idleTimeoutCanceledPermanently","_beforeFinishCallbacks","_finishReason","_restartIdleTimeout","spanStartedBeforeTransactionFinish","timeoutWithMarginOfError","spanEndedBeforeFinalTimeout","stringifiedSpan","registerBeforeFinishCallback","_pingHeartbeat","cancelIdleTimeout","restartOnChildSpanChange","_idleTimeoutID","setFinishReason","_beat","heartbeatString","_prevHeartbeatString","getActiveTransaction","maybeHub","errorsInstrumented","errorCallback","activeTransaction","hasTracingEnabled","maybeOptions","__SENTRY_TRACING__","enableTracing","sampleTransaction","samplingContext","rate","tracesSampler","parentSampled","tracesSampleRate","_startTransaction","configInstrumenter","transactionInstrumenter","_experiments","maxSpans","startIdleTransaction","onScope","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","generateUniqueID","getNavigationEntryFromPerformanceTiming","navigation","navigationEntry","entryType","startTime","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","getActivationStart","navEntry","activationStart","initMetric","navigationType","prerendering","rating","observe","opts","PerformanceObserver","supportedEntryTypes","po","getEntries","buffered","onHidden","once","onHiddenOrPageHide","onCLS","report","sessionValue","sessionEntries","handleEntries","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","onReport","stopListening","takeRecords","firstHiddenTime","initHiddenTime","trackChanges","timeStamp","getVisibilityWatcher","onFID","visibilityWatcher","handleEntry","processingStart","disconnect","reportedMetricIDs","onLCP","lastEntry","capture","addLcpInstrumentationHandler","addMetricObserver","instrumentLcp","addPerformanceInstrumentationHandler","addHandler","instrumentPerformanceObserver","durationThreshold","getCleanupCallback","typeHandlers","instrumentCls","instrumentFid","instrumentFn","previousValue","isMeasurementValue","_startChild","ctx","msToSec","getBrowserPerformanceAPI","_performanceCursor","_addPerformanceNavigationTiming","eventEnd","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","enableHTTPTimings","tracingOrigins","tracePropagationTargets","addHTTPTimings","cleanup","isPerformanceResourceTiming","nextHopProtocol","initiatorType","endsWith","spanData","resourceTimingEntryToSpanData","resourceTiming","extractNetworkProtocol","char","timingSpanData","Z1","getAbsoluteTime","redirectStart","fetchStart","domainLookupStart","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseStart","responseEnd","setHeaderOnXhr","sentryTraceHeader","sentryBaggageHeader","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","enableLongTask","BrowserTracing","_hasSetTracePropagationTargets","addTracingExtensions","cu","_collectWebVitals","startTrackingWebVitals","mark","fidCallback","clsCallback","lcpCallback","enableInteractions","instrumentRouting","shouldCreateSpanForRequest","clientOptionsTracePropagationTargets","_createRouteTransaction","onStartRouteTransaction","statusType","_registerInteractionListener","instrumentOutgoingRequests","shouldCreateSpan","shouldAttachHeadersWithTargets","createdSpan","fetchCallback","shouldAttachHeaders","shouldCreateSpanResult","__span","contentLength","contentLengthNum","parentSpan","addTracingHeadersToFetchRequest","requestSpan","baggage","newHeaders","existingBaggageHeader","newBaggageHeaders","xhrCallback","__sentry_xhr_span_id__","beforeNavigate","isPageloadTransaction","sentryTrace","getMetaContent","traceparentData","tracingContextFromHeaders","extractTraceparentData","traceparent","baggageHeaderToDynamicSamplingContext","baggageObject","curr","currBaggageObject","nonPrefixedKey","expandedContext","modifiedContext","finalContext","_latestRouteName","_latestRouteSource","idleTransaction","addPerformanceEntries","responseStartTimestamp","requestStartTimestamp","performanceEntries","_addMeasureSpans","measureStartTimestamp","firstHidden","shouldRecord","resourceName","_addResourceSpans","transferSize","encodedBodySize","decodedBodySize","renderBlockingStatus","_trackNavigator","connection","effectiveType","rtt","deviceMemory","hardwareConcurrency","measurementTimestamp","normalizedValue","fidMark","measurementName","inflightInteractionTransaction","registerInteractionTransaction","currentTransaction","metaName","metaTag","qT","removeTrailingSlash","esm_WINDOW","REPLAY_SESSION_KEY","UNABLE_TO_SEND_REPLAY","isShadowRoot","shadowRoot","isNativeShadowDom","stringifyStylesheet","cssText","stringifyRule","importStringified","styleSheet","escapeImportStatement","statement","layerName","supportsText","media","mediaText","isCSSStyleRule","selectorText","cssStringified","Mirror","idNodeMap","nodeMetaMap","getId","getMeta","getNode","getIds","removeNodeFromMap","childNode","hasNode","meta","oldNode","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","_id","tagNameRegex","genId","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","getHref","transformAttribute","maskAttributeFn","getAbsoluteSrcsetString","collectCharacters","regEx","descriptorsStr","inParens","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","elementClassMatchesRegex","regex","eIndex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","skipChild","inlineStylesheet","maskTextFn","slimDOMOptions","dataURLOptions","inlineImages","recordCanvas","onSerialize","onIframeLoad","iframeLoadTimeout","onStylesheetLoad","stylesheetLoadTimeout","keepIframeSrcFn","newlyAddedElement","preserveWhiteSpace","_serializedNode","serializeNode","rootId","getRootId","docId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","serializeElementNode","isCustomElement","needBlock","_isBlockedElement","getValidTagName","HTMLFormElement","processedTagName","stylesheet","_cssText","textContent","forceMask","selected","__context","is2DCanvasBlank","canvas","getImageData","originalGetImageData","pixelBuffer","Uint32Array","pixel","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","blankCanvasDataURL","image","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","getBoundingClientRect","class","rr_width","rr_height","contentDocument","rr_src","customElements","isSVG","isSVGElement","ownerSVGElement","isCustom","TEXT_NODE","serializeTextNode","parentTagName","isStyle","isScript","isTextarea","previousSibling","textarea","isInputMasked","Text","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","slimDOMExcluded","sn","comment","as","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","childN","serializedChildNode","isElement$1","isShadow","onceIframeLoaded","iframeEl","win","fired","blankUrl","iframeDoc","serializedIframeNode","onceStylesheetLoaded","styleSheetLoadTimeout","styleSheetLoaded","serializedLinkNode","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","leading","trailing","hookSetter","isRevoked","patch","defineProperties","__rrweb_original__","Proxy","Reflect","nowTimestamp","getWindowScroll","scrollingElement","pageXOffset","documentElement","pageYOffset","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","getRootNode","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","shadowHostInDom","getRootShadowHost","rootShadowHost","EventType","IncrementalSource","MouseInteractions","PointerTypes","CanvasContext","DoubleLinkedList","tail","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","removes","mapRemoves","movedMap","addedSet","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","attribute","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","unattachedDoc","implementation","createHTMLDocument","attributeName","old","pname","getPropertyValue","newPriority","getPropertyPriority","addedNodes","genAdds","removedNodes","nodeId","deepDelete","isAncestorRemoved","processedNodeManager","inOtherBuffer","targetId","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","_isAncestorInSet","callbackWrapper","mutationBuffers","getEventTarget","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","scrollCb","sampling","updatePosition","defaultView","scrollLeftTop","scroll","wrapEventWithUserTriggeredFlag","userTriggered","INPUT_TAGS","lastInputValueMap","getNestedCSSRulePositions","recurse","childRule","parentRule","CSSGroupingRule","hasNestedCSSRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","unshift","parentStyleSheet","getIdAndStyleId","styleMirror","styleId","initAdoptedStyleSheetObserver","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","adoptStyleSheets","initObservers","hooks","currentWindow","mergeHooks","mousemoveCb","mouseInteractionCb","viewportResizeCb","inputCb","mediaInteractionCb","styleSheetRuleCb","styleDeclarationCb","canvasMutationCb","fontCb","selectionCb","customElementCb","mutation","mousemove","mouseInteraction","viewportResize","mediaInteaction","styleSheetRule","styleDeclaration","canvasMutation","font","selection","customElement","mutationObserver","mousemoveHandler","initMoveObserver","timeBaseline","threshold","callbackThreshold","mousemoveCallback","positions","wrappedCb","totalOffset","timeOffset","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","mouseInteractionHandler","initMouseInteractionObserver","disableMap","currentPointerType","getHandler","pointerType","thisEventKey","eventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","PointerEvent","TouchStart","TouchEnd","scrollHandler","viewportResizeHandler","initViewportResizeObserver","lastH","lastW","updateDimension","inputHandler","initInputObserver","ignoreClass","ignoreSelector","userTriggeredOnInput","isTrusted","isChecked","cbWithDedup","lastInputValue","events","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","mediaInteractionHandler","initMediaInteractionObserver","volume","muted","playbackRate","styleSheetObserver","initStyleSheetObserver","replaceSync","CSSStyleSheet","thisArg","argumentsList","deleteRule","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","typeKey","adoptedStyleSheetObserver","styleDeclarationObserver","initStyleDeclarationObserver","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","removeProperty","fontObserver","collectFonts","initFontObserver","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","selectionObserver","initSelectionObserver","collapsed","updateSelection","getSelection","isCollapsed","ranges","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","blocked","customElementObserver","initCustomElementObserver","define","pluginHandlers","plugin","plugins","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","getRemoteId","getRemoteIds","ids","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","addLoadListener","IframeManager","crossOriginIframeMap","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","iframeSourceWindow","transformedEvent","transformCrossOriginEvent","isCheckout","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","iframeMirror","child","ShadowDomManagerNoop","ShadowDomManager","shadowDoms","restoreHandlers","patchAttachShadow","iframeElement","option","arraybuffer","canvasVarMap","saveWebGLVar","contextMap","isInstanceOfWebGLObject","serializeArgs","serializeArg","Float32Array","Float64Array","Int32Array","Uint16Array","Int16Array","Int8Array","Uint8ClampedArray","rr_type","DataView","HTMLImageElement","HTMLCanvasElement","ImageData","supportedWebGLConstructorNames","webGLConstructorNames","initCanvasContextObserver","setPreserveDrawingBufferToTrue","ctxName","contextAttributes","preserveDrawingBuffer","patchGLPrototype","recordArgs","hookHandler","setter","WorkerFactory","decodeBase64","enableUnicode","binaryString","binaryView","Blob","createObjectURL","Worker","CanvasManagerNoop","CanvasManager","pendingCanvasMutations","resetObservers","rafStamps","latestId","invokeId","newFrame","initCanvasMutationObserver","initCanvasFPSObserver","fps","rafId","canvasContextReset","snapshotInProgressMap","worker","onmessage","commands","timeBetweenSnapshots","lastSnapshotTime","getCanvas","matchedCanvas","takeCanvasSnapshots","_arguments","P","generator","getContextAttributes","COLOR_BUFFER_BIT","bitmap","createImageBitmap","step","rejected","done","adopt","cancelAnimationFrame","startRAFTimestamping","startPendingCanvasMutationFlusher","canvas2DReset","initCanvas2DMutationObserver","props2D","CanvasRenderingContext2D","canvasWebGL1and2Reset","initCanvasWebGLMutationObserver","WebGLRenderingContext","WebGL","WebGL2RenderingContext","WebGL2","flushPendingCanvasMutations","setLatestRAFTimestamp","flushPendingCanvasMutationFor","valuesWithType","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","linkEl","trackStylesheetInLinkElement","adoptedStyleSheetData","styleIds","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","thisBuffer","destroy","wrapEvent","recording","record","lastFullSnapshotEvent","checkoutEveryNms","checkoutEveryNth","maskAllInputs","_maskInputOptions","_slimDOMOptions","packFn","mousemoveWait","recordAfter","inEmittingFrame","passEmitsToParent","month","number","tel","select","radio","checkbox","polyfill","NodeList","DOMTokenList","incrementalSnapshotCount","exceedCount","exceedTime","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","getMirror","nodeMirror","__RRWEB_EXCLUDE_CANVAS__","__RRWEB_EXCLUDE_SHADOW_DOM__","snapshot","slimDOM","initialOffset","CustomElement","timestampToMs","isMs","addBreadcrumbEvent","replay","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","getClickTargetNode","getTargetNode","closestInteractive","closest","addCustomEvent","freezePage","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","addListeners","nowInSeconds","cleanupWindowOpen","originalWindowOpen","_handleMultiClick","obs","_teardown","removeListeners","_checkClickTimeout","handleClick","ignoreElement","SLOW_CLICK_TAGS","newClick","clickBreadcrumb","clickCount","_scheduleCheckClicks","_getClicks","_checkClicks","timedOutClicks","mutationAfter","scrollAfter","_generateBreadcrumbs","hadScroll","hadMutation","timeAfterClickMs","endReason","route","getCurrentRoute","createBreadcrumb","ATTRIBUTES_TO_RECORD","handleDomListener","handleDom","getDomTarget","isClick","getBaseDomBreadcrumb","clickDetector","altKey","metaKey","ctrlKey","shiftKey","getAttributesToRecord","normalizedKey","ENTRY_TYPES","responseStatus","esm_getAbsoluteTime","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","logInfo","shouldAddBreadcrumb","logInfoNextTick","EventBufferSizeExceededError","EventBufferArray","_totalSize","hasCheckout","hasEvents","addEvent","eventSize","eventsRet","getEarliestTimestamp","WorkerHandler","_worker","ensureReady","_ensureReadyPromise","terminate","_getAndIncrementId","EventBufferCompressionWorker","_earliestTimestamp","_sendEventToWorker","_finishRequest","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","ensureWorkerIsLoaded","_switchToCompressionWorker","addEventPromises","hasSessionStorage","isSampled","saveSession","lastActivity","segmentId","previousSessionId","createSession","sessionSampleRate","allowBuffering","stickySession","initialTime","expiry","targetTime","isSessionExpired","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","loadOrCreateSession","traceInternals","sessionOptions","existingSession","fetchSession","sessionStringFromStorage","sessionObj","addEventSync","shouldAddEvent","_addEvent","eventBuffer","recordingMode","replayOptions","eventAfterPossibleCallback","maybeApplyCallback","beforeAddRecordingEvent","stop","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","handleAfterSendEvent","enforceStatusCode","isBaseTransportSend","handleTransactionEvent","replayContext","traceIds","handleErrorEvent","errorIds","replayId","sendBufferedReplayOrFlush","createPerformanceSpans","addNetworkBreadcrumb","isSentryRequestUrl","ALLOWED_PRIMITIVES","fixJson","incompleteJson","evaluateJson","_evaluateJsonPos","curStep","whitespaceRegex","_isEscaped","previousChar","_handleQuote","_handleObj","_handleArr","_handleComma","completeJson","lastPos","lastStep","_fixLastStep","_maybeFixIncompleteObjValue","startPos","_maybeFixIncompleteArrValue","_findLastArrayDelimiter","getBodySize","URLSearchParams","FormData","formDataStr","_serializeFormData","parseContentLengthHeader","getBodyString","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","_meta","warnings","buildNetworkRequestOrResponse","normalizedBody","normalizeNetworkBody","exceedsSizeLimit","_strIsProbablyJson","first","e3","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","urls","fullUrl","getFullUrl","baseURI","fixedUrl","captureFetchBreadcrumbToReplay","_prepareFetchData","request_body_size","requestBodySize","response_body_size","responseBodySize","captureDetails","networkDetailAllowUrls","networkDetailDenyUrls","_getRequestInfo","networkCaptureBodies","networkRequestHeaders","getHeadersFromOptions","requestBody","_getFetchRequestArgBody","bodyStr","_getResponseInfo","networkResponseHeaders","getAllHeaders","bodyText","_parseFetchBody","e2","allHeaders","captureXhrBreadcrumbToReplay","_prepareXhrData","getResponseHeaders","getAllResponseHeaders","responseText","_LAST_BREADCRUMB","handleScopeListener","handleScope","newBreadcrumb","normalizeConsoleBreadcrumb","isTruncated","normalizedArgs","normalizedArg","fixedJson","addMemoryEntry","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","memory","prepareReplayEvent","eventHint","preparedEvent","sendReplayRequest","recordingData","segment_id","eventContext","preparedRecordingData","prepareRecordingData","payloadWithSequence","replayHeaders","enc","sequence","baseEvent","replay_start_timestamp","error_ids","trace_ids","replay_id","replay_type","replayEvent","cause","TransportStatusCodeError","sendReplay","replayData","retryConfig","_retryCount","captureExceptions","THROTTLED","ReplayContainer","recordingOptions","__init5","__init6","replayPerformanceEntries","_lastActivity","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","debounce","callbackReturnValue","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","_flush","flushMinDelay","flushMaxDelay","_throttledAddEvent","throttle","maxCount","durationSeconds","_cleanup","_getTotalCount","isThrottled","wasThrottled","slowClickTimeout","slowClickIgnoreSelectors","initializeSampling","errorSampleRate","_initializeSessionForSampling","_handleException","_initializeRecording","startBuffering","startRecording","hadFirstEvent","_stopRecording","_isCheckout","setInitialState","createOptionsEvent","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","earliestEvent","_onMutationHandler","stopRecording","forceFlush","_removeListeners","force","deleteSession","pause","resume","_checkSession","continueRecording","flushImmediate","activityTime","hasStoppedRecording","_updateUserActivity","_updateSessionActivity","_maybeSaveSession","cbResult","updateUserActivity","conditionalFlush","cancelFlush","getSessionId","urlPath","_clearContext","lastTransaction","createEventBuffer","workerUrl","_addListeners","_refreshSession","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","addGlobalListeners","handleHistory","handleNetworkBreadcrumbs","beforeAddNetworkBreadcrumb","_isXhrBreadcrumb","enrichXhrBreadcrumb","reqSize","resSize","_isFetchBreadcrumb","enrichFetchBreadcrumb","handleFetch","handleXhr","handleGlobalEventListener","includeAfterSendEventHandling","afterSendHandler","isSessionActive","__rrweb__","isErrorEventSampled","shouldTagReplayId","_performanceCleanupCallback","setupPerformanceObserver","addPerformanceEntry","onEntries","clearCallbacks","getLargestContentfulPaint","clearCallback","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","handleKeyboardEvent","getKeyboardBreadcrumb","isCharacterKey","baseBreadcrumb","expired","_createCustomBreadcrumb","_triggerFullSnapshot","checkout","_addPerformanceEntries","createPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","tooShort","minReplayDuration","tooLong","_flushLock","mutationLimit","mutationBreadcrumbLimit","overMutationLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay","mask","maskAttributes","unmask","block","unblock","ignore","maskFn","privacyOptions","getPrivacyOptions","maskSelector","unmaskSelector","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_setup","getReplayId","finalOptions","loadReplayOptionsFromClient","replaysSessionSampleRate","replaysOnErrorSampleRate","NEXT_PUBLIC_REACT_SENTRY_DSN","errorsToIgnore","startSentry","S1","INGREDIENT_FRAGMENT","getFragments","stringifyQuery","stringQuery","uuid","generate","defaultTargets","Profile","apiToken","updatedAt","foods","calorieTarget","proteinTarget","hidePWAPrompt","INITIAL_STATE","componentStack","ErrorBoundary","Component","_openFallbackReportDialog","showDialog","jp","componentDidCatch","beforeCapture","isAtLeastReact17","major","errorBoundaryError","setCause","seenErrors","setState","componentDidMount","onMount","componentWillUnmount","onUnmount","resetErrorBoundary","onReset","fallback","resetError","isValidElement","__assign","warned","Div100vh","wasRenderedOnClientAtLeastOnce","setWasRenderedOnClientAtLeastOnce","setHeight","other","useState","measureHeight","useEffect","isClient","setMeasuredHeight","styleWithRealHeight","ErrorComponent","listenToPromiseRejectionError","listenToError","useErrors","React","setAutoFreeze","_app","pageProps","Toaster","toastOptions","StoreContext","Head","title","content","modules","getCachedData","cachedProfile","createInitialSlice","updateAndCacheProfile","profileWithBasicsFoods","newState","editor","updateModal","modal","shouldOpen","activeModals","updatedActiveModals","addIngredientModalVisibility","barcodeModalVisibility","bodyFatPercentageModalVisibility","caloricMaintenanceModalVisibility","errorVisibility","exerciseModalVisibility","foodFormModalVisibility","foodModalVisibility","foodToUpdate","helpModalVisibility","Information","informationModalVisibility","itemModalVisibility","itemToUpdate","menuVisibility","modalVisibility","moduleModalVisibility","pwaPromptVisibility","quickAddModalVisibility","recipeFormModalVisibility","recipeModalVisibility","recipeToUpdate","settingsModalVisibility","targetModalVisibility","unitModalVisibility","newNavbar","updatedLog","newLogs","newProfile","changes","diff","background","black","blue","danger","darkblue","darkgrey","darkpurple","green","lightgrey","pink","purple","seashell","white","yellow","lg","md","sm","xlg","xs","xxlg","cachedSetTimeout","cachedClearTimeout","currentQueue","defaultSetTimout","defaultClearTimeout","runTimeout","fun","draining","queueIndex","cleanUpNextTick","drainQueue","runClearTimeout","marker","Item","nextTick","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","umask","for","f","l","q","w","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","deep","cloneBuffer","cloneArrayBuffer","cloneRegExp","crypt0","bufIdx","hexBytes","uuidBin","BUFFER_SIZE","randomBytes","bin","clearBuffer","FirebaseAppImpl","_firebase_app__WEBPACK_IMPORTED_MODULE_2__","_addComponent","_firebase_component__WEBPACK_IMPORTED_MODULE_1__","automaticDataCollectionEnabled","checkDestroyed","INTERNAL","removeApp","deleteApp","_getService","instanceIdentifier","_DEFAULT_ENTRY_NAME","getComponent","instantiationMode","_removeServiceInstance","clearInstance","_addOrOverwriteComponent","ERROR_FACTORY","_firebase_util__WEBPACK_IMPORTED_MODULE_0__","firebase$1","createFirebaseNamespace","namespace","createFirebaseNamespaceCore","firebaseAppImpl","apps","__esModule","initializeApp","rawConfig","r3","appCompat","setLogLevel","onLog","registerComponent","componentName","componentNameWithoutCompat","serviceNamespace","appArg","serviceProps","ZB","serviceFxn","multipleInstances","useAsService","modularAPIs","extendNamespace","_firebase_logger__WEBPACK_IMPORTED_MODULE_3__","jU","sdkVersion","variant","idbProxyableTypes","cursorAdvanceMethods","oldTraps","instanceOfAny","constructors","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","IDBTransaction","wrap_idb_value_wrap","IDBRequest","promisifyRequest","unlisten","IDBCursor","IDBDatabase","getCursorAdvanceMethods","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","cacheDonePromiseForTransaction","DOMException","IDBObjectStore","IDBIndex","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","isVersionServiceProvider","library","logString","name$o","version$1","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","_components","addComponent","addOrOverwriteComponent","heartbeatController","triggerHeartbeat","_clearComponents","dist_index_esm2017","_isDeleted","_config","_automaticDataCollectionEnabled","_container","isDeleted","aH","existingApp","H0","newApp","getApps","libraryKeyOrName","libraryMismatch","versionMismatch","warning","logCallback","Am","Ub","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","platformLogger","agent","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","overwrite","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","heartbeatsCache","heartbeatEntry","hb","dates","countBytes","headerString","today","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","eu","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","onInstanceCreated","setMultipleInstances","setServiceProps","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","deferred","BH","shouldAutoInitialize","getOrInitializeService","setComponent","instanceDeferred","services","isComponentSet","normalizedDeferredIdentifier","onInit","existingCallbacks","invokeOnInitCallbacks","callbacks","ComponentContainer","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","Logger","_logLevel","_logHandler","_userLogHandler","logHandler","userLogHandler","inst","setUserLogHandler","customLogLevel","ignored","_tagged_template_literal","product","utils_toString","kindOf","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isFunction","isNumber","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","allOwnKeys","findKey","_global","isContextDefined","isTypedArray","TypedArray","isHTMLForm","utils_hasOwnProperty","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","utils","isFormData","isArrayBufferView","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","stripBOM","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","searchString","toArray","forEachEntry","pair","matchAll","regExp","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","toCamelCase","toFiniteNumber","defaultValue","generateString","isSpecCompliantForm","toJSONObject","reducedValue","AxiosError","fileName","lineNumber","columnNumber","AxiosError_prototype","customProps","axiosError","isVisitable","removeBrackets","renderKey","dots","predicates","helpers_toFormData","metaTokens","indexes","visitor","defaultVisitor","_Blob","useBlob","convertValue","exposedHelpers","build","charMap","AxiosURLSearchParams","_pairs","AxiosURLSearchParams_prototype","buildURL_encode","buildURL","serializedParams","_encode","serializeFn","serialize","hashmarkIndex","encoder","core_InterceptorManager","synchronous","runWhen","eject","defaults_transitional","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","classes_URLSearchParams","classes_FormData","classes_Blob","isStandardBrowserEnv","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","protocols","helpers_formDataToJSON","buildPath","isNumericKey","isLast","arrayToObject","defaults","transitional","adapter","transformRequest","getContentType","hasJSONContentType","isObjectPayload","setContentType","toURLEncodedForm","formSerializer","helpers","_FormData","stringifySafely","rawValue","transformResponse","JSONRequested","responseType","core_AxiosError","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","parseHeaders","rawHeaders","$internals","normalizeHeader","normalizeValue","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","setHeaders","parseTokens","tokensRE","matcher","deleteHeader","format","targets","asStrings","computed","accessor","internals","accessors","defineAccessor","buildAccessors","accessorName","methodName","arg1","arg2","arg3","transformData","fns","core_AxiosHeaders","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","mapped","headerValue","cookies","expires","secure","toGMTString","buildFullPath","baseURL","requestedURL","relativeURL","isURLSameOrigin","originURL","msie","urlParsingNode","resolveURL","requestURL","helpers_speedometer","samplesCount","firstSampleTS","timestamps","chunkLength","startedAt","bytesCount","passed","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","inRange","progress","estimated","isXHRAdapterSupported","onCanceled","requestData","requestHeaders","cancelToken","signal","unescape","fullPath","onloadend","responseHeaders","responseData","statusText","settle","ERR_BAD_REQUEST","paramsSerializer","responseURL","onabort","ECONNABORTED","ERR_NETWORK","timeoutErrorMessage","ETIMEDOUT","xsrfValue","onDownloadProgress","onUploadProgress","upload","abort","aborted","parseProtocol","knownAdapters","http","renderReason","isResolvedHandle","adapters","getAdapter","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","lib_defaults","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","validator","formatMessage","desc","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios_validators","Axios","instanceConfig","configOrUrl","boolean","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","resolvePromise","_listeners","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","createInstance","defaultConfig","core_Axios","toFormData","Cancel","spread","isAxiosError","formToJSON","default","lib_axios","_firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__","_cordovaWindow","_generateHandlerUrl","BuildInfo","index_94e5f531","at","sessionDigest","computeSha256","au","av","aw","iosBundleId","ay","_waitForAppResume","eventListener","iabRef","cordova","onCloseTimer","authEventSeen","closeBrowserTab","browsertab","resumed","aA","visibilityChanged","addPassiveListener","removePassiveListener","stringToArrayBuffer","buff","view","digest","padStart","CordovaAuthEventManager","aC","passiveListeners","initPromise","resolveInialized","resetRedirect","initialized","_getAndRemoveEvent","persistenceKey","aD","aE","searchParamsOrEmpty","cordovaPopupRedirectResolver","aF","aG","attachCallbackListeners","_checkCordovaConfiguration","_k","aB","universalLinks","missingPlugin","openUrl","isAvailable","InAppBrowser","_generateNewEvent","generateSessionId","idx","_performRedirect","handlerUrl","browserTabIsAvailable","az","_cb","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","partialEvent","_eventFromPartialAndUrl","callbackUrl","_getDeepLinkFromCallback","errorObject","parseJsonOrNull","packagePrefix","existingHandleOpenURL","_isAndroidOrIosCordovaScheme","_isWebStorageSupported","aM","_isLocalStorageNotSynchronized","_isIe11","_isEdge","_isPopupRedirectSupported","UG","_isLikelyCordova","_isCordova","timeoutId","Persistence","LOCAL","NONE","SESSION","_assert$3","PERSISTENCE_KEY","_savePersistenceForRedirect","getSessionStorageIfAvailable","_assert$2","CompatPopupRedirectResolver","browserResolver","cordovaResolver","underlyingResolver","selectUnderlyingResolver","assertedUnderlyingResolver","isCordova","credentialFromObject","W","V","X","aP","M","Y","convertCredential","credentialPromise","attachExtraErrorFields","mfaErr","MultiFactorResolver","ar","credErr","additionalUserInfo","ap","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","USER_MAP","linkAndRetrieveDataWithCredential","a1","aI","reauthenticateAndRetrieveDataWithCredential","a2","af","ao","ak","al","phoneCredential","aj","ag","_assert$1","Auth","linkUnderlyingAuth","buildPersistenceHierarchy","persistences","_getPersistencesFromRedirect","Q","E","useEmulator","a6","a7","a5","a9","fetchProvidersForEmail","ae","ac","addFrameworkForLogging","errorFn","wrapObservers","ab","a4","converted","_validatePersistenceArgument","isIndexedDBFullySupported","signInAndRetrieveDataWithCredential","a0","a3","aa","ad","a8","oldNext","authProvider","ActionCodeInfo","Operation","U","K","currentScope","NOTHING","DRAFTABLE","DRAFT_STATE","die","isDraft","isDraftable","isMap","isSet","objectCtorString","Ctor","each","iter","getArchtype","type_","propOrOldValue","latest","copy_","base_","shallowCopy","strict","ownKeys","dontMutateFrozenCollections","getPlugin","pluginKey","usePatchesInScope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer2","immer_","canAutoFreeze_","unfinalizedDrafts_","revoke_","revoked_","processResult","baseDraft","isReplaced","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","childValue","finalizeProperty","scope_","finalized_","resultEach","isSet2","generatePatches_","parentState","targetObject","rootPath","targetIsSet","assigned_","autoFreeze_","objectTraps","readPropFromProto","getDescriptorFromProto","draft_","prepareCopy","createProxy","current2","currentState","markChanged","deleteProperty","owner","arrayTraps","useStrictShallowCopy_","proxyMap_","proxySet_","createProxyProxy","isManual_","traps","revoke","revocable","immer","defaultBase","base2","hasError","ip","produceWithPatches","patches","inversePatches","autoFreeze","useStrictShallowCopy","setUseStrictShallowCopy","createDraft","currentImpl","finishDraft","applyPatches","applyPatchesImpl","applyPatches_","_goober","innerHTML","T","dist_b","matchMedia","dist_u","toastId","toasts","visible","pausedAt","pauseDuration","blank","loading","custom","I","G","ariaProps","role","dist_h","dist_n","dismiss","ee","D","useCallback","reverseOrder","gutter","defaultPosition","updateHeight","startPause","endPause","calculateOffset","oe","se","primary","secondary","pe","de","ue","le","Te","fe","icon","iconTheme","ye","ge","be","Se","Ae","animation","F","Ee","onHeightUpdate","Re","justifyContent","right","display","transition","transform","ve","Ie","containerStyle","containerClassName","pointerEvents","onMouseEnter","onMouseLeave","_t","useIsomorphicLayoutEffect","rerender","changed","useMemo"],"sourceRoot":""}